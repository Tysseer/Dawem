{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PropTypes from \"prop-types\";\nimport SVGLoader from \"../helpers/SVGLoader.js\";\nimport StringsManager, * as strings from \"../helpers/StringsManager\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  height = _Dimensions$get.height,\n  width = _Dimensions$get.width;\nimport ActionBtn from \"../../components/ActionBtn\";\nimport { getTitleFontBasicStyle, getLargeContentFontBasicStyle } from \"../helpers/scripts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ModalCongrats = function (_Component) {\n  _inherits(ModalCongrats, _Component);\n  var _super = _createSuper(ModalCongrats);\n  function ModalCongrats(props) {\n    var _this;\n    _classCallCheck(this, ModalCongrats);\n    _this = _super.call(this, props);\n    _this.state = {\n      animatedValue: new Animated.Value(0)\n    };\n    _this.animTimer = Animated.timing(_this.state.animatedValue, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: true\n    }).start();\n    return _this;\n  }\n  _createClass(ModalCongrats, [{\n    key: \"handlePress\",\n    value: function handlePress() {\n      this.state.animatedValue = new Animated.Value(0);\n      this.animTimer = Animated.timing(this.state.animatedValue, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true\n      }).start();\n      this.props.setModalVisible(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var strMgr = new StringsManager();\n      strMgr.setLanguage(this.props.strLang);\n      return _jsx(Modal, {\n        transparent: true,\n        visible: true,\n        children: _jsx(Animated.View, {\n          style: {\n            transform: [{\n              translateY: this.state.animatedValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [-600, height / 5]\n              })\n            }],\n            height: \"37%\",\n            width: \"93%\",\n            paddingHorizontal: 5,\n            borderRadius: 12,\n            backgroundColor: \"#dddddd\",\n            justifyContent: \"center\",\n            alignSelf: \"center\"\n          },\n          children: _jsxs(View, {\n            style: styles.contentContainer,\n            children: [_jsx(TouchableWithoutFeedback, {\n              onPress: this.handlePress.bind(this),\n              children: _jsx(Image, {\n                style: styles.badge,\n                source: this.props.badgeImg\n              })\n            }), _jsx(Text, {\n              style: this.getCongratsTextStyle(),\n              children: strMgr.getStr(this.props.badgeMsg)\n            }), _jsx(ActionBtn, {\n              style: {\n                width: \"62%\"\n              },\n              text: strMgr.getStr(strings.STR_ALHAMDULELLAH),\n              fullWidth: false,\n              handler: this.handlePress.bind(this),\n              lang: this.props.strLang\n            })]\n          })\n        })\n      });\n    }\n  }, {\n    key: \"getCongratsTextStyle\",\n    value: function getCongratsTextStyle() {\n      return [{\n        textAlign: \"center\",\n        color: \"#0B721E\",\n        marginVertical: height / 200\n      }, getLargeContentFontBasicStyle(this.props.strLang)];\n    }\n  }]);\n  return ModalCongrats;\n}(Component);\nModalCongrats.propTypes = {\n  strLang: PropTypes.string.isRequired,\n  badgeImg: PropTypes.any.isRequired,\n  badgeMsg: PropTypes.number.isRequired,\n  setModalVisible: PropTypes.func.isRequired\n};\nexport { ModalCongrats as default };\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  badge: {\n    width: 90,\n    height: 90\n  },\n  contentContainer: {\n    width: \"90%\",\n    height: \"90%\",\n    alignSelf: \"center\",\n    marginTop: \"8%\",\n    marginBottom: 20,\n    marginHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    borderBottomLeftRadius: 30,\n    borderBottomRightRadius: 30\n  }\n});","map":{"version":3,"names":["React","Component","PropTypes","SVGLoader","StringsManager","strings","Dimensions","get","height","width","ActionBtn","getTitleFontBasicStyle","getLargeContentFontBasicStyle","ModalCongrats","props","state","animatedValue","Animated","Value","animTimer","timing","toValue","duration","useNativeDriver","start","setModalVisible","strMgr","setLanguage","strLang","transform","translateY","interpolate","inputRange","outputRange","paddingHorizontal","borderRadius","backgroundColor","justifyContent","alignSelf","styles","contentContainer","handlePress","bind","badge","badgeImg","getCongratsTextStyle","getStr","badgeMsg","STR_ALHAMDULELLAH","textAlign","color","marginVertical","propTypes","string","isRequired","any","number","func","StyleSheet","create","centeredView","flex","alignItems","marginTop","marginBottom","marginHorizontal","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/modals/ModalCongrats.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Modal,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  StatusBar,\r\n  Image,\r\n  Animated,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport PropTypes from \"prop-types\";\r\nimport SVGLoader from \"../helpers/SVGLoader.js\";\r\nimport StringsManager, * as strings from \"../helpers/StringsManager\";\r\nconst { height, width } = Dimensions.get(\"window\");\r\nimport ActionBtn from \"app/components/ActionBtn\";\r\nimport {\r\n  getTitleFontBasicStyle,\r\n  getLargeContentFontBasicStyle,\r\n} from \"../helpers/scripts\";\r\nexport default class ModalCongrats extends Component {\r\n  static propTypes = {\r\n    strLang: PropTypes.string.isRequired,\r\n    badgeImg: PropTypes.any.isRequired,\r\n    badgeMsg: PropTypes.number.isRequired,\r\n    setModalVisible: PropTypes.func.isRequired,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      animatedValue: new Animated.Value(0),\r\n    };\r\n\r\n    this.animTimer = Animated.timing(this.state.animatedValue, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  }\r\n\r\n  handlePress() {\r\n    this.state.animatedValue = new Animated.Value(0);\r\n    this.animTimer = Animated.timing(this.state.animatedValue, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n    this.props.setModalVisible(false);\r\n  }\r\n  render() {\r\n    var strMgr = new StringsManager();\r\n    strMgr.setLanguage(this.props.strLang);\r\n\r\n    return (\r\n      <Modal transparent={true} visible={true}>\r\n        <Animated.View\r\n          style={{\r\n            transform: [\r\n              {\r\n                translateY: this.state.animatedValue.interpolate({\r\n                  inputRange: [0, 1],\r\n                  outputRange: [-600, height / 5],\r\n                }),\r\n              },\r\n            ],\r\n            height: \"37%\",\r\n            width: \"93%\",\r\n            paddingHorizontal: 5,\r\n            borderRadius: 12,\r\n            backgroundColor: \"#dddddd\",\r\n            justifyContent: \"center\",\r\n            alignSelf: \"center\",\r\n          }}\r\n        >\r\n          <View style={styles.contentContainer}>\r\n            <TouchableWithoutFeedback onPress={this.handlePress.bind(this)}>\r\n              <Image style={styles.badge} source={this.props.badgeImg}></Image>\r\n            </TouchableWithoutFeedback>\r\n            <Text style={this.getCongratsTextStyle()}>\r\n              {strMgr.getStr(this.props.badgeMsg)}\r\n            </Text>\r\n\r\n            <ActionBtn\r\n              style={{ width: \"62%\" }}\r\n              text={strMgr.getStr(strings.STR_ALHAMDULELLAH)}\r\n              fullWidth={false}\r\n              handler={this.handlePress.bind(this)}\r\n              lang={this.props.strLang}\r\n            />\r\n          </View>\r\n        </Animated.View>\r\n      </Modal>\r\n    );\r\n  }\r\n  getCongratsTextStyle() {\r\n    return [\r\n      {\r\n        textAlign: \"center\",\r\n        color: \"#0B721E\",\r\n        marginVertical: height / 200,\r\n      },\r\n      getLargeContentFontBasicStyle(this.props.strLang),\r\n    ];\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  badge: {\r\n    width: 90,\r\n    height: 90,\r\n  },\r\n  contentContainer: {\r\n    width: \"90%\",\r\n    height: \"90%\",\r\n    alignSelf: \"center\",\r\n    marginTop: \"8%\",\r\n    marginBottom: 20,\r\n    marginHorizontal: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    borderBottomLeftRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}