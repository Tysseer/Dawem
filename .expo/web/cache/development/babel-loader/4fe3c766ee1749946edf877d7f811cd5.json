{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tysseer Harak\\\\Desktop\\\\Data\\\\Code\\\\React Native\\\\Dawem\\\\app\\\\js\\\\subComponents\\\\RevisionsList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RevisionsManager from \"../helpers/RevisionsManager\";\nimport QuranIndexer from \"../helpers/QuranIndexer\";\nimport SVGLoader from \"../helpers/SVGLoader\";\nimport RevisionItem from \"./RevisionItem\";\nimport Toast from \"react-native-simple-toast\";\nimport * as strings from \"../helpers/StringsManager\";\nimport StringsManager from \"../helpers/StringsManager\";\n\nvar RevisionsList = function (_Component) {\n  _inherits(RevisionsList, _Component);\n\n  var _super = _createSuper(RevisionsList);\n\n  function RevisionsList(props) {\n    var _this;\n\n    _classCallCheck(this, RevisionsList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      refreshFlag: true,\n      detailedRev: null\n    };\n    _this.svgLoader = new SVGLoader();\n    _this.quranIndexer = new QuranIndexer();\n    return _this;\n  }\n\n  _createClass(RevisionsList, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.props.refreshFn();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pressHandlers = this.getItemOnPressHandlers();\n      var longPressHandlers = this.getItemOnLongPressHandlers();\n      return React.createElement(View, {\n        style: styles.listContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, this.props.revisionsManager.m_loadedRevisions.map(function (curRevision) {\n        return React.createElement(RevisionItem, {\n          key: curRevision.id,\n          svgLoader: _this2.svgLoader,\n          isDetailed: _this2.state.detailedRev == curRevision,\n          revision: curRevision,\n          onPresses: pressHandlers,\n          onLongPresses: longPressHandlers,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        });\n      })));\n    }\n  }, {\n    key: \"getItemOnPressHandlers\",\n    value: function getItemOnPressHandlers() {\n      var pressHandlers = new Map();\n      pressHandlers.set(\"item\", this.onItemPress.bind(this));\n      pressHandlers.set(\"title\", this.onItemTitlePress.bind(this));\n      pressHandlers.set(\"numDays\", this.onItemNumDaysPress.bind(this));\n      pressHandlers.set(\"revisedIcon\", this.onItemIconRevisedPress.bind(this));\n      pressHandlers.set(\"readIcon\", this.onItemIconReadPress.bind(this));\n      pressHandlers.set(\"editIcon\", this.onItemIconEditPress.bind(this));\n      pressHandlers.set(\"deleteIcon\", this.onItemIconDeletePress.bind(this));\n      return pressHandlers;\n    }\n  }, {\n    key: \"getItemOnLongPressHandlers\",\n    value: function getItemOnLongPressHandlers() {\n      var longPressHandlers = new Map();\n      longPressHandlers.set(\"item\", this.onLongPress.bind(this));\n      longPressHandlers.set(\"title\", this.onLongPress.bind(this));\n      longPressHandlers.set(\"numDays\", this.onLongPress.bind(this));\n      longPressHandlers.set(\"revisedIcon\", this.onLongPress.bind(this));\n      longPressHandlers.set(\"readIcon\", this.onLongPress.bind(this));\n      longPressHandlers.set(\"editIcon\", this.onLongPress.bind(this));\n      longPressHandlers.set(\"deleteIcon\", this.onLongPress.bind(this));\n      return longPressHandlers;\n    }\n  }, {\n    key: \"onLongPress\",\n    value: function onLongPress(revision) {\n      revision.progress += 9;\n\n      if (revision.progress > 100) {\n        revision.makeRevisionDateNow();\n        this.props.revisionsManager.sortRevisions();\n      }\n\n      this.refresh();\n    }\n  }, {\n    key: \"onItemPress\",\n    value: function onItemPress(revision) {\n      var newRev = revision;\n      if (this.state.detailedRev == newRev) newRev = null;\n      this.setState({\n        detailedRev: newRev\n      });\n    }\n  }, {\n    key: \"onItemTitlePress\",\n    value: function onItemTitlePress(revision) {\n      this.onItemPress(revision);\n    }\n  }, {\n    key: \"onItemNumDaysPress\",\n    value: function onItemNumDaysPress(revision) {\n      var strMsg = revision.numDays == 0 ? this.props.stringsManager.getStr(strings.STR_REVISED) : revision.numDays + \" \" + this.props.stringsManager.getStr(strings.STR_DAYS_SINCE_REV);\n      Toast.showWithGravity(strMsg, Toast.SHORT, Toast.CENTER);\n    }\n  }, {\n    key: \"onItemIconRevisedPress\",\n    value: function onItemIconRevisedPress(revision) {\n      revision.makeRevisionDateNow();\n      this.props.revisionsManager.sortRevisions();\n      this.refresh();\n    }\n  }, {\n    key: \"onItemIconReadPress\",\n    value: function onItemIconReadPress(revision) {\n      var strtPage = this.quranIndexer.getPageFromAyah(revision.strt);\n      this.props.navigation.navigate(\"ScrQuran\", {\n        strtPage: strtPage\n      });\n    }\n  }, {\n    key: \"onItemIconEditPress\",\n    value: function onItemIconEditPress(revision) {\n      this.props.updateRevFn(revision);\n    }\n  }, {\n    key: \"onItemIconDeletePress\",\n    value: function onItemIconDeletePress(revision) {\n      this.props.deleteRevFn(revision);\n    }\n  }]);\n\n  return RevisionsList;\n}(Component);\n\nRevisionsList.propTypes = {\n  revisionsManager: PropTypes.instanceOf(RevisionsManager).isRequired,\n  stringsManager: PropTypes.instanceOf(StringsManager).isRequired,\n  navigation: PropTypes.object.isRequired,\n  updateRevFn: PropTypes.func.isRequired,\n  refreshFn: PropTypes.func.isRequired\n};\nexport { RevisionsList as default };\nvar styles = StyleSheet.create({\n  listContainer: {\n    width: \"100%\",\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/subComponents/RevisionsList.js"],"names":["React","Component","PropTypes","RevisionsManager","QuranIndexer","SVGLoader","RevisionItem","Toast","strings","StringsManager","RevisionsList","props","state","refreshFlag","detailedRev","svgLoader","quranIndexer","refreshFn","pressHandlers","getItemOnPressHandlers","longPressHandlers","getItemOnLongPressHandlers","styles","listContainer","revisionsManager","m_loadedRevisions","map","curRevision","id","Map","set","onItemPress","bind","onItemTitlePress","onItemNumDaysPress","onItemIconRevisedPress","onItemIconReadPress","onItemIconEditPress","onItemIconDeletePress","onLongPress","revision","progress","makeRevisionDateNow","sortRevisions","refresh","newRev","setState","strMsg","numDays","stringsManager","getStr","STR_REVISED","STR_DAYS_SINCE_REV","showWithGravity","SHORT","CENTER","strtPage","getPageFromAyah","strt","navigation","navigate","updateRevFn","deleteRevFn","propTypes","instanceOf","isRequired","object","func","StyleSheet","create","width","flex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StyleSheet, View, ScrollView } from \"react-native\";\r\nimport RevisionsManager from \"../helpers/RevisionsManager\";\r\nimport QuranIndexer from \"../helpers/QuranIndexer\";\r\nimport SVGLoader from \"../helpers/SVGLoader\";\r\nimport RevisionItem from \"./RevisionItem\";\r\nimport Toast from \"react-native-simple-toast\";\r\nimport * as strings from \"../helpers/StringsManager\";\r\nimport StringsManager from \"../helpers/StringsManager\";\r\nexport default class RevisionsList extends Component {\r\n  static propTypes = {\r\n    revisionsManager: PropTypes.instanceOf(RevisionsManager).isRequired,\r\n    stringsManager: PropTypes.instanceOf(StringsManager).isRequired,\r\n    navigation: PropTypes.object.isRequired,\r\n    updateRevFn: PropTypes.func.isRequired,\r\n    refreshFn: PropTypes.func.isRequired,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      refreshFlag: true,\r\n      detailedRev: null,\r\n    };\r\n    this.svgLoader = new SVGLoader();\r\n    this.quranIndexer = new QuranIndexer();\r\n  }\r\n  refresh() {\r\n    this.props.refreshFn();\r\n  }\r\n\r\n  render() {\r\n    var pressHandlers = this.getItemOnPressHandlers();\r\n    var longPressHandlers = this.getItemOnLongPressHandlers();\r\n    return (\r\n      <View style={styles.listContainer}>\r\n        <ScrollView>\r\n          {this.props.revisionsManager.m_loadedRevisions.map((curRevision) => (\r\n            <RevisionItem\r\n              key={curRevision.id}\r\n              svgLoader={this.svgLoader}\r\n              isDetailed={this.state.detailedRev == curRevision}\r\n              revision={curRevision}\r\n              onPresses={pressHandlers}\r\n              onLongPresses={longPressHandlers}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n  getItemOnPressHandlers() {\r\n    var pressHandlers = new Map();\r\n    pressHandlers.set(\"item\", this.onItemPress.bind(this));\r\n    pressHandlers.set(\"title\", this.onItemTitlePress.bind(this));\r\n    pressHandlers.set(\"numDays\", this.onItemNumDaysPress.bind(this));\r\n    pressHandlers.set(\"revisedIcon\", this.onItemIconRevisedPress.bind(this));\r\n    pressHandlers.set(\"readIcon\", this.onItemIconReadPress.bind(this));\r\n    pressHandlers.set(\"editIcon\", this.onItemIconEditPress.bind(this));\r\n    pressHandlers.set(\"deleteIcon\", this.onItemIconDeletePress.bind(this));\r\n    return pressHandlers;\r\n  }\r\n  getItemOnLongPressHandlers() {\r\n    var longPressHandlers = new Map();\r\n    longPressHandlers.set(\"item\", this.onLongPress.bind(this));\r\n    longPressHandlers.set(\"title\", this.onLongPress.bind(this));\r\n    longPressHandlers.set(\"numDays\", this.onLongPress.bind(this));\r\n    longPressHandlers.set(\"revisedIcon\", this.onLongPress.bind(this));\r\n    longPressHandlers.set(\"readIcon\", this.onLongPress.bind(this));\r\n    longPressHandlers.set(\"editIcon\", this.onLongPress.bind(this));\r\n    longPressHandlers.set(\"deleteIcon\", this.onLongPress.bind(this));\r\n    return longPressHandlers;\r\n  }\r\n  onLongPress(revision) {\r\n    revision.progress += 9;\r\n    if (revision.progress > 100) {\r\n      revision.makeRevisionDateNow();\r\n      this.props.revisionsManager.sortRevisions();\r\n    }\r\n    this.refresh();\r\n  }\r\n\r\n  onItemPress(revision) {\r\n    var newRev = revision;\r\n    if (this.state.detailedRev == newRev) newRev = null;\r\n\r\n    this.setState({ detailedRev: newRev });\r\n  }\r\n\r\n  onItemTitlePress(revision) {\r\n    this.onItemPress(revision);\r\n  }\r\n\r\n  onItemNumDaysPress(revision) {\r\n    var strMsg =\r\n      revision.numDays == 0\r\n        ? this.props.stringsManager.getStr(strings.STR_REVISED)\r\n        : revision.numDays +\r\n          \" \" +\r\n          this.props.stringsManager.getStr(strings.STR_DAYS_SINCE_REV);\r\n    Toast.showWithGravity(strMsg, Toast.SHORT, Toast.CENTER);\r\n  }\r\n\r\n  onItemIconRevisedPress(revision) {\r\n    revision.makeRevisionDateNow();\r\n    this.props.revisionsManager.sortRevisions();\r\n    this.refresh();\r\n  }\r\n\r\n  onItemIconReadPress(revision) {\r\n    var strtPage = this.quranIndexer.getPageFromAyah(revision.strt);\r\n    this.props.navigation.navigate(\"ScrQuran\", { strtPage: strtPage });\r\n  }\r\n\r\n  onItemIconEditPress(revision) {\r\n    this.props.updateRevFn(revision);\r\n  }\r\n\r\n  onItemIconDeletePress(revision) {\r\n    this.props.deleteRevFn(revision);\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  listContainer: {\r\n    width: \"100%\",\r\n    flex: 1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}