{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ExponentAV from \"./ExponentAV\";\nimport { requestFullscreen, exitFullscreen } from \"./FullscreenUtils.web\";\nexport default {\n  get name() {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone() {\n    return 'none';\n  },\n  get ScaleToFill() {\n    return 'fill';\n  },\n  get ScaleAspectFit() {\n    return 'contain';\n  },\n  get ScaleAspectFill() {\n    return 'cover';\n  },\n  setFullscreen: function setFullscreen(element, isFullScreenEnabled) {\n    return function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!isFullScreenEnabled) {\n                _context.next = 5;\n                break;\n              }\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(requestFullscreen(element));\n            case 3:\n              _context.next = 7;\n              break;\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(exitFullscreen(element));\n            case 7:\n              return _context.abrupt(\"return\", ExponentAV.getStatusForVideo(element));\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};","map":{"version":3,"mappings":";AACA,OAAOA,UAAU;AACjB,SAASC,iBAAiB,EAAEC,cAAc;AAE1C,eAAe;EACb,IAAIC,IAAI;IACN,OAAO,kBAAkB;EAC3B,CAAC;EACD,IAAIC,SAAS;IACX,OAAO,MAAM;EACf,CAAC;EACD,IAAIC,WAAW;IACb,OAAO,MAAM;EACf,CAAC;EACD,IAAIC,cAAc;IAChB,OAAO,SAAS;EAClB,CAAC;EACD,IAAIC,eAAe;IACjB,OAAO,OAAO;EAChB,CAAC;EAEKC,aAAa,yBACjBC,OAAyB,EACzBC,mBAA4B;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA,KAExBA,mBAAmB;gBAAA;gBAAA;cAAA;cAAA;cAAA,iCACfT,iBAAiB,CAACQ,OAAO,CAAC;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA,iCAE1BP,cAAc,CAACO,OAAO,CAAC;YAAA;cAAA,iCAExBT,UAAU,CAACW,iBAAiB,CAACF,OAAO,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAC9C;CACD","names":["ExponentAV","requestFullscreen","exitFullscreen","name","ScaleNone","ScaleToFill","ScaleAspectFit","ScaleAspectFill","setFullscreen","element","isFullScreenEnabled","getStatusForVideo"],"sourceRoot":"","sources":["../src/ExpoVideoManager.web.ts"],"sourcesContent":["import { AVPlaybackStatus } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { requestFullscreen, exitFullscreen } from './FullscreenUtils.web';\n\nexport default {\n  get name(): string {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone(): string {\n    return 'none';\n  },\n  get ScaleToFill(): string {\n    return 'fill';\n  },\n  get ScaleAspectFit(): string {\n    return 'contain';\n  },\n  get ScaleAspectFill(): string {\n    return 'cover';\n  },\n\n  async setFullscreen(\n    element: HTMLMediaElement,\n    isFullScreenEnabled: boolean\n  ): Promise<AVPlaybackStatus> {\n    if (isFullScreenEnabled) {\n      await requestFullscreen(element);\n    } else {\n      await exitFullscreen(element);\n    }\n    return ExponentAV.getStatusForVideo(element);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}