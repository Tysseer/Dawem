{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/circleci/repo/packages/core/src/ReText.tsx\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport * as React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-reanimated\";\nvar AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\nvar ReText = function ReText(props) {\n  var _style$props = _objectSpread({\n      style: {}\n    }, props),\n    text = _style$props.text,\n    style = _style$props.style;\n  return React.createElement(AnimatedTextInput, _extends({\n    underlineColorAndroid: \"transparent\",\n    editable: false\n  }, {\n    text: text,\n    style: style\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }));\n};\nexport default ReText;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,IAAMC,iBAAiB,GAAGD,QAAQ,CAACE,uBAAT,CAAiCC,SAAjC,CAA1B;AAOA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAsB;EAAA;MACTC,KAAK,EAAE;IADE,GACKD,KADL;IAC3BE,IAD2B,gBAC3BA,IAD2B;IACrBD,KADqB,gBACrBA,KADqB;EAEnC,OACEP,oBAACE,iBAAD;IACEO,qBAAqB,EAAC,aADxB;IAEEC,QAAQ,EAAE;EAFZ,GAGM;IAAEF,IAAI,EAAJA,IAAF;IAAQD,KAAK,EAALA;EAAR,CAHN;IAAAI;MAAAC;MAAAC;MAAAC;IAAA;EAAA,GADF;AAOD,CATD;AAWA,eAAeT,MAAf","names":["React","Animated","AnimatedTextInput","createAnimatedComponent","TextInput","ReText","props","style","text","underlineColorAndroid","editable","__source","fileName","lineNumber","columnNumber"],"sources":["ReText.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { TextInput, TextStyle } from \"react-native\";\nimport Animated from \"react-native-reanimated\";\n\nconst AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\ninterface TextProps {\n  text: Animated.Node<string>;\n  style?: TextStyle;\n}\n\nconst ReText = (props: TextProps) => {\n  const { text, style } = { style: {}, ...props };\n  return (\n    <AnimatedTextInput\n      underlineColorAndroid=\"transparent\"\n      editable={false}\n      {...{ text, style }}\n    />\n  );\n};\n\nexport default ReText;\n"]},"metadata":{},"sourceType":"module"}