{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from \"react-redux\";\nimport * as strings from \"../helpers/StringsManager\";\nimport StringsManager from \"../helpers/StringsManager\";\nimport RevisionsManager from \"../helpers/RevisionsManager\";\nimport Screen from \"../../components/Screen\";\nimport { getTitleFontBasicStyle, getLargeContentFontBasicStyle } from \"../helpers/scripts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  height = _Dimensions$get.height,\n  width = _Dimensions$get.width;\nvar ScreenWeekBadge = function (_Component) {\n  _inherits(ScreenWeekBadge, _Component);\n  var _super = _createSuper(ScreenWeekBadge);\n  function ScreenWeekBadge(props) {\n    var _this;\n    _classCallCheck(this, ScreenWeekBadge);\n    _this = _super.call(this, props);\n    _this.stringsManager = new StringsManager();\n    _this.stringsManager.setLanguage(_this.props.strLang);\n    _this.revisionsManager = new RevisionsManager();\n    _this.revisionsManager.m_loadedRevisions = _this.props.revisions;\n    var bIsDay, bIsMonth, bIsWeek;\n    var _this$revisionsManage = _this.revisionsManager.getBadgesStates();\n    var _this$revisionsManage2 = _slicedToArray(_this$revisionsManage, 3);\n    bIsDay = _this$revisionsManage2[0];\n    bIsMonth = _this$revisionsManage2[1];\n    bIsWeek = _this$revisionsManage2[2];\n    _this.isEnabled = bIsWeek;\n    return _this;\n  }\n  _createClass(ScreenWeekBadge, [{\n    key: \"okButtonPressed\",\n    value: function okButtonPressed() {\n      this.props.navigation.navigate(\"Home\", {\n        screen: \"ScrList\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var strStatus = this.props.revisions.length < 7 ? this.stringsManager.getStr(strings.STR_WEEK_BADGE_MIN_REV) : this.isEnabled == false ? this.stringsManager.getStr(strings.STR_WEEK_BADGE_INACTIVE) : this.stringsManager.getStr(strings.STR_WEEK_BADGE_ACTIVE);\n      return _jsx(Screen, {\n        children: _jsx(View, {\n          style: styles.mainContainer,\n          children: _jsx(View, {\n            style: styles.messageContainer,\n            children: _jsx(ImageBackground, {\n              source: require(\"../../assets/backgroundPNG/green_background_withQuran.png\"),\n              style: styles.backgroundImage,\n              children: _jsxs(View, {\n                style: styles.contentContainer,\n                children: [_jsx(Image, {\n                  style: styles.badge,\n                  source: require(\"../../assets/images/weekBadge.png\")\n                }), _jsx(Text, {\n                  style: this.getTitleStyle(),\n                  children: this.stringsManager.getStr(strings.STR_WEEKBADGE_NAME)\n                }), _jsx(Text, {\n                  style: this.getSubTitleStyle(),\n                  children: this.stringsManager.getStr(strings.STR_WEEK_BADGE_DESC)\n                }), _jsx(View, {\n                  style: styles.separator\n                }), _jsx(Text, {\n                  style: this.getSubTitleStyle(),\n                  children: strStatus\n                })]\n              })\n            })\n          })\n        })\n      });\n    }\n  }, {\n    key: \"getTitleStyle\",\n    value: function getTitleStyle() {\n      return [{\n        textAlign: \"center\",\n        color: \"#FFFFFF\",\n        marginVertical: height / 100\n      }, getTitleFontBasicStyle(this.props.strLang)];\n    }\n  }, {\n    key: \"getSubTitleStyle\",\n    value: function getSubTitleStyle() {\n      return [{\n        textAlign: \"center\",\n        color: \"#FFFFFF\",\n        marginVertical: height / 200\n      }, getLargeContentFontBasicStyle(this.props.strLang)];\n    }\n  }]);\n  return ScreenWeekBadge;\n}(Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    revisions: state.revisions,\n    strLang: state.strLang\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps())(ScreenWeekBadge);\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#EEEEEE\",\n    justifyContent: \"space-between\"\n  },\n  messageContainer: {\n    alignItems: \"center\",\n    backgroundColor: \"#FFFFFF\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    borderRadius: 10,\n    overflow: \"hidden\"\n  },\n  backgroundImage: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  separator: {\n    borderColor: \"#FFFFFF59\",\n    borderWidth: 1,\n    borderRadius: 10,\n    width: 280,\n    height: 1,\n    marginVertical: 15\n  },\n  contentContainer: {\n    width: \"90%\",\n    height: \"90%\",\n    alignSelf: \"center\",\n    marginTop: \"8%\",\n    marginBottom: 20,\n    marginHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    borderBottomLeftRadius: 30,\n    borderBottomRightRadius: 30\n  },\n  badge: {\n    width: 140,\n    height: 140\n  }\n});","map":{"version":3,"names":["React","Component","connect","strings","StringsManager","RevisionsManager","Screen","getTitleFontBasicStyle","getLargeContentFontBasicStyle","Dimensions","get","height","width","ScreenWeekBadge","props","stringsManager","setLanguage","strLang","revisionsManager","m_loadedRevisions","revisions","bIsDay","bIsMonth","bIsWeek","getBadgesStates","isEnabled","navigation","navigate","screen","strStatus","length","getStr","STR_WEEK_BADGE_MIN_REV","STR_WEEK_BADGE_INACTIVE","STR_WEEK_BADGE_ACTIVE","styles","mainContainer","messageContainer","require","backgroundImage","contentContainer","badge","getTitleStyle","STR_WEEKBADGE_NAME","getSubTitleStyle","STR_WEEK_BADGE_DESC","separator","textAlign","color","marginVertical","mapStateToProps","state","mapDispatchToProps","StyleSheet","create","flex","alignItems","backgroundColor","justifyContent","borderRadius","overflow","borderColor","borderWidth","alignSelf","marginTop","marginBottom","marginHorizontal","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/screens/ScreenWeekBadge.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Dimensions,\r\n  ImageBackground,\r\n  Image,\r\n} from \"react-native\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as strings from \"../helpers/StringsManager\";\r\nimport StringsManager from \"../helpers/StringsManager\";\r\nimport RevisionsManager from \"../helpers/RevisionsManager\";\r\nimport Screen from \"app/components/Screen\";\r\nimport {\r\n  getTitleFontBasicStyle,\r\n  getLargeContentFontBasicStyle,\r\n} from \"../helpers/scripts\";\r\n\r\nconst { height, width } = Dimensions.get(\"window\");\r\n\r\nclass ScreenWeekBadge extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.stringsManager = new StringsManager();\r\n    this.stringsManager.setLanguage(this.props.strLang);\r\n    //console.log(Dimensions.get(\"window\"));\r\n\r\n    this.revisionsManager = new RevisionsManager();\r\n    this.revisionsManager.m_loadedRevisions = this.props.revisions;\r\n    var bIsDay, bIsMonth, bIsWeek;\r\n    [bIsDay, bIsMonth, bIsWeek] = this.revisionsManager.getBadgesStates();\r\n    this.isEnabled = bIsWeek;\r\n  }\r\n\r\n  okButtonPressed() {\r\n    this.props.navigation.navigate(\"Home\", { screen: \"ScrList\" });\r\n  }\r\n\r\n  render() {\r\n    var strStatus =\r\n      this.props.revisions.length < 7\r\n        ? this.stringsManager.getStr(strings.STR_WEEK_BADGE_MIN_REV)\r\n        : this.isEnabled == false\r\n        ? this.stringsManager.getStr(strings.STR_WEEK_BADGE_INACTIVE)\r\n        : this.stringsManager.getStr(strings.STR_WEEK_BADGE_ACTIVE);\r\n    return (\r\n      <Screen>\r\n        <View style={styles.mainContainer}>\r\n          <View style={styles.messageContainer}>\r\n            <ImageBackground\r\n              source={require(\"assets/backgroundPNG/green_background_withQuran.png\")}\r\n              style={styles.backgroundImage}\r\n            >\r\n              <View style={styles.contentContainer}>\r\n                <Image\r\n                  style={styles.badge}\r\n                  source={require(\"../../assets/images/weekBadge.png\")}\r\n                ></Image>\r\n                <Text style={this.getTitleStyle()}>\r\n                  {this.stringsManager.getStr(strings.STR_WEEKBADGE_NAME)}\r\n                </Text>\r\n                <Text style={this.getSubTitleStyle()}>\r\n                  {this.stringsManager.getStr(strings.STR_WEEK_BADGE_DESC)}\r\n                </Text>\r\n                <View style={styles.separator}></View>\r\n                <Text style={this.getSubTitleStyle()}>{strStatus}</Text>\r\n              </View>\r\n            </ImageBackground>\r\n          </View>\r\n        </View>\r\n      </Screen>\r\n    );\r\n  }\r\n  getTitleStyle() {\r\n    return [\r\n      {\r\n        textAlign: \"center\",\r\n        color: \"#FFFFFF\",\r\n        marginVertical: height / 100,\r\n      },\r\n      getTitleFontBasicStyle(this.props.strLang),\r\n    ];\r\n  }\r\n  getSubTitleStyle() {\r\n    return [\r\n      {\r\n        textAlign: \"center\",\r\n        color: \"#FFFFFF\",\r\n        marginVertical: height / 200,\r\n      },\r\n      getLargeContentFontBasicStyle(this.props.strLang),\r\n    ];\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  revisions: state.revisions,\r\n  strLang: state.strLang,\r\n});\r\nconst mapDispatchToProps = () => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps())(ScreenWeekBadge);\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#EEEEEE\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  messageContainer: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n  },\r\n  backgroundImage: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  separator: {\r\n    borderColor: \"#FFFFFF59\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 280,\r\n    height: 1,\r\n    marginVertical: 15,\r\n  },\r\n  contentContainer: {\r\n    width: \"90%\",\r\n    height: \"90%\",\r\n    alignSelf: \"center\",\r\n    marginTop: \"8%\",\r\n    marginBottom: 20,\r\n    marginHorizontal: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    borderBottomLeftRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n  },\r\n\r\n  badge: {\r\n    width: 140,\r\n    height: 140,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}