{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SVGLoader from \"../helpers/SVGLoader\";\nimport { getSideTitleFontBasicStyle } from \"../helpers/scripts\";\nimport BgImage from \"../../assets/backgroundPNG/green_background.png\";\nimport BgBadge from \"../../assets/images/trophy_transparent.png\";\nimport RenderBadgeImg from \"./RenderBadgeImg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  height = _Dimensions$get.height;\nvar BadgesBar = function (_Component) {\n  _inherits(BadgesBar, _Component);\n  var _super = _createSuper(BadgesBar);\n  function BadgesBar(props) {\n    _classCallCheck(this, BadgesBar);\n    return _super.call(this, props);\n  }\n  _createClass(BadgesBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      var intervals = [\"day\", \"month\", \"week\"];\n      var renderIntervalBadge = function renderIntervalBadge(interval) {\n        return _jsx(TouchableOpacity, {\n          activeOpacity: 0.7,\n          onPress: function onPress() {\n            return _this.props.onPresses.get(interval)();\n          },\n          onLongPress: function onLongPress() {\n            return _this.props.onLongPresses.get(interval)();\n          },\n          children: _jsx(RenderBadgeImg, {\n            badgeName: interval + \"Badge\",\n            dim: _this.props[\"isBadge\" + interval.replace(/^\\w/, function (c) {\n              return c.toUpperCase();\n            })]\n          })\n        }, interval);\n      };\n      return _jsx(ImageBackground, {\n        source: BgImage,\n        style: styles.bgImage,\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Image, {\n            source: BgBadge,\n            style: styles.bgBadge\n          }), _jsx(View, {\n            style: {\n              height: \"40%\"\n            },\n            children: _jsx(Text, {\n              style: _objectSpread(_objectSpread({}, styles.text), getSideTitleFontBasicStyle(this.props.strLang)),\n              children: this.props.title\n            })\n          }), _jsx(View, {\n            style: styles.badgesContainer,\n            children: intervals.map(function (interval) {\n              return renderIntervalBadge(interval);\n            })\n          })]\n        })\n      });\n    }\n  }]);\n  return BadgesBar;\n}(Component);\nBadgesBar.propTypes = {\n  svgLoader: PropTypes.instanceOf(SVGLoader).isRequired,\n  isBadgeDay: PropTypes.bool,\n  isBadgeMonth: PropTypes.bool,\n  isBadgeWeek: PropTypes.bool,\n  onPresses: PropTypes.instanceOf(Map).isRequired,\n  onLongPresses: PropTypes.instanceOf(Map).isRequired\n};\nexport { BadgesBar as default };\nvar styles = StyleSheet.create({\n  bgImage: {\n    width: \"100%\",\n    height: 0.2 * height,\n    borderRadius: 12,\n    position: \"relative\",\n    overflow: \"hidden\",\n    marginBottom: 20\n  },\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    paddingHorizontal: 20,\n    paddingBottom: 20\n  },\n  bgBadge: {\n    width: \"30%\",\n    height: \"70%\",\n    resizeMode: \"cover\",\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    opacity: 0.4\n  },\n  badgesContainer: {\n    flexDirection: \"row\",\n    height: \"55%\",\n    alignItems: \"flex-end\"\n  },\n  badge: {\n    width: 60,\n    height: 56,\n    resizeMode: \"cover\",\n    marginRight: 15\n  },\n  text: {\n    color: \"#fff\",\n    alignSelf: \"flex-start\",\n    marginTop: 6\n  }\n});","map":{"version":3,"names":["React","Component","PropTypes","SVGLoader","getSideTitleFontBasicStyle","BgImage","BgBadge","RenderBadgeImg","Dimensions","get","height","BadgesBar","props","intervals","renderIntervalBadge","interval","onPresses","onLongPresses","replace","c","toUpperCase","styles","bgImage","container","bgBadge","text","strLang","title","badgesContainer","map","propTypes","svgLoader","instanceOf","isRequired","isBadgeDay","bool","isBadgeMonth","isBadgeWeek","Map","StyleSheet","create","width","borderRadius","position","overflow","marginBottom","paddingHorizontal","paddingBottom","resizeMode","bottom","right","opacity","flexDirection","alignItems","badge","marginRight","color","alignSelf","marginTop"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/subComponents/BadgesBar.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  TouchableWithoutFeedback,\r\n  StatusBar,\r\n  ImageBackground,\r\n  Dimensions,\r\n  Text,\r\n  Image,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport SVGLoader from \"../helpers/SVGLoader\";\r\nimport { getSideTitleFontBasicStyle } from \"../helpers/scripts\";\r\nimport BgImage from \"../../assets/backgroundPNG/green_background.png\";\r\nimport BgBadge from \"../../assets/images/trophy_transparent.png\";\r\nimport RenderBadgeImg from \"./RenderBadgeImg\";\r\n\r\nconst { height } = Dimensions.get(\"window\");\r\n\r\nexport default class BadgesBar extends Component {\r\n  static propTypes = {\r\n    svgLoader: PropTypes.instanceOf(SVGLoader).isRequired,\r\n    isBadgeDay: PropTypes.bool,\r\n    isBadgeMonth: PropTypes.bool,\r\n    isBadgeWeek: PropTypes.bool,\r\n    onPresses: PropTypes.instanceOf(Map).isRequired,\r\n    onLongPresses: PropTypes.instanceOf(Map).isRequired,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    // var svgLoader = this.props.svgLoader;\r\n    // var dayBadge = svgLoader.getDayBadge(!this.props.isBadgeDay);\r\n    // var monthBadge = svgLoader.getMonthBadge(!this.props.isBadgeMonth);\r\n    // var weekBadge = svgLoader.getWeekBadge(!this.props.isBadgeWeek);\r\n\r\n    const intervals = [\"day\", \"month\", \"week\"];\r\n    const renderIntervalBadge = (interval) => (\r\n      <TouchableOpacity\r\n        activeOpacity={0.7}\r\n        key={interval}\r\n        onPress={() => this.props.onPresses.get(interval)()}\r\n        onLongPress={() => this.props.onLongPresses.get(interval)()}\r\n      >\r\n        <RenderBadgeImg\r\n          badgeName={`${interval}Badge`}\r\n          dim={\r\n            this.props[\r\n              `isBadge${interval.replace(/^\\w/, (c) => c.toUpperCase())}`\r\n            ]\r\n          }\r\n        />\r\n      </TouchableOpacity>\r\n    );\r\n\r\n    return (\r\n      <ImageBackground source={BgImage} style={styles.bgImage}>\r\n        <View style={styles.container}>\r\n          <Image source={BgBadge} style={styles.bgBadge} />\r\n          <View style={{ height: \"40%\" }}>\r\n            <Text\r\n              style={{\r\n                ...styles.text,\r\n                ...getSideTitleFontBasicStyle(this.props.strLang),\r\n              }}\r\n            >\r\n              {this.props.title}\r\n            </Text>\r\n          </View>\r\n          <View style={styles.badgesContainer}>\r\n            {intervals.map((interval) => renderIntervalBadge(interval))}\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  bgImage: {\r\n    width: \"100%\",\r\n    height: 0.2 * height,\r\n    borderRadius: 12,\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    marginBottom: 20,\r\n  },\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  bgBadge: {\r\n    width: \"30%\",\r\n    height: \"70%\",\r\n    resizeMode: \"cover\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n    opacity: 0.4,\r\n  },\r\n  badgesContainer: {\r\n    flexDirection: \"row\",\r\n    height: \"55%\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  badge: {\r\n    width: 60,\r\n    height: 56,\r\n    resizeMode: \"cover\",\r\n    marginRight: 15,\r\n  },\r\n  text: {\r\n    color: \"#fff\",\r\n    alignSelf: \"flex-start\",\r\n    marginTop: 6,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}