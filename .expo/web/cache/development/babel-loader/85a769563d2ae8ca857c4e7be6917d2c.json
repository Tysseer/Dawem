{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport MiscUtilities from \"./MiscUtilities\";\nimport QuranIndexer from \"./QuranIndexer\";\nimport QuranQueryDictionary from \"./QuranQueryDictionary\";\nvar tokenTypes = Object.freeze({\n  unkown: 0,\n  surahWord: 1,\n  juzuuWord: 2,\n  pageWord: 3,\n  ayahWord: 4,\n  fromWord: 5,\n  toWord: 6,\n  endWord: 7,\n  number: 8,\n  surahID: 9,\n  juzuuID: 10,\n  pageID: 11,\n  ayahID: 12,\n  exactLocation: 13,\n  ignore: 1000\n});\nvar tokenTypesStr = [\"ignore\", \"surahWord\", \"juzuuWord\", \"pageWord\", \"ayahWord\", \"fromWord\", \"toWord\", \"endWord\", \"number\", \"surahID\", \"juzuuID\", \"pageID\", \"ayahID\", \"exactLocation\", \"unkown\"];\nvar Token = function () {\n  function Token() {\n    var tokType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : tokenTypes.unkown;\n    var tokVal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    _classCallCheck(this, Token);\n    this.tokType = tokType;\n    this.tokVal = tokVal;\n  }\n  _createClass(Token, [{\n    key: \"getTokAsStr\",\n    value: function getTokAsStr() {\n      return \"(\" + tokenTypesStr[this.tokType] + \" , \" + this.tokVal + \")\";\n    }\n  }]);\n  return Token;\n}();\nvar Chunk = function () {\n  function Chunk() {\n    var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n    var arr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    _classCallCheck(this, Chunk);\n    this.chunkID = id;\n    this.chunkArr = arr;\n  }\n  _createClass(Chunk, [{\n    key: \"getChunkAsStr\",\n    value: function getChunkAsStr() {\n      var strRet = \"chunk[\" + this.chunkID + \"] (\" + this.chunkArr.length + \" tokens): \";\n      for (var j = 0; j < this.chunkArr.length; j++) {\n        strRet += this.chunkArr[j].getTokAsStr() + \"\\t\";\n      }\n      return strRet;\n    }\n  }]);\n  return Chunk;\n}();\nvar Location = _createClass(function Location() {\n  var surahIndx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n  var ayahIndx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  _classCallCheck(this, Location);\n  this.surahIndx = surahIndx;\n  this.ayahIndx = ayahIndx;\n});\nvar IndexInChunk = _createClass(function IndexInChunk() {\n  var iChunk = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n  var jTok = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  var tok = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  _classCallCheck(this, IndexInChunk);\n  this.iChunk = iChunk;\n  this.jTok = jTok;\n  this.tok = tok;\n});\nvar SearchTextParser = function () {\n  function SearchTextParser() {\n    _classCallCheck(this, SearchTextParser);\n    this.quranInfo = new QuranIndexer();\n    this.quranDictionary = new QuranQueryDictionary();\n    this.quranDictionary.fillDictionary(this.quranInfo, tokenTypes);\n    this.chunks = [];\n  }\n  _createClass(SearchTextParser, [{\n    key: \"getChunksArrAsStr\",\n    value: function getChunksArrAsStr() {\n      var strRet = \" \" + this.chunks.length + \" chunks\\n\";\n      for (var i = 0; i < this.chunks.length; i++) {\n        strRet += this.chunks[i].getChunkAsStr() + \"\\n\";\n      }\n      return strRet;\n    }\n  }, {\n    key: \"findTokensInChunk\",\n    value: function findTokensInChunk(iC, arrTokTypes) {\n      var retIndx = [],\n        ret = [];\n      for (var i = 0; i < this.chunks[iC].chunkArr.length; i++) {\n        for (var j = 0; j < arrTokTypes.length; j++) {\n          if (this.chunks[iC].chunkArr[i].tokType == arrTokTypes[j]) {\n            retIndx.push(i);\n            ret.push(arrTokTypes[j]);\n          }\n        }\n      }\n      return {\n        types: ret,\n        indeces: retIndx\n      };\n    }\n  }, {\n    key: \"classifyToken\",\n    value: function classifyToken(token) {\n      var res = this.quranDictionary.lookup(token);\n      if (res.bIsFound && res.distR < 0.4) {\n        return new Token(res.type, res.val);\n      } else {\n        if (/^\\d+$/.test(token)) return new Token(tokenTypes.number, parseInt(token));\n        return new Token(tokenTypes.unkown, \"err\");\n      }\n    }\n  }, {\n    key: \"estimateLocationFromTok\",\n    value: function estimateLocationFromTok(bIsFrom, tok) {\n      var location = new Location();\n      if (tok.tokType == tokenTypes.surahID) {\n        location.surahIndx = tok.tokVal;\n        location.ayahIndx = bIsFrom ? 1 : this.quranInfo.getSurahNumAyah(tok.tokVal);\n      }\n      if (tok.tokType == tokenTypes.juzuuID) {\n        var _this$quranInfo$getJu = this.quranInfo.getJuzuuAyahRange(tok.tokVal),\n          _this$quranInfo$getJu2 = _slicedToArray(_this$quranInfo$getJu, 2),\n          start = _this$quranInfo$getJu2[0],\n          end = _this$quranInfo$getJu2[1];\n        var localStrt = this.quranInfo.getAyahLocalIndx(start);\n        var localEnd = this.quranInfo.getAyahLocalIndx(end);\n        location.surahIndx = bIsFrom ? localStrt.localSurahIndx : localEnd.localSurahIndx;\n        location.ayahIndx = bIsFrom ? localStrt.localAyahIndx : localEnd.localAyahIndx;\n      }\n      if (tok.tokType == tokenTypes.pageID) {\n        var _this$quranInfo$getPa = this.quranInfo.getPageAyahRange(tok.tokVal),\n          _this$quranInfo$getPa2 = _slicedToArray(_this$quranInfo$getPa, 2),\n          _start = _this$quranInfo$getPa2[0],\n          _end = _this$quranInfo$getPa2[1];\n        var _localStrt = this.quranInfo.getAyahLocalIndx(_start);\n        var _localEnd = this.quranInfo.getAyahLocalIndx(_end);\n        location.surahIndx = bIsFrom ? _localStrt.localSurahIndx : _localEnd.localSurahIndx;\n        location.ayahIndx = bIsFrom ? _localStrt.localAyahIndx : _localEnd.localAyahIndx;\n      }\n      return new Token(tokenTypes.exactLocation, location);\n    }\n  }, {\n    key: \"constructIndxIfFound\",\n    value: function constructIndxIfFound(toktypesArr, tokType, iC) {\n      var j = toktypesArr.types.indexOf(tokType);\n      if (j >= 0) {\n        return new IndexInChunk(iC, toktypesArr.indeces[j], this.chunks[toktypesArr.indeces[j]]);\n      }\n      return null;\n    }\n  }, {\n    key: \"getFromToIndeces\",\n    value: function getFromToIndeces(iC) {\n      var fromIndx = null;\n      var toIndx = null;\n      var exactIndx = null;\n      var fromTo = [tokenTypes.fromWord, tokenTypes.toWord, tokenTypes.exactLocation];\n      var locIDs = [tokenTypes.juzuuID, tokenTypes.pageID, tokenTypes.surahID];\n      for (var i = 0; i < this.chunks[iC].chunkArr.length; i++) {\n        var toktypesInChunk = this.findTokensInChunk(iC, fromTo);\n        if (toktypesInChunk.types.length == 0) continue;\n        if (toktypesInChunk.types.includes(tokenTypes.exactLocation)) {\n          if (exactIndx == null) {\n            exactIndx = this.constructIndxIfFound(toktypesInChunk, tokenTypes.exactLocation, iC);\n          }\n          continue;\n        }\n        if (fromIndx == null) {\n          var locationsInChunk = this.findTokensInChunk(iC, locIDs);\n          if (locationsInChunk.types.length != 0) {\n            fromIndx = this.constructIndxIfFound(toktypesInChunk, tokenTypes.fromWord, iC);\n            if (fromIndx != null) continue;\n          }\n        }\n        if (toIndx == null) {\n          var _locationsInChunk = this.findTokensInChunk(iC, locIDs);\n          if (_locationsInChunk.types.length != 0) {\n            toIndx = this.constructIndxIfFound(toktypesInChunk, tokenTypes.toWord, iC);\n            if (toIndx != null) continue;\n          }\n        }\n      }\n      return [fromIndx, toIndx, exactIndx];\n    }\n  }, {\n    key: \"estimateLocationInTokArr\",\n    value: function estimateLocationInTokArr(bIsStrt, locationToksArr) {\n      var ret = [];\n      for (var i = 0; i < locationToksArr.length; i++) {\n        ret.push(this.estimateLocationFromTok(bIsStrt, locationToksArr[i].tok));\n      }\n      return ret;\n    }\n  }, {\n    key: \"matchTwoLocationArrays\",\n    value: function matchTwoLocationArrays(locationTokFrom, locationTokTo) {\n      if (locationTokFrom.length == 0 || locationTokTo.length == 0) return false;\n      var locationsFrom = this.estimateLocationInTokArr(true, locationTokFrom);\n      var locationsTo = this.estimateLocationInTokArr(false, locationTokTo);\n      var closestpair = {\n        iF: -1,\n        iT: -1,\n        dist: 1000000\n      };\n      for (var i = 0; i < locationsFrom.length; i++) {\n        for (var j = 0; j < locationsTo.length; j++) {\n          var dist = this.getDistanceBetLocations(locationsFrom[i], locationsTo[j]);\n          if (dist > 0 && dist < closestpair.dist) {\n            closestpair.dist = dist;\n            closestpair.iF = i;\n            closestpair.iT = j;\n          }\n        }\n      }\n      if (closestpair.iF != -1) {\n        var iFromChnk = locationTokFrom[closestpair.iF].iChunk;\n        var iFromLocTok = locationTokFrom[closestpair.iF].jTok;\n        this.chunks[iFromChnk].chunkArr[iFromLocTok] = locationsFrom[closestpair.iF];\n        var iToChnk = locationTokTo[closestpair.iT].iChunk;\n        var iToLocTok = locationTokTo[closestpair.iT].jTok;\n        this.chunks[iToChnk].chunkArr[iToLocTok] = locationsTo[closestpair.iT];\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"collectLocationTokensFromChunk\",\n    value: function collectLocationTokensFromChunk(iC) {\n      var locIDs = [tokenTypes.juzuuID, tokenTypes.pageID, tokenTypes.surahID];\n      var ret = [];\n      for (var i = 0; i < this.chunks[iC].chunkArr.length; i++) {\n        if (locIDs.includes(this.chunks[iC].chunkArr[i].tokType)) {\n          ret.push(new IndexInChunk(iC, i, this.chunks[iC].chunkArr[i]));\n        }\n      }\n      return ret;\n    }\n  }, {\n    key: \"collectLocationTokens\",\n    value: function collectLocationTokens() {\n      var ret = [];\n      for (var i = 0; i < this.chunks.length; i++) {\n        ret.push.apply(ret, _toConsumableArray(this.collectLocationTokensFromChunk(i)));\n      }\n      return ret;\n    }\n  }, {\n    key: \"getDistanceBetLocations\",\n    value: function getDistanceBetLocations(loc1, loc2) {\n      var ret = this.quranInfo.getAyahGlobalIndx(loc1.tokVal.surahIndx, loc1.tokVal.ayahIndx) - this.quranInfo.getAyahGlobalIndx(loc2.tokVal.surahIndx, loc2.tokVal.ayahIndx);\n      if (ret < 0) ret *= -1;\n      return ret;\n    }\n  }, {\n    key: \"estimateLocation\",\n    value: function estimateLocation() {\n      var fromIndx = null;\n      var toIndx = null;\n      var exactIndx = null;\n      for (var i = 0; i < this.chunks.length; i++) {\n        var _this$getFromToIndece = this.getFromToIndeces(i),\n          _this$getFromToIndece2 = _slicedToArray(_this$getFromToIndece, 3),\n          curFrom = _this$getFromToIndece2[0],\n          curTo = _this$getFromToIndece2[1],\n          curExact = _this$getFromToIndece2[2];\n        if (curFrom) fromIndx = curFrom;\n        if (curTo) toIndx = curTo;\n        if (curExact) exactIndx = curExact;\n      }\n      if (exactIndx != null) {\n        var locations = this.collectLocationTokens();\n        var nearestLocation = null;\n        var nearestDist = 1000000;\n        var nearestIndx = -1;\n        for (var i = 0; i < locations.length; i++) {\n          var location = this.estimateLocationFromTok(true, locations[i].tok);\n          var dist = this.getDistanceBetLocations(location, this.chunks[exactIndx.iChunk].chunkArr[exactIndx.jTok]);\n          if (dist < nearestDist) {\n            nearestDist = dist;\n            nearestLocation = location;\n            nearestIndx = i;\n          }\n        }\n        if (nearestLocation != null) {\n          this.chunks[locations[nearestIndx].iChunk].chunkArr[locations[nearestIndx].jTok] = nearestLocation;\n          return true;\n        }\n        return false;\n      }\n      if (fromIndx != null && toIndx != null) {\n        var locationTokFrom = this.collectLocationTokensFromChunk(fromIndx.iChunk);\n        var locationTokTo = this.collectLocationTokensFromChunk(toIndx.iChunk);\n        return this.matchTwoLocationArrays(locationTokFrom, locationTokTo);\n      }\n      if (fromIndx != null) {\n        var _locationTokFrom = this.collectLocationTokensFromChunk(fromIndx.iChunk);\n        var _locationTokTo = [];\n        for (var iC = fromIndx.iChunk + 1; iC < this.chunks.length; iC++) {\n          _locationTokTo.push.apply(_locationTokTo, _toConsumableArray(this.collectLocationTokensFromChunk(iC)));\n        }\n        if (_locationTokTo.length == 0) {\n          if (_locationTokFrom.length > 1) {\n            _locationTokTo.push(_locationTokFrom.pop());\n          }\n        }\n        return this.matchTwoLocationArrays(_locationTokFrom, _locationTokTo);\n      }\n      if (toIndx != null) {\n        var _locationTokTo2 = this.collectLocationTokensFromChunk(toIndx.iChunk);\n        var _locationTokFrom2 = [];\n        for (var iC = 0; iC < toIndx.iChunk; iC++) {\n          _locationTokFrom2.push.apply(_locationTokFrom2, _toConsumableArray(this.collectLocationTokensFromChunk(iC)));\n        }\n        return this.matchTwoLocationArrays(_locationTokFrom2, _locationTokTo2);\n      }\n      var locationToks = this.collectLocationTokens();\n      if (locationToks.length == 0) return false;\n      var locationsFrom = this.estimateLocationInTokArr(true, locationToks);\n      if (locationToks.length == 1) {\n        var iFromChnk = locationToks[0].iChunk;\n        var iFromLocTok = locationToks[0].jTok;\n        this.chunks[iFromChnk].chunkArr[iFromLocTok] = locationsFrom[0];\n        var locationsTo = this.estimateLocationInTokArr(false, locationToks);\n        this.chunks[iFromChnk].chunkArr.push(locationsTo[0]);\n        return true;\n      }\n      function compare(a, b) {\n        if (a.surahIndx < b.surahIndx) return -1;\n        if (a.surahIndx > b.surahIndx) return 1;\n        if (a.ayahIndx < b.ayahIndx) return -1;\n        if (a.ayahIndx > b.ayahIndx) return 1;\n        return 0;\n      }\n      for (var i = 0; i < locationsFrom.length; i++) {\n        locationsFrom[i].originalTok = locationToks[i];\n      }\n      locationsFrom.sort(compare);\n      var iMinDist = -1;\n      var minDist = 0;\n      for (var i = 1; i < locationsFrom.length; i++) {\n        var _dist = this.getDistanceBetLocations(locationsFrom[i], locationsFrom[i - 1]);\n        if (_dist < minDist) {\n          minDist = _dist;\n          iMinDist = i - 1;\n        }\n      }\n      if (iMinDist == -1) return false;\n      var iStrt = locationsFrom[iMinDist - 1].originalTok.iChunk;\n      var jStrt = locationsFrom[iMinDist - 1].originalTok.jTok;\n      var iEnd = locationsFrom[iMinDist].originalTok.iChunk;\n      var jEnd = locationsFrom[iMinDist].originalTok.jTok;\n      this.chunks[iStrt].chunkArr[jStrt] = this.estimateLocationFromTok(true, this.chunks[iStrt].chunkArr[jStrt]);\n      this.chunks[iEnd].chunkArr[jEnd] = this.estimateLocationFromTok(false, this.chunks[iEnd].chunkArr[jEnd]);\n      return true;\n    }\n  }, {\n    key: \"filterTokens\",\n    value: function filterTokens(iC) {\n      var bChange = false;\n      for (var i = 0; i < this.chunks[iC].chunkArr.length; i++) {\n        if (this.chunks[iC].chunkArr[i].tokType == tokenTypes.ayahWord) {\n          if (i < this.chunks[iC].chunkArr.length - 1) {\n            if (this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.number || this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.ayahID) {\n              this.chunks[iC].chunkArr[i + 1].tokType = tokenTypes.ayahID;\n              this.chunks[iC].chunkArr.splice(i, 1);\n              bChange = true;\n              i--;\n            }\n          }\n        } else if (this.chunks[iC].chunkArr[i].tokType == tokenTypes.surahWord) {\n          if (i < this.chunks[iC].chunkArr.length - 1) {\n            if (this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.number || this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.surahID) {\n              this.chunks[iC].chunkArr[i + 1].tokType = tokenTypes.surahID;\n              this.chunks[iC].chunkArr.splice(i, 1);\n              bChange = true;\n              i--;\n            }\n          }\n        } else if (this.chunks[iC].chunkArr[i].tokType == tokenTypes.pageWord) {\n          if (i < this.chunks[iC].chunkArr.length - 1) {\n            if (this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.number || this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.pageID) {\n              this.chunks[iC].chunkArr[i + 1].tokType = tokenTypes.pageID;\n              this.chunks[iC].chunkArr.splice(i, 1);\n              bChange = true;\n              i--;\n            }\n          }\n        } else if (this.chunks[iC].chunkArr[i].tokType == tokenTypes.juzuuWord) {\n          if (i < this.chunks[iC].chunkArr.length - 1) {\n            if (this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.number || this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.juzuuID) {\n              this.chunks[iC].chunkArr[i + 1].tokType = tokenTypes.juzuuID;\n              this.chunks[iC].chunkArr.splice(i, 1);\n              bChange = true;\n              i--;\n            }\n          }\n        }\n      }\n      for (var i = 0; i < this.chunks[iC].chunkArr.length - 1; i++) {\n        if (this.chunks[iC].chunkArr[i].tokType == tokenTypes.surahID && this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.number) {\n          this.chunks[iC].chunkArr[i + 1].tokType = tokenTypes.exactLocation;\n          this.chunks[iC].chunkArr[i + 1].tokVal = new Location(this.chunks[iC].chunkArr[i].tokVal, this.chunks[iC].chunkArr[i + 1].tokVal);\n          this.chunks[iC].chunkArr.splice(i, 1);\n          bChange = true;\n        }\n      }\n      return bChange;\n    }\n  }, {\n    key: \"filterChunks\",\n    value: function filterChunks() {\n      var bChange = false;\n      for (var i = 0; i < this.chunks.length; i++) {\n        for (var j = 0; j < this.chunks[i].chunkArr.length; j++) {\n          if (this.chunks[i].chunkArr[j].tokType == tokenTypes.number) {\n            for (var iBefore = i; iBefore >= 0; iBefore--) {\n              var jStrt = iBefore == i ? j - 1 : this.chunks[iBefore].chunkArr.length - 1;\n              for (var jBefore = jStrt; jBefore >= 0; jBefore--) {\n                var prvTokType = this.chunks[iBefore].chunkArr[jBefore].tokType;\n                if (prvTokType == tokenTypes.surahID) {\n                  this.chunks[i].chunkArr[j].tokType = tokenTypes.exactLocation;\n                  this.chunks[i].chunkArr[j].tokVal = new Location(this.chunks[iBefore].chunkArr[jBefore].tokVal, this.chunks[i].chunkArr[j].tokVal);\n                  bChange = true;\n                  iBefore = -1;\n                  break;\n                }\n                if (prvTokType == tokenTypes.exactLocation) {\n                  this.chunks[i].chunkArr[j].tokType = tokenTypes.exactLocation;\n                  this.chunks[i].chunkArr[j].tokVal = new Location(this.chunks[iBefore].chunkArr[jBefore].tokVal.surahIndx, this.chunks[i].chunkArr[j].tokVal);\n                  bChange = true;\n                  iBefore = -1;\n                  break;\n                }\n                if (prvTokType == tokenTypes.pageWord || prvTokType == tokenTypes.pageID) {\n                  this.chunks[i].chunkArr[j].tokType = tokenTypes.pageID;\n                  bChange = true;\n                  iBefore = -1;\n                  break;\n                }\n                if (prvTokType == tokenTypes.juzuuWord || prvTokType == tokenTypes.juzuuID) {\n                  this.chunks[i].chunkArr[j].tokType = tokenTypes.juzuuID;\n                  bChange = true;\n                  iBefore = -1;\n                  break;\n                }\n                if (prvTokType == tokenTypes.surahWord) {\n                  this.chunks[i].chunkArr[j].tokType = tokenTypes.surahID;\n                  bChange = true;\n                  iBefore = -1;\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      for (var i = 0; i < this.chunks.length; i++) {\n        for (var j = 0; j < this.chunks[i].chunkArr.length; j++) {\n          if (this.chunks[i].chunkArr[j].tokType == tokenTypes.endWord) {\n            for (var iAfter = i; iAfter < this.chunks.length; iAfter++) {\n              var _jStrt = iAfter == i ? j + 1 : 0,\n                jEnd = this.chunks[iAfter].chunkArr.length;\n              for (var jAfter = _jStrt; jAfter < jEnd; jAfter++) {\n                var nxtTokType = this.chunks[iAfter].chunkArr[jAfter].tokType;\n                if (nxtTokType == tokenTypes.surahID) {\n                  this.chunks[i].chunkArr[j].tokType = tokenTypes.exactLocation;\n                  this.chunks[i].chunkArr[j].tokVal = new Location(this.chunks[iAfter].chunkArr[jAfter].tokVal, this.quranInfo.getSurahNumAyah(this.chunks[iAfter].chunkArr[jAfter].tokVal));\n                  iAfter = this.chunks.length + 1;\n                  break;\n                }\n              }\n            }\n            if (this.chunks[i].chunkArr[j].tokType == tokenTypes.exactLocation) continue;\n            for (var iBefore = i; iBefore >= 0; iBefore--) {\n              var _jStrt2 = iBefore == i ? j - 1 : this.chunks[iBefore].chunkArr.length - 1;\n              for (var jBefore = _jStrt2; jBefore >= 0; jBefore--) {\n                var _prvTokType = this.chunks[iBefore].chunkArr[jBefore].tokType;\n                if (_prvTokType == tokenTypes.exactLocation) {\n                  this.chunks[i].chunkArr[j].tokType = tokenTypes.exactLocation;\n                  this.chunks[i].chunkArr[j].tokVal = new Location(this.chunks[iBefore].chunkArr[jBefore].tokVal.surahIndx, this.quranInfo.getSurahNumAyah(this.chunks[iBefore].chunkArr[jBefore].tokVal.surahIndx));\n                  iBefore = -1;\n                  break;\n                }\n                if (_prvTokType == tokenTypes.surahID) {\n                  this.chunks[i].chunkArr[j].tokType = tokenTypes.exactLocation;\n                  this.chunks[i].chunkArr[j].tokVal = new Location(this.chunks[iBefore].chunkArr[jBefore].tokVal, this.quranInfo.getSurahNumAyah(this.chunks[iBefore].chunkArr[jBefore].tokVal));\n                  iBefore = -1;\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      return bChange;\n    }\n  }, {\n    key: \"checkStartEndFound\",\n    value: function checkStartEndFound() {\n      var exacts = [];\n      for (var i = 0; i < this.chunks.length; i++) {\n        for (var j = 0; j < this.chunks[i].chunkArr.length; j++) {\n          if (this.chunks[i].chunkArr[j].tokType == tokenTypes.exactLocation) {\n            exacts.push(this.chunks[i].chunkArr[j]);\n          }\n        }\n      }\n      if (exacts.length < 2) return null;\n      var quranInfo = this.quranInfo;\n      var ret = {\n        bIsSuccess: true,\n        strtSurah: exacts[0].tokVal.surahIndx,\n        strtAyah: exacts[0].tokVal.ayahIndx,\n        endSurah: exacts[exacts.length - 1].tokVal.surahIndx,\n        endAyah: exacts[exacts.length - 1].tokVal.ayahIndx,\n        toString: function toString() {\n          var indexer = quranInfo;\n          var strRet = \"success\\n\";\n          strRet += \"Surah \" + indexer.getSurahNameAr(this.strtSurah) + \" Ayah \" + this.strtAyah + \"\\n\";\n          strRet += \"Surah \" + indexer.getSurahNameAr(this.endSurah) + \" Ayah \" + this.endAyah + \"\\n\";\n          return strRet;\n        }\n      };\n      return ret;\n    }\n  }, {\n    key: \"parseRevisionQuery\",\n    value: function parseRevisionQuery(text) {\n      text = MiscUtilities.removeLeadingAlefLam(MiscUtilities.normalizeString(text).replace(/ الي /g, \" حتي \"));\n      text = this.quranInfo.replaceJuzuuNamesFromString(text);\n      var newStr = text;\n      var tokens = newStr.split(\" \");\n      var tokensClassified = [];\n      for (var iTok = 0; iTok < tokens.length; iTok++) {\n        var tokClass = this.classifyToken(tokens[iTok]);\n        if (tokClass.tokType == tokenTypes.ignore || tokClass.tokType == tokenTypes.unkown) continue;\n        tokensClassified.push(tokClass);\n      }\n      this.chunks = [];\n      var curArr = tokensClassified.slice(0);\n      var iTok = 1;\n      var iChunk = 0;\n      while (curArr.length > 1 && iTok < curArr.length - 1) {\n        if (curArr[iTok].tokType == tokenTypes.toWord || curArr[iTok].tokType == tokenTypes.fromWord || curArr[iTok].tokType == tokenTypes.endWord) {\n          this.chunks.push(new Chunk(iChunk, curArr.slice(0, iTok)));\n          iChunk++;\n          curArr = curArr.slice(iTok);\n          iTok = 1;\n          continue;\n        }\n        iTok++;\n      }\n      if (curArr.length > 0) {\n        this.chunks.push(new Chunk(iChunk, curArr));\n        iChunk++;\n      }\n      var bRetry = true;\n      while (bRetry) {\n        bRetry = false;\n        var bChange = true;\n        while (bChange) {\n          bChange = false;\n          for (var i = 0; i < this.chunks.length; i++) {\n            bChange = this.filterTokens(i) || bChange;\n          }\n          if (bChange) {\n            var _retFound = this.checkStartEndFound();\n            if (_retFound != null) return _retFound;\n          }\n          bChange = this.filterChunks() || bChange;\n          if (bChange) {\n            var _retFound2 = this.checkStartEndFound();\n            if (_retFound2 != null) return _retFound2;\n          }\n          bRetry = bRetry || bChange;\n        }\n        bChange = true;\n        while (bChange) {\n          bChange = this.estimateLocation();\n          bRetry = bRetry || bChange;\n          if (bChange) {\n            var _retFound3 = this.checkStartEndFound();\n            if (_retFound3 != null) return _retFound3;\n          }\n        }\n      }\n      var retFound = this.checkStartEndFound();\n      if (retFound != null) return retFound;\n      return {\n        bIsSuccess: false,\n        err: \"Couldn't interpret search\",\n        data: this.getChunksArrAsStr(),\n        toString: function toString() {\n          var strRet = \"failed: \\n\" + this.data;\n          return strRet;\n        }\n      };\n    }\n  }]);\n  return SearchTextParser;\n}();\nexport default SearchTextParser;","map":{"version":3,"names":["MiscUtilities","QuranIndexer","QuranQueryDictionary","tokenTypes","Object","freeze","unkown","surahWord","juzuuWord","pageWord","ayahWord","fromWord","toWord","endWord","number","surahID","juzuuID","pageID","ayahID","exactLocation","ignore","tokenTypesStr","Token","tokType","tokVal","Chunk","id","arr","chunkID","chunkArr","strRet","length","j","getTokAsStr","Location","surahIndx","ayahIndx","IndexInChunk","iChunk","jTok","tok","SearchTextParser","quranInfo","quranDictionary","fillDictionary","chunks","i","getChunkAsStr","iC","arrTokTypes","retIndx","ret","push","types","indeces","token","res","lookup","bIsFound","distR","type","val","test","parseInt","bIsFrom","location","getSurahNumAyah","getJuzuuAyahRange","start","end","localStrt","getAyahLocalIndx","localEnd","localSurahIndx","localAyahIndx","getPageAyahRange","toktypesArr","indexOf","fromIndx","toIndx","exactIndx","fromTo","locIDs","toktypesInChunk","findTokensInChunk","includes","constructIndxIfFound","locationsInChunk","bIsStrt","locationToksArr","estimateLocationFromTok","locationTokFrom","locationTokTo","locationsFrom","estimateLocationInTokArr","locationsTo","closestpair","iF","iT","dist","getDistanceBetLocations","iFromChnk","iFromLocTok","iToChnk","iToLocTok","collectLocationTokensFromChunk","loc1","loc2","getAyahGlobalIndx","getFromToIndeces","curFrom","curTo","curExact","locations","collectLocationTokens","nearestLocation","nearestDist","nearestIndx","matchTwoLocationArrays","pop","locationToks","compare","a","b","originalTok","sort","iMinDist","minDist","iStrt","jStrt","iEnd","jEnd","bChange","splice","iBefore","jBefore","prvTokType","iAfter","jAfter","nxtTokType","exacts","bIsSuccess","strtSurah","strtAyah","endSurah","endAyah","toString","indexer","getSurahNameAr","text","removeLeadingAlefLam","normalizeString","replace","replaceJuzuuNamesFromString","newStr","tokens","split","tokensClassified","iTok","tokClass","classifyToken","curArr","slice","bRetry","filterTokens","retFound","checkStartEndFound","filterChunks","estimateLocation","err","data","getChunksArrAsStr"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/helpers/SearchTextParser.js"],"sourcesContent":["import MiscUtilities from \"./MiscUtilities\";\r\nimport QuranIndexer from \"./QuranIndexer\";\r\nimport QuranQueryDictionary from \"./QuranQueryDictionary\";\r\nconst tokenTypes = Object.freeze({\r\n  unkown: 0,\r\n  surahWord: 1, // the word \"surah\" or \"chapter\" or سورة\r\n  juzuuWord: 2, // the word \"juzuu\" or \"part\" or جزء\r\n  pageWord: 3, // the word \"page\" or صفحة\r\n  ayahWord: 4,\r\n  fromWord: 5,\r\n  toWord: 6,\r\n  endWord: 7,\r\n  number: 8,\r\n  surahID: 9, // index of surah\r\n  juzuuID: 10, //index of juzuu\r\n  pageID: 11,\r\n  ayahID: 12,\r\n  exactLocation: 13, //surah+ayah\r\n  ignore: 1000,\r\n});\r\nconst tokenTypesStr = [\r\n  \"ignore\",\r\n  \"surahWord\",\r\n  \"juzuuWord\",\r\n  \"pageWord\",\r\n  \"ayahWord\",\r\n  \"fromWord\",\r\n  \"toWord\",\r\n  \"endWord\",\r\n  \"number\",\r\n  \"surahID\",\r\n  \"juzuuID\",\r\n  \"pageID\",\r\n  \"ayahID\",\r\n  \"exactLocation\",\r\n  \"unkown\",\r\n];\r\nclass Token {\r\n  constructor(tokType = tokenTypes.unkown, tokVal = null) {\r\n    this.tokType = tokType;\r\n    this.tokVal = tokVal;\r\n  }\r\n  getTokAsStr() {\r\n    return \"(\" + tokenTypesStr[this.tokType] + \" , \" + this.tokVal + \")\";\r\n  }\r\n}\r\nclass Chunk {\r\n  constructor(id = -1, arr = []) {\r\n    this.chunkID = id;\r\n    this.chunkArr = arr;\r\n  }\r\n  getChunkAsStr() {\r\n    let strRet =\r\n      \"chunk[\" + this.chunkID + \"] (\" + this.chunkArr.length + \" tokens): \";\r\n    for (let j = 0; j < this.chunkArr.length; j++) {\r\n      strRet += this.chunkArr[j].getTokAsStr() + \"\\t\";\r\n    }\r\n    return strRet;\r\n  }\r\n}\r\nclass Location {\r\n  constructor(surahIndx = -1, ayahIndx = -1) {\r\n    this.surahIndx = surahIndx;\r\n    this.ayahIndx = ayahIndx;\r\n  }\r\n}\r\nclass IndexInChunk {\r\n  constructor(iChunk = -1, jTok = -1, tok = null) {\r\n    this.iChunk = iChunk;\r\n    this.jTok = jTok;\r\n    this.tok = tok;\r\n  }\r\n}\r\nclass SearchTextParser {\r\n  constructor() {\r\n    this.quranInfo = new QuranIndexer();\r\n    this.quranDictionary = new QuranQueryDictionary();\r\n    this.quranDictionary.fillDictionary(this.quranInfo, tokenTypes);\r\n    this.chunks = [];\r\n  }\r\n\r\n  getChunksArrAsStr() {\r\n    let strRet = \" \" + this.chunks.length + \" chunks\\n\";\r\n    for (var i = 0; i < this.chunks.length; i++) {\r\n      strRet += this.chunks[i].getChunkAsStr() + \"\\n\";\r\n    }\r\n    return strRet;\r\n  }\r\n\r\n  findTokensInChunk(iC, arrTokTypes) {\r\n    let retIndx = [],\r\n      ret = [];\r\n    for (var i = 0; i < this.chunks[iC].chunkArr.length; i++) {\r\n      for (var j = 0; j < arrTokTypes.length; j++) {\r\n        if (this.chunks[iC].chunkArr[i].tokType == arrTokTypes[j]) {\r\n          retIndx.push(i);\r\n          ret.push(arrTokTypes[j]);\r\n        }\r\n      }\r\n    }\r\n    return { types: ret, indeces: retIndx };\r\n  }\r\n  classifyToken(token) {\r\n    let res = this.quranDictionary.lookup(token);\r\n    if (res.bIsFound && res.distR < 0.4) {\r\n      return new Token(res.type, res.val);\r\n    } else {\r\n      if (/^\\d+$/.test(token))\r\n        return new Token(tokenTypes.number, parseInt(token));\r\n      return new Token(tokenTypes.unkown, \"err\");\r\n    }\r\n  }\r\n  estimateLocationFromTok(bIsFrom, tok) {\r\n    let location = new Location();\r\n    if (tok.tokType == tokenTypes.surahID) {\r\n      location.surahIndx = tok.tokVal;\r\n      location.ayahIndx = bIsFrom\r\n        ? 1\r\n        : this.quranInfo.getSurahNumAyah(tok.tokVal);\r\n    }\r\n    if (tok.tokType == tokenTypes.juzuuID) {\r\n      let [start, end] = this.quranInfo.getJuzuuAyahRange(tok.tokVal);\r\n      let localStrt = this.quranInfo.getAyahLocalIndx(start);\r\n      let localEnd = this.quranInfo.getAyahLocalIndx(end);\r\n      location.surahIndx = bIsFrom\r\n        ? localStrt.localSurahIndx\r\n        : localEnd.localSurahIndx;\r\n      location.ayahIndx = bIsFrom\r\n        ? localStrt.localAyahIndx\r\n        : localEnd.localAyahIndx;\r\n    }\r\n    if (tok.tokType == tokenTypes.pageID) {\r\n      let [start, end] = this.quranInfo.getPageAyahRange(tok.tokVal);\r\n      let localStrt = this.quranInfo.getAyahLocalIndx(start);\r\n      let localEnd = this.quranInfo.getAyahLocalIndx(end);\r\n      location.surahIndx = bIsFrom\r\n        ? localStrt.localSurahIndx\r\n        : localEnd.localSurahIndx;\r\n      location.ayahIndx = bIsFrom\r\n        ? localStrt.localAyahIndx\r\n        : localEnd.localAyahIndx;\r\n    }\r\n    return new Token(tokenTypes.exactLocation, location);\r\n  }\r\n  constructIndxIfFound(toktypesArr, tokType, iC) {\r\n    let j = toktypesArr.types.indexOf(tokType);\r\n    if (j >= 0) {\r\n      return new IndexInChunk(\r\n        iC,\r\n        toktypesArr.indeces[j],\r\n        this.chunks[toktypesArr.indeces[j]]\r\n      ); //{ iChnk: iC, jTok: toktypesArr.indeces[j] };\r\n    }\r\n    return null;\r\n  }\r\n  getFromToIndeces(iC) {\r\n    let fromIndx = null;\r\n    let toIndx = null;\r\n    let exactIndx = null;\r\n\r\n    const fromTo = [\r\n      tokenTypes.fromWord,\r\n      tokenTypes.toWord,\r\n      tokenTypes.exactLocation,\r\n    ];\r\n\r\n    const locIDs = [tokenTypes.juzuuID, tokenTypes.pageID, tokenTypes.surahID];\r\n    for (var i = 0; i < this.chunks[iC].chunkArr.length; i++) {\r\n      let toktypesInChunk = this.findTokensInChunk(iC, fromTo);\r\n      if (toktypesInChunk.types.length == 0) continue;\r\n      if (toktypesInChunk.types.includes(tokenTypes.exactLocation)) {\r\n        if (exactIndx == null) {\r\n          exactIndx = this.constructIndxIfFound(\r\n            toktypesInChunk,\r\n            tokenTypes.exactLocation,\r\n            iC\r\n          );\r\n        }\r\n        continue;\r\n      }\r\n      if (fromIndx == null) {\r\n        let locationsInChunk = this.findTokensInChunk(iC, locIDs);\r\n        if (locationsInChunk.types.length != 0) {\r\n          fromIndx = this.constructIndxIfFound(\r\n            toktypesInChunk,\r\n            tokenTypes.fromWord,\r\n            iC\r\n          );\r\n          if (fromIndx != null) continue;\r\n        }\r\n      }\r\n      if (toIndx == null) {\r\n        let locationsInChunk = this.findTokensInChunk(iC, locIDs);\r\n        if (locationsInChunk.types.length != 0) {\r\n          toIndx = this.constructIndxIfFound(\r\n            toktypesInChunk,\r\n            tokenTypes.toWord,\r\n            iC\r\n          );\r\n          if (toIndx != null) continue;\r\n        }\r\n      }\r\n    }\r\n    return [fromIndx, toIndx, exactIndx];\r\n  }\r\n  estimateLocationInTokArr(bIsStrt, locationToksArr) {\r\n    let ret = [];\r\n    for (var i = 0; i < locationToksArr.length; i++) {\r\n      ret.push(this.estimateLocationFromTok(bIsStrt, locationToksArr[i].tok));\r\n    }\r\n    return ret;\r\n  }\r\n  matchTwoLocationArrays(locationTokFrom, locationTokTo) {\r\n    if (locationTokFrom.length == 0 || locationTokTo.length == 0) return false;\r\n    let locationsFrom = this.estimateLocationInTokArr(true, locationTokFrom);\r\n    let locationsTo = this.estimateLocationInTokArr(false, locationTokTo);\r\n    // find closest pair (most specific)\r\n    let closestpair = { iF: -1, iT: -1, dist: 1000000 };\r\n    for (var i = 0; i < locationsFrom.length; i++) {\r\n      for (var j = 0; j < locationsTo.length; j++) {\r\n        let dist = this.getDistanceBetLocations(\r\n          locationsFrom[i],\r\n          locationsTo[j]\r\n        );\r\n        if (dist > 0 && dist < closestpair.dist) {\r\n          closestpair.dist = dist;\r\n          closestpair.iF = i;\r\n          closestpair.iT = j;\r\n        }\r\n      }\r\n    }\r\n    if (closestpair.iF != -1) {\r\n      let iFromChnk = locationTokFrom[closestpair.iF].iChunk;\r\n      let iFromLocTok = locationTokFrom[closestpair.iF].jTok;\r\n      this.chunks[iFromChnk].chunkArr[iFromLocTok] =\r\n        locationsFrom[closestpair.iF];\r\n\r\n      let iToChnk = locationTokTo[closestpair.iT].iChunk;\r\n      let iToLocTok = locationTokTo[closestpair.iT].jTok;\r\n      this.chunks[iToChnk].chunkArr[iToLocTok] = locationsTo[closestpair.iT];\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  collectLocationTokensFromChunk(iC) {\r\n    const locIDs = [tokenTypes.juzuuID, tokenTypes.pageID, tokenTypes.surahID];\r\n    let ret = [];\r\n    for (var i = 0; i < this.chunks[iC].chunkArr.length; i++) {\r\n      if (locIDs.includes(this.chunks[iC].chunkArr[i].tokType)) {\r\n        ret.push(new IndexInChunk(iC, i, this.chunks[iC].chunkArr[i])); //{ iChnk: indx, jTok: i, tok:  this.chunks[iC].chunkArr[i] });\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n  collectLocationTokens() {\r\n    let ret = [];\r\n    for (var i = 0; i < this.chunks.length; i++) {\r\n      ret.push(...this.collectLocationTokensFromChunk(i));\r\n    }\r\n    return ret;\r\n  }\r\n  getDistanceBetLocations(loc1, loc2) {\r\n    let ret =\r\n      this.quranInfo.getAyahGlobalIndx(\r\n        loc1.tokVal.surahIndx,\r\n        loc1.tokVal.ayahIndx\r\n      ) -\r\n      this.quranInfo.getAyahGlobalIndx(\r\n        loc2.tokVal.surahIndx,\r\n        loc2.tokVal.ayahIndx\r\n      );\r\n    if (ret < 0) ret *= -1;\r\n    return ret;\r\n  }\r\n  estimateLocation() {\r\n    let fromIndx = null;\r\n    let toIndx = null;\r\n    let exactIndx = null;\r\n\r\n    for (var i = 0; i < this.chunks.length; i++) {\r\n      let [curFrom, curTo, curExact] = this.getFromToIndeces(i);\r\n      if (curFrom) fromIndx = curFrom;\r\n      if (curTo) toIndx = curTo;\r\n      if (curExact) exactIndx = curExact;\r\n    }\r\n    // if exact location (comes only from end) then no need for the \"to\" any location is used as from (if more than one use the closest to exact location)\r\n    // if (from and to) or (from and exact location) found then no need to do any more\r\n    // if only \"from\" then search for any next location to use as \"to\"\r\n    // if only \"to\" then search for any prev location to use as \"from\"\r\n    // if not any then it should only be one chunk and the cases are either:\r\n    // 1 location to use as start and end\r\n    // 2 locations to use as \"from\" \"to\"\r\n    // 3 or more locations (take the shortest -i.e. most specific- two and use them as start/end) // todo: determine if one location is \"part\" of another\r\n\r\n    if (exactIndx != null) {\r\n      let locations = this.collectLocationTokens(); // array of {iChnk,jTok,tok}\r\n      let nearestLocation = null;\r\n      let nearestDist = 1000000;\r\n      let nearestIndx = -1;\r\n      for (var i = 0; i < locations.length; i++) {\r\n        let location = this.estimateLocationFromTok(true, locations[i].tok);\r\n        let dist = this.getDistanceBetLocations(\r\n          location,\r\n          this.chunks[exactIndx.iChunk].chunkArr[exactIndx.jTok]\r\n        );\r\n        if (dist < nearestDist) {\r\n          nearestDist = dist;\r\n          nearestLocation = location;\r\n          nearestIndx = i;\r\n        }\r\n      }\r\n      if (nearestLocation != null) {\r\n        this.chunks[locations[nearestIndx].iChunk].chunkArr[\r\n          locations[nearestIndx].jTok\r\n        ] = nearestLocation;\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    if (fromIndx != null && toIndx != null) {\r\n      let locationTokFrom = this.collectLocationTokensFromChunk(\r\n        fromIndx.iChunk\r\n      ); // array of {iChnk,jTok,tok}\r\n      let locationTokTo = this.collectLocationTokensFromChunk(toIndx.iChunk); // array of {iChnk,jTok,tok}\r\n      return this.matchTwoLocationArrays(locationTokFrom, locationTokTo);\r\n    }\r\n    if (fromIndx != null) {\r\n      let locationTokFrom = this.collectLocationTokensFromChunk(\r\n        fromIndx.iChunk\r\n      ); // array of {iChnk,jTok,tok}\r\n\r\n      let locationTokTo = [];\r\n      for (var iC = fromIndx.iChunk + 1; iC < this.chunks.length; iC++) {\r\n        locationTokTo.push(...this.collectLocationTokensFromChunk(iC)); // array of {iChnk,jTok,tok}\r\n      }\r\n      if (locationTokTo.length == 0) {\r\n        if (locationTokFrom.length > 1) {\r\n          locationTokTo.push(locationTokFrom.pop());\r\n        }\r\n      }\r\n      return this.matchTwoLocationArrays(locationTokFrom, locationTokTo);\r\n    }\r\n    if (toIndx != null) {\r\n      let locationTokTo = this.collectLocationTokensFromChunk(toIndx.iChunk); // array of {iChnk,jTok,tok}\r\n      let locationTokFrom = [];\r\n      for (var iC = 0; iC < toIndx.iChunk; iC++) {\r\n        locationTokFrom.push(...this.collectLocationTokensFromChunk(iC)); // array of {iChnk,jTok,tok}\r\n      }\r\n      return this.matchTwoLocationArrays(locationTokFrom, locationTokTo);\r\n    }\r\n    let locationToks = this.collectLocationTokens(); // array of {iChnk,jTok,tok}\r\n    if (locationToks.length == 0) return false;\r\n    let locationsFrom = this.estimateLocationInTokArr(true, locationToks);\r\n    if (locationToks.length == 1) {\r\n      let iFromChnk = locationToks[0].iChunk;\r\n      let iFromLocTok = locationToks[0].jTok;\r\n      this.chunks[iFromChnk].chunkArr[iFromLocTok] = locationsFrom[0];\r\n      let locationsTo = this.estimateLocationInTokArr(false, locationToks);\r\n      this.chunks[iFromChnk].chunkArr.push(locationsTo[0]);\r\n      return true;\r\n    }\r\n    // estimate the closest non identical locations\r\n    function compare(a, b) {\r\n      if (a.surahIndx < b.surahIndx) return -1;\r\n      if (a.surahIndx > b.surahIndx) return 1;\r\n      if (a.ayahIndx < b.ayahIndx) return -1;\r\n      if (a.ayahIndx > b.ayahIndx) return 1;\r\n      return 0;\r\n    }\r\n    for (var i = 0; i < locationsFrom.length; i++) {\r\n      locationsFrom[i].originalTok = locationToks[i];\r\n    }\r\n    locationsFrom.sort(compare);\r\n    let iMinDist = -1;\r\n    let minDist = 0;\r\n    for (var i = 1; i < locationsFrom.length; i++) {\r\n      let dist = this.getDistanceBetLocations(\r\n        locationsFrom[i],\r\n        locationsFrom[i - 1]\r\n      );\r\n      if (dist < minDist) {\r\n        minDist = dist;\r\n        iMinDist = i - 1;\r\n      }\r\n    }\r\n    if (iMinDist == -1) return false; //should never happen!\r\n    let iStrt = locationsFrom[iMinDist - 1].originalTok.iChunk;\r\n    let jStrt = locationsFrom[iMinDist - 1].originalTok.jTok;\r\n    let iEnd = locationsFrom[iMinDist].originalTok.iChunk;\r\n    let jEnd = locationsFrom[iMinDist].originalTok.jTok;\r\n    this.chunks[iStrt].chunkArr[jStrt] = this.estimateLocationFromTok(\r\n      true,\r\n      this.chunks[iStrt].chunkArr[jStrt]\r\n    );\r\n    this.chunks[iEnd].chunkArr[jEnd] = this.estimateLocationFromTok(\r\n      false,\r\n      this.chunks[iEnd].chunkArr[jEnd]\r\n    );\r\n    return true;\r\n  }\r\n  filterTokens(iC) {\r\n    let bChange = false;\r\n    // first search for location keywords (page,juzuu,surah)\r\n    for (var i = 0; i < this.chunks[iC].chunkArr.length; i++) {\r\n      if (this.chunks[iC].chunkArr[i].tokType == tokenTypes.ayahWord) {\r\n        if (i < this.chunks[iC].chunkArr.length - 1) {\r\n          if (\r\n            this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.number ||\r\n            this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.ayahID\r\n          ) {\r\n            this.chunks[iC].chunkArr[i + 1].tokType = tokenTypes.ayahID;\r\n            this.chunks[iC].chunkArr.splice(i, 1);\r\n            bChange = true;\r\n            i--;\r\n          }\r\n        }\r\n      } else if (this.chunks[iC].chunkArr[i].tokType == tokenTypes.surahWord) {\r\n        if (i < this.chunks[iC].chunkArr.length - 1) {\r\n          if (\r\n            this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.number ||\r\n            this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.surahID\r\n          ) {\r\n            this.chunks[iC].chunkArr[i + 1].tokType = tokenTypes.surahID;\r\n            this.chunks[iC].chunkArr.splice(i, 1);\r\n            bChange = true;\r\n            i--;\r\n          }\r\n        }\r\n      } else if (this.chunks[iC].chunkArr[i].tokType == tokenTypes.pageWord) {\r\n        if (i < this.chunks[iC].chunkArr.length - 1) {\r\n          if (\r\n            this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.number ||\r\n            this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.pageID\r\n          ) {\r\n            this.chunks[iC].chunkArr[i + 1].tokType = tokenTypes.pageID;\r\n            this.chunks[iC].chunkArr.splice(i, 1);\r\n            bChange = true;\r\n            i--;\r\n          }\r\n        }\r\n      } else if (this.chunks[iC].chunkArr[i].tokType == tokenTypes.juzuuWord) {\r\n        if (i < this.chunks[iC].chunkArr.length - 1) {\r\n          if (\r\n            this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.number ||\r\n            this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.juzuuID\r\n          ) {\r\n            this.chunks[iC].chunkArr[i + 1].tokType = tokenTypes.juzuuID;\r\n            this.chunks[iC].chunkArr.splice(i, 1);\r\n            bChange = true;\r\n            i--;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 2nd search for surahID+number=ayahID\r\n    for (var i = 0; i < this.chunks[iC].chunkArr.length - 1; i++) {\r\n      if (\r\n        this.chunks[iC].chunkArr[i].tokType == tokenTypes.surahID &&\r\n        this.chunks[iC].chunkArr[i + 1].tokType == tokenTypes.number\r\n      ) {\r\n        // convert into location token\r\n        this.chunks[iC].chunkArr[i + 1].tokType = tokenTypes.exactLocation;\r\n        this.chunks[iC].chunkArr[i + 1].tokVal = new Location(\r\n          this.chunks[iC].chunkArr[i].tokVal,\r\n          this.chunks[iC].chunkArr[i + 1].tokVal\r\n        );\r\n\r\n        this.chunks[iC].chunkArr.splice(i, 1);\r\n        bChange = true;\r\n      }\r\n    }\r\n    return bChange;\r\n  }\r\n  filterChunks() {\r\n    let bChange = false;\r\n    // 1st filter for nummber tokens that are not identified\r\n    for (var i = 0; i < this.chunks.length; i++) {\r\n      for (var j = 0; j < this.chunks[i].chunkArr.length; j++) {\r\n        if (this.chunks[i].chunkArr[j].tokType == tokenTypes.number) {\r\n          // search backwards to see what the latest identifier is\r\n          for (var iBefore = i; iBefore >= 0; iBefore--) {\r\n            let jStrt =\r\n              iBefore == i ? j - 1 : this.chunks[iBefore].chunkArr.length - 1;\r\n            for (var jBefore = jStrt; jBefore >= 0; jBefore--) {\r\n              let prvTokType = this.chunks[iBefore].chunkArr[jBefore].tokType;\r\n              if (prvTokType == tokenTypes.surahID) {\r\n                // convert into location token\r\n                this.chunks[i].chunkArr[j].tokType = tokenTypes.exactLocation;\r\n                this.chunks[i].chunkArr[j].tokVal = new Location(\r\n                  this.chunks[iBefore].chunkArr[jBefore].tokVal,\r\n                  this.chunks[i].chunkArr[j].tokVal\r\n                );\r\n                bChange = true;\r\n                // break both loops\r\n                iBefore = -1;\r\n                break;\r\n              }\r\n              if (prvTokType == tokenTypes.exactLocation) {\r\n                // convert into location token\r\n                this.chunks[i].chunkArr[j].tokType = tokenTypes.exactLocation;\r\n                this.chunks[i].chunkArr[j].tokVal = new Location(\r\n                  this.chunks[iBefore].chunkArr[jBefore].tokVal.surahIndx,\r\n                  this.chunks[i].chunkArr[j].tokVal\r\n                );\r\n                bChange = true;\r\n                // break both loops\r\n                iBefore = -1;\r\n                break;\r\n              }\r\n              if (\r\n                prvTokType == tokenTypes.pageWord ||\r\n                prvTokType == tokenTypes.pageID\r\n              ) {\r\n                // convert to pageID\r\n                this.chunks[i].chunkArr[j].tokType = tokenTypes.pageID;\r\n                bChange = true;\r\n                // break both loops\r\n                iBefore = -1;\r\n                break;\r\n              }\r\n              if (\r\n                prvTokType == tokenTypes.juzuuWord ||\r\n                prvTokType == tokenTypes.juzuuID\r\n              ) {\r\n                // convert to pageID\r\n                this.chunks[i].chunkArr[j].tokType = tokenTypes.juzuuID;\r\n                bChange = true;\r\n                // break both loops\r\n                iBefore = -1;\r\n                break;\r\n              }\r\n              if (prvTokType == tokenTypes.surahWord) {\r\n                // convert to pageID\r\n                this.chunks[i].chunkArr[j].tokType = tokenTypes.surahID;\r\n                bChange = true;\r\n                // break both loops\r\n                iBefore = -1;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 2nd replace the end with either the exact with id after or id before\r\n    for (var i = 0; i < this.chunks.length; i++) {\r\n      for (var j = 0; j < this.chunks[i].chunkArr.length; j++) {\r\n        if (this.chunks[i].chunkArr[j].tokType == tokenTypes.endWord) {\r\n          for (var iAfter = i; iAfter < this.chunks.length; iAfter++) {\r\n            let jStrt = iAfter == i ? j + 1 : 0,\r\n              jEnd = this.chunks[iAfter].chunkArr.length;\r\n            for (var jAfter = jStrt; jAfter < jEnd; jAfter++) {\r\n              let nxtTokType = this.chunks[iAfter].chunkArr[jAfter].tokType;\r\n              if (nxtTokType == tokenTypes.surahID) {\r\n                // convert into location token\r\n                this.chunks[i].chunkArr[j].tokType = tokenTypes.exactLocation;\r\n                this.chunks[i].chunkArr[j].tokVal = new Location(\r\n                  this.chunks[iAfter].chunkArr[jAfter].tokVal,\r\n                  this.quranInfo.getSurahNumAyah(\r\n                    this.chunks[iAfter].chunkArr[jAfter].tokVal\r\n                  )\r\n                );\r\n\r\n                // break both loops\r\n                iAfter = this.chunks.length + 1;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (this.chunks[i].chunkArr[j].tokType == tokenTypes.exactLocation)\r\n            continue;\r\n          // search backwards to see what the latest identifier is\r\n          for (var iBefore = i; iBefore >= 0; iBefore--) {\r\n            let jStrt =\r\n              iBefore == i ? j - 1 : this.chunks[iBefore].chunkArr.length - 1;\r\n            for (var jBefore = jStrt; jBefore >= 0; jBefore--) {\r\n              let prvTokType = this.chunks[iBefore].chunkArr[jBefore].tokType;\r\n              if (prvTokType == tokenTypes.exactLocation) {\r\n                // convert into location token\r\n                this.chunks[i].chunkArr[j].tokType = tokenTypes.exactLocation;\r\n                this.chunks[i].chunkArr[j].tokVal = new Location(\r\n                  this.chunks[iBefore].chunkArr[jBefore].tokVal.surahIndx,\r\n                  this.quranInfo.getSurahNumAyah(\r\n                    this.chunks[iBefore].chunkArr[jBefore].tokVal.surahIndx\r\n                  )\r\n                );\r\n                // break both loops\r\n                iBefore = -1;\r\n                break;\r\n              }\r\n              if (prvTokType == tokenTypes.surahID) {\r\n                this.chunks[i].chunkArr[j].tokType = tokenTypes.exactLocation;\r\n                this.chunks[i].chunkArr[j].tokVal = new Location(\r\n                  this.chunks[iBefore].chunkArr[jBefore].tokVal,\r\n                  this.quranInfo.getSurahNumAyah(\r\n                    this.chunks[iBefore].chunkArr[jBefore].tokVal\r\n                  )\r\n                );\r\n\r\n                // break both loops\r\n                iBefore = -1;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return bChange;\r\n  }\r\n  checkStartEndFound() {\r\n    let exacts = [];\r\n    for (var i = 0; i < this.chunks.length; i++) {\r\n      for (var j = 0; j < this.chunks[i].chunkArr.length; j++) {\r\n        if (this.chunks[i].chunkArr[j].tokType == tokenTypes.exactLocation) {\r\n          exacts.push(this.chunks[i].chunkArr[j]);\r\n        }\r\n      }\r\n    }\r\n    //console.log(\"num exacts: \" + exacts.length);\r\n    if (exacts.length < 2) return null;\r\n    let quranInfo = this.quranInfo;\r\n    let ret = {\r\n      bIsSuccess: true,\r\n      strtSurah: exacts[0].tokVal.surahIndx,\r\n      strtAyah: exacts[0].tokVal.ayahIndx,\r\n      endSurah: exacts[exacts.length - 1].tokVal.surahIndx,\r\n      endAyah: exacts[exacts.length - 1].tokVal.ayahIndx,\r\n      toString: function () {\r\n        const indexer = quranInfo;\r\n        let strRet = \"success\\n\";\r\n        strRet +=\r\n          \"Surah \" +\r\n          indexer.getSurahNameAr(this.strtSurah) +\r\n          \" Ayah \" +\r\n          this.strtAyah +\r\n          \"\\n\";\r\n        strRet +=\r\n          \"Surah \" +\r\n          indexer.getSurahNameAr(this.endSurah) +\r\n          \" Ayah \" +\r\n          this.endAyah +\r\n          \"\\n\";\r\n        return strRet;\r\n      },\r\n    };\r\n    //console.log(ret);\r\n    return ret;\r\n  }\r\n  parseRevisionQuery(text) {\r\n    //console.log(\"parsing: \\n\" + text);\r\n    text = MiscUtilities.removeLeadingAlefLam(\r\n      MiscUtilities.normalizeString(text).replace(/ الي /g, \" حتي \")\r\n    );\r\n\r\n    text = this.quranInfo.replaceJuzuuNamesFromString(text);\r\n    var newStr = text;\r\n    //console.log(\"nomalized: \\n\" + newStr);\r\n    var tokens = newStr.split(\" \");\r\n    //console.log(\"raw tokens: \" + tokens);\r\n    var tokensClassified = [];\r\n    for (var iTok = 0; iTok < tokens.length; iTok++) {\r\n      var tokClass = this.classifyToken(tokens[iTok]);\r\n      if (\r\n        tokClass.tokType == tokenTypes.ignore ||\r\n        tokClass.tokType == tokenTypes.unkown\r\n      )\r\n        continue;\r\n      tokensClassified.push(tokClass);\r\n    }\r\n    this.chunks = [];\r\n    var curArr = tokensClassified.slice(0); // copy of the arr\r\n    var iTok = 1;\r\n    var iChunk = 0;\r\n    while (curArr.length > 1 && iTok < curArr.length - 1) {\r\n      if (\r\n        curArr[iTok].tokType == tokenTypes.toWord ||\r\n        curArr[iTok].tokType == tokenTypes.fromWord ||\r\n        curArr[iTok].tokType == tokenTypes.endWord\r\n      ) {\r\n        this.chunks.push(new Chunk(iChunk, curArr.slice(0, iTok)));\r\n        iChunk++;\r\n        curArr = curArr.slice(iTok);\r\n        iTok = 1;\r\n        continue;\r\n      }\r\n      iTok++;\r\n    }\r\n    if (curArr.length > 0) {\r\n      this.chunks.push(new Chunk(iChunk, curArr));\r\n      iChunk++;\r\n    }\r\n\r\n    let bRetry = true;\r\n    while (bRetry) {\r\n      bRetry = false;\r\n      let bChange = true;\r\n      while (bChange) {\r\n        bChange = false;\r\n        for (var i = 0; i < this.chunks.length; i++) {\r\n          bChange = this.filterTokens(i) || bChange;\r\n        }\r\n        if (bChange) {\r\n          let retFound = this.checkStartEndFound();\r\n          if (retFound != null) return retFound;\r\n        }\r\n        bChange = this.filterChunks() || bChange;\r\n        if (bChange) {\r\n          let retFound = this.checkStartEndFound();\r\n          if (retFound != null) return retFound;\r\n        }\r\n        bRetry = bRetry || bChange;\r\n      }\r\n      bChange = true;\r\n      while (bChange) {\r\n        bChange = this.estimateLocation();\r\n        bRetry = bRetry || bChange;\r\n        if (bChange) {\r\n          let retFound = this.checkStartEndFound();\r\n          if (retFound != null) return retFound;\r\n        }\r\n      }\r\n    }\r\n\r\n    let retFound = this.checkStartEndFound();\r\n    if (retFound != null) return retFound;\r\n\r\n    // now try to combine tokens of form\r\n    return {\r\n      bIsSuccess: false,\r\n      err: \"Couldn't interpret search\",\r\n      data: this.getChunksArrAsStr(),\r\n      toString: function () {\r\n        let strRet = \"failed: \\n\" + this.data;\r\n        return strRet;\r\n      },\r\n    };\r\n  }\r\n}\r\nexport default SearchTextParser;\r\n"],"mappings":";;;;AAAA,OAAOA,aAAa;AACpB,OAAOC,YAAY;AACnB,OAAOC,oBAAoB;AAC3B,IAAMC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAAC;EAC/BC,MAAM,EAAE,CAAC;EACTC,SAAS,EAAE,CAAC;EACZC,SAAS,EAAE,CAAC;EACZC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE,CAAC;EACXC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,CAAC;EACVC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE,EAAE;EACXC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE,EAAE;EACVC,aAAa,EAAE,EAAE;EACjBC,MAAM,EAAE;AACV,CAAC,CAAC;AACF,IAAMC,aAAa,GAAG,CACpB,QAAQ,EACR,WAAW,EACX,WAAW,EACX,UAAU,EACV,UAAU,EACV,UAAU,EACV,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,SAAS,EACT,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,eAAe,EACf,QAAQ,CACT;AAAC,IACIC,KAAK;EACT,iBAAwD;IAAA,IAA5CC,OAAO,uEAAGpB,UAAU,CAACG,MAAM;IAAA,IAAEkB,MAAM,uEAAG,IAAI;IAAA;IACpD,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EAAC;IAAA;IAAA,OACD,uBAAc;MACZ,OAAO,GAAG,GAAGH,aAAa,CAAC,IAAI,CAACE,OAAO,CAAC,GAAG,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG,GAAG;IACtE;EAAC;EAAA;AAAA;AAAA,IAEGC,KAAK;EACT,iBAA+B;IAAA,IAAnBC,EAAE,uEAAG,CAAC,CAAC;IAAA,IAAEC,GAAG,uEAAG,EAAE;IAAA;IAC3B,IAAI,CAACC,OAAO,GAAGF,EAAE;IACjB,IAAI,CAACG,QAAQ,GAAGF,GAAG;EACrB;EAAC;IAAA;IAAA,OACD,yBAAgB;MACd,IAAIG,MAAM,GACR,QAAQ,GAAG,IAAI,CAACF,OAAO,GAAG,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACE,MAAM,GAAG,YAAY;MACvE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACH,QAAQ,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;QAC7CF,MAAM,IAAI,IAAI,CAACD,QAAQ,CAACG,CAAC,CAAC,CAACC,WAAW,EAAE,GAAG,IAAI;MACjD;MACA,OAAOH,MAAM;IACf;EAAC;EAAA;AAAA;AAAA,IAEGI,QAAQ,gBACZ,oBAA2C;EAAA,IAA/BC,SAAS,uEAAG,CAAC,CAAC;EAAA,IAAEC,QAAQ,uEAAG,CAAC,CAAC;EAAA;EACvC,IAAI,CAACD,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;AAC1B,CAAC;AAAA,IAEGC,YAAY,gBAChB,wBAAgD;EAAA,IAApCC,MAAM,uEAAG,CAAC,CAAC;EAAA,IAAEC,IAAI,uEAAG,CAAC,CAAC;EAAA,IAAEC,GAAG,uEAAG,IAAI;EAAA;EAC5C,IAAI,CAACF,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;AAChB,CAAC;AAAA,IAEGC,gBAAgB;EACpB,4BAAc;IAAA;IACZ,IAAI,CAACC,SAAS,GAAG,IAAIzC,YAAY,EAAE;IACnC,IAAI,CAAC0C,eAAe,GAAG,IAAIzC,oBAAoB,EAAE;IACjD,IAAI,CAACyC,eAAe,CAACC,cAAc,CAAC,IAAI,CAACF,SAAS,EAAEvC,UAAU,CAAC;IAC/D,IAAI,CAAC0C,MAAM,GAAG,EAAE;EAClB;EAAC;IAAA;IAAA,OAED,6BAAoB;MAClB,IAAIf,MAAM,GAAG,GAAG,GAAG,IAAI,CAACe,MAAM,CAACd,MAAM,GAAG,WAAW;MACnD,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACd,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC3ChB,MAAM,IAAI,IAAI,CAACe,MAAM,CAACC,CAAC,CAAC,CAACC,aAAa,EAAE,GAAG,IAAI;MACjD;MACA,OAAOjB,MAAM;IACf;EAAC;IAAA;IAAA,OAED,2BAAkBkB,EAAE,EAAEC,WAAW,EAAE;MACjC,IAAIC,OAAO,GAAG,EAAE;QACdC,GAAG,GAAG,EAAE;MACV,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACE,MAAM,EAAEe,CAAC,EAAE,EAAE;QACxD,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiB,WAAW,CAAClB,MAAM,EAAEC,CAAC,EAAE,EAAE;UAC3C,IAAI,IAAI,CAACa,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,CAAC,CAACvB,OAAO,IAAI0B,WAAW,CAACjB,CAAC,CAAC,EAAE;YACzDkB,OAAO,CAACE,IAAI,CAACN,CAAC,CAAC;YACfK,GAAG,CAACC,IAAI,CAACH,WAAW,CAACjB,CAAC,CAAC,CAAC;UAC1B;QACF;MACF;MACA,OAAO;QAAEqB,KAAK,EAAEF,GAAG;QAAEG,OAAO,EAAEJ;MAAQ,CAAC;IACzC;EAAC;IAAA;IAAA,OACD,uBAAcK,KAAK,EAAE;MACnB,IAAIC,GAAG,GAAG,IAAI,CAACb,eAAe,CAACc,MAAM,CAACF,KAAK,CAAC;MAC5C,IAAIC,GAAG,CAACE,QAAQ,IAAIF,GAAG,CAACG,KAAK,GAAG,GAAG,EAAE;QACnC,OAAO,IAAIrC,KAAK,CAACkC,GAAG,CAACI,IAAI,EAAEJ,GAAG,CAACK,GAAG,CAAC;MACrC,CAAC,MAAM;QACL,IAAI,OAAO,CAACC,IAAI,CAACP,KAAK,CAAC,EACrB,OAAO,IAAIjC,KAAK,CAACnB,UAAU,CAACW,MAAM,EAAEiD,QAAQ,CAACR,KAAK,CAAC,CAAC;QACtD,OAAO,IAAIjC,KAAK,CAACnB,UAAU,CAACG,MAAM,EAAE,KAAK,CAAC;MAC5C;IACF;EAAC;IAAA;IAAA,OACD,iCAAwB0D,OAAO,EAAExB,GAAG,EAAE;MACpC,IAAIyB,QAAQ,GAAG,IAAI/B,QAAQ,EAAE;MAC7B,IAAIM,GAAG,CAACjB,OAAO,IAAIpB,UAAU,CAACY,OAAO,EAAE;QACrCkD,QAAQ,CAAC9B,SAAS,GAAGK,GAAG,CAAChB,MAAM;QAC/ByC,QAAQ,CAAC7B,QAAQ,GAAG4B,OAAO,GACvB,CAAC,GACD,IAAI,CAACtB,SAAS,CAACwB,eAAe,CAAC1B,GAAG,CAAChB,MAAM,CAAC;MAChD;MACA,IAAIgB,GAAG,CAACjB,OAAO,IAAIpB,UAAU,CAACa,OAAO,EAAE;QACrC,4BAAmB,IAAI,CAAC0B,SAAS,CAACyB,iBAAiB,CAAC3B,GAAG,CAAChB,MAAM,CAAC;UAAA;UAA1D4C,KAAK;UAAEC,GAAG;QACf,IAAIC,SAAS,GAAG,IAAI,CAAC5B,SAAS,CAAC6B,gBAAgB,CAACH,KAAK,CAAC;QACtD,IAAII,QAAQ,GAAG,IAAI,CAAC9B,SAAS,CAAC6B,gBAAgB,CAACF,GAAG,CAAC;QACnDJ,QAAQ,CAAC9B,SAAS,GAAG6B,OAAO,GACxBM,SAAS,CAACG,cAAc,GACxBD,QAAQ,CAACC,cAAc;QAC3BR,QAAQ,CAAC7B,QAAQ,GAAG4B,OAAO,GACvBM,SAAS,CAACI,aAAa,GACvBF,QAAQ,CAACE,aAAa;MAC5B;MACA,IAAIlC,GAAG,CAACjB,OAAO,IAAIpB,UAAU,CAACc,MAAM,EAAE;QACpC,4BAAmB,IAAI,CAACyB,SAAS,CAACiC,gBAAgB,CAACnC,GAAG,CAAChB,MAAM,CAAC;UAAA;UAAzD4C,MAAK;UAAEC,IAAG;QACf,IAAIC,UAAS,GAAG,IAAI,CAAC5B,SAAS,CAAC6B,gBAAgB,CAACH,MAAK,CAAC;QACtD,IAAII,SAAQ,GAAG,IAAI,CAAC9B,SAAS,CAAC6B,gBAAgB,CAACF,IAAG,CAAC;QACnDJ,QAAQ,CAAC9B,SAAS,GAAG6B,OAAO,GACxBM,UAAS,CAACG,cAAc,GACxBD,SAAQ,CAACC,cAAc;QAC3BR,QAAQ,CAAC7B,QAAQ,GAAG4B,OAAO,GACvBM,UAAS,CAACI,aAAa,GACvBF,SAAQ,CAACE,aAAa;MAC5B;MACA,OAAO,IAAIpD,KAAK,CAACnB,UAAU,CAACgB,aAAa,EAAE8C,QAAQ,CAAC;IACtD;EAAC;IAAA;IAAA,OACD,8BAAqBW,WAAW,EAAErD,OAAO,EAAEyB,EAAE,EAAE;MAC7C,IAAIhB,CAAC,GAAG4C,WAAW,CAACvB,KAAK,CAACwB,OAAO,CAACtD,OAAO,CAAC;MAC1C,IAAIS,CAAC,IAAI,CAAC,EAAE;QACV,OAAO,IAAIK,YAAY,CACrBW,EAAE,EACF4B,WAAW,CAACtB,OAAO,CAACtB,CAAC,CAAC,EACtB,IAAI,CAACa,MAAM,CAAC+B,WAAW,CAACtB,OAAO,CAACtB,CAAC,CAAC,CAAC,CACpC;MACH;MACA,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OACD,0BAAiBgB,EAAE,EAAE;MACnB,IAAI8B,QAAQ,GAAG,IAAI;MACnB,IAAIC,MAAM,GAAG,IAAI;MACjB,IAAIC,SAAS,GAAG,IAAI;MAEpB,IAAMC,MAAM,GAAG,CACb9E,UAAU,CAACQ,QAAQ,EACnBR,UAAU,CAACS,MAAM,EACjBT,UAAU,CAACgB,aAAa,CACzB;MAED,IAAM+D,MAAM,GAAG,CAAC/E,UAAU,CAACa,OAAO,EAAEb,UAAU,CAACc,MAAM,EAAEd,UAAU,CAACY,OAAO,CAAC;MAC1E,KAAK,IAAI+B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACE,MAAM,EAAEe,CAAC,EAAE,EAAE;QACxD,IAAIqC,eAAe,GAAG,IAAI,CAACC,iBAAiB,CAACpC,EAAE,EAAEiC,MAAM,CAAC;QACxD,IAAIE,eAAe,CAAC9B,KAAK,CAACtB,MAAM,IAAI,CAAC,EAAE;QACvC,IAAIoD,eAAe,CAAC9B,KAAK,CAACgC,QAAQ,CAAClF,UAAU,CAACgB,aAAa,CAAC,EAAE;UAC5D,IAAI6D,SAAS,IAAI,IAAI,EAAE;YACrBA,SAAS,GAAG,IAAI,CAACM,oBAAoB,CACnCH,eAAe,EACfhF,UAAU,CAACgB,aAAa,EACxB6B,EAAE,CACH;UACH;UACA;QACF;QACA,IAAI8B,QAAQ,IAAI,IAAI,EAAE;UACpB,IAAIS,gBAAgB,GAAG,IAAI,CAACH,iBAAiB,CAACpC,EAAE,EAAEkC,MAAM,CAAC;UACzD,IAAIK,gBAAgB,CAAClC,KAAK,CAACtB,MAAM,IAAI,CAAC,EAAE;YACtC+C,QAAQ,GAAG,IAAI,CAACQ,oBAAoB,CAClCH,eAAe,EACfhF,UAAU,CAACQ,QAAQ,EACnBqC,EAAE,CACH;YACD,IAAI8B,QAAQ,IAAI,IAAI,EAAE;UACxB;QACF;QACA,IAAIC,MAAM,IAAI,IAAI,EAAE;UAClB,IAAIQ,iBAAgB,GAAG,IAAI,CAACH,iBAAiB,CAACpC,EAAE,EAAEkC,MAAM,CAAC;UACzD,IAAIK,iBAAgB,CAAClC,KAAK,CAACtB,MAAM,IAAI,CAAC,EAAE;YACtCgD,MAAM,GAAG,IAAI,CAACO,oBAAoB,CAChCH,eAAe,EACfhF,UAAU,CAACS,MAAM,EACjBoC,EAAE,CACH;YACD,IAAI+B,MAAM,IAAI,IAAI,EAAE;UACtB;QACF;MACF;MACA,OAAO,CAACD,QAAQ,EAAEC,MAAM,EAAEC,SAAS,CAAC;IACtC;EAAC;IAAA;IAAA,OACD,kCAAyBQ,OAAO,EAAEC,eAAe,EAAE;MACjD,IAAItC,GAAG,GAAG,EAAE;MACZ,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2C,eAAe,CAAC1D,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC/CK,GAAG,CAACC,IAAI,CAAC,IAAI,CAACsC,uBAAuB,CAACF,OAAO,EAAEC,eAAe,CAAC3C,CAAC,CAAC,CAACN,GAAG,CAAC,CAAC;MACzE;MACA,OAAOW,GAAG;IACZ;EAAC;IAAA;IAAA,OACD,gCAAuBwC,eAAe,EAAEC,aAAa,EAAE;MACrD,IAAID,eAAe,CAAC5D,MAAM,IAAI,CAAC,IAAI6D,aAAa,CAAC7D,MAAM,IAAI,CAAC,EAAE,OAAO,KAAK;MAC1E,IAAI8D,aAAa,GAAG,IAAI,CAACC,wBAAwB,CAAC,IAAI,EAAEH,eAAe,CAAC;MACxE,IAAII,WAAW,GAAG,IAAI,CAACD,wBAAwB,CAAC,KAAK,EAAEF,aAAa,CAAC;MAErE,IAAII,WAAW,GAAG;QAAEC,EAAE,EAAE,CAAC,CAAC;QAAEC,EAAE,EAAE,CAAC,CAAC;QAAEC,IAAI,EAAE;MAAQ,CAAC;MACnD,KAAK,IAAIrD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+C,aAAa,CAAC9D,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC7C,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+D,WAAW,CAAChE,MAAM,EAAEC,CAAC,EAAE,EAAE;UAC3C,IAAImE,IAAI,GAAG,IAAI,CAACC,uBAAuB,CACrCP,aAAa,CAAC/C,CAAC,CAAC,EAChBiD,WAAW,CAAC/D,CAAC,CAAC,CACf;UACD,IAAImE,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGH,WAAW,CAACG,IAAI,EAAE;YACvCH,WAAW,CAACG,IAAI,GAAGA,IAAI;YACvBH,WAAW,CAACC,EAAE,GAAGnD,CAAC;YAClBkD,WAAW,CAACE,EAAE,GAAGlE,CAAC;UACpB;QACF;MACF;MACA,IAAIgE,WAAW,CAACC,EAAE,IAAI,CAAC,CAAC,EAAE;QACxB,IAAII,SAAS,GAAGV,eAAe,CAACK,WAAW,CAACC,EAAE,CAAC,CAAC3D,MAAM;QACtD,IAAIgE,WAAW,GAAGX,eAAe,CAACK,WAAW,CAACC,EAAE,CAAC,CAAC1D,IAAI;QACtD,IAAI,CAACM,MAAM,CAACwD,SAAS,CAAC,CAACxE,QAAQ,CAACyE,WAAW,CAAC,GAC1CT,aAAa,CAACG,WAAW,CAACC,EAAE,CAAC;QAE/B,IAAIM,OAAO,GAAGX,aAAa,CAACI,WAAW,CAACE,EAAE,CAAC,CAAC5D,MAAM;QAClD,IAAIkE,SAAS,GAAGZ,aAAa,CAACI,WAAW,CAACE,EAAE,CAAC,CAAC3D,IAAI;QAClD,IAAI,CAACM,MAAM,CAAC0D,OAAO,CAAC,CAAC1E,QAAQ,CAAC2E,SAAS,CAAC,GAAGT,WAAW,CAACC,WAAW,CAACE,EAAE,CAAC;QACtE,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;EAAC;IAAA;IAAA,OACD,wCAA+BlD,EAAE,EAAE;MACjC,IAAMkC,MAAM,GAAG,CAAC/E,UAAU,CAACa,OAAO,EAAEb,UAAU,CAACc,MAAM,EAAEd,UAAU,CAACY,OAAO,CAAC;MAC1E,IAAIoC,GAAG,GAAG,EAAE;MACZ,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACE,MAAM,EAAEe,CAAC,EAAE,EAAE;QACxD,IAAIoC,MAAM,CAACG,QAAQ,CAAC,IAAI,CAACxC,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,CAAC,CAACvB,OAAO,CAAC,EAAE;UACxD4B,GAAG,CAACC,IAAI,CAAC,IAAIf,YAAY,CAACW,EAAE,EAAEF,CAAC,EAAE,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,CAAC,CAAC,CAAC;QAChE;MACF;MACA,OAAOK,GAAG;IACZ;EAAC;IAAA;IAAA,OACD,iCAAwB;MACtB,IAAIA,GAAG,GAAG,EAAE;MACZ,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACd,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC3CK,GAAG,CAACC,IAAI,OAARD,GAAG,qBAAS,IAAI,CAACsD,8BAA8B,CAAC3D,CAAC,CAAC,EAAC;MACrD;MACA,OAAOK,GAAG;IACZ;EAAC;IAAA;IAAA,OACD,iCAAwBuD,IAAI,EAAEC,IAAI,EAAE;MAClC,IAAIxD,GAAG,GACL,IAAI,CAACT,SAAS,CAACkE,iBAAiB,CAC9BF,IAAI,CAAClF,MAAM,CAACW,SAAS,EACrBuE,IAAI,CAAClF,MAAM,CAACY,QAAQ,CACrB,GACD,IAAI,CAACM,SAAS,CAACkE,iBAAiB,CAC9BD,IAAI,CAACnF,MAAM,CAACW,SAAS,EACrBwE,IAAI,CAACnF,MAAM,CAACY,QAAQ,CACrB;MACH,IAAIe,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAI,CAAC,CAAC;MACtB,OAAOA,GAAG;IACZ;EAAC;IAAA;IAAA,OACD,4BAAmB;MACjB,IAAI2B,QAAQ,GAAG,IAAI;MACnB,IAAIC,MAAM,GAAG,IAAI;MACjB,IAAIC,SAAS,GAAG,IAAI;MAEpB,KAAK,IAAIlC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACd,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC3C,4BAAiC,IAAI,CAAC+D,gBAAgB,CAAC/D,CAAC,CAAC;UAAA;UAApDgE,OAAO;UAAEC,KAAK;UAAEC,QAAQ;QAC7B,IAAIF,OAAO,EAAEhC,QAAQ,GAAGgC,OAAO;QAC/B,IAAIC,KAAK,EAAEhC,MAAM,GAAGgC,KAAK;QACzB,IAAIC,QAAQ,EAAEhC,SAAS,GAAGgC,QAAQ;MACpC;MAUA,IAAIhC,SAAS,IAAI,IAAI,EAAE;QACrB,IAAIiC,SAAS,GAAG,IAAI,CAACC,qBAAqB,EAAE;QAC5C,IAAIC,eAAe,GAAG,IAAI;QAC1B,IAAIC,WAAW,GAAG,OAAO;QACzB,IAAIC,WAAW,GAAG,CAAC,CAAC;QACpB,KAAK,IAAIvE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmE,SAAS,CAAClF,MAAM,EAAEe,CAAC,EAAE,EAAE;UACzC,IAAImB,QAAQ,GAAG,IAAI,CAACyB,uBAAuB,CAAC,IAAI,EAAEuB,SAAS,CAACnE,CAAC,CAAC,CAACN,GAAG,CAAC;UACnE,IAAI2D,IAAI,GAAG,IAAI,CAACC,uBAAuB,CACrCnC,QAAQ,EACR,IAAI,CAACpB,MAAM,CAACmC,SAAS,CAAC1C,MAAM,CAAC,CAACT,QAAQ,CAACmD,SAAS,CAACzC,IAAI,CAAC,CACvD;UACD,IAAI4D,IAAI,GAAGiB,WAAW,EAAE;YACtBA,WAAW,GAAGjB,IAAI;YAClBgB,eAAe,GAAGlD,QAAQ;YAC1BoD,WAAW,GAAGvE,CAAC;UACjB;QACF;QACA,IAAIqE,eAAe,IAAI,IAAI,EAAE;UAC3B,IAAI,CAACtE,MAAM,CAACoE,SAAS,CAACI,WAAW,CAAC,CAAC/E,MAAM,CAAC,CAACT,QAAQ,CACjDoF,SAAS,CAACI,WAAW,CAAC,CAAC9E,IAAI,CAC5B,GAAG4E,eAAe;UACnB,OAAO,IAAI;QACb;QACA,OAAO,KAAK;MACd;MACA,IAAIrC,QAAQ,IAAI,IAAI,IAAIC,MAAM,IAAI,IAAI,EAAE;QACtC,IAAIY,eAAe,GAAG,IAAI,CAACc,8BAA8B,CACvD3B,QAAQ,CAACxC,MAAM,CAChB;QACD,IAAIsD,aAAa,GAAG,IAAI,CAACa,8BAA8B,CAAC1B,MAAM,CAACzC,MAAM,CAAC;QACtE,OAAO,IAAI,CAACgF,sBAAsB,CAAC3B,eAAe,EAAEC,aAAa,CAAC;MACpE;MACA,IAAId,QAAQ,IAAI,IAAI,EAAE;QACpB,IAAIa,gBAAe,GAAG,IAAI,CAACc,8BAA8B,CACvD3B,QAAQ,CAACxC,MAAM,CAChB;QAED,IAAIsD,cAAa,GAAG,EAAE;QACtB,KAAK,IAAI5C,EAAE,GAAG8B,QAAQ,CAACxC,MAAM,GAAG,CAAC,EAAEU,EAAE,GAAG,IAAI,CAACH,MAAM,CAACd,MAAM,EAAEiB,EAAE,EAAE,EAAE;UAChE4C,cAAa,CAACxC,IAAI,OAAlBwC,cAAa,qBAAS,IAAI,CAACa,8BAA8B,CAACzD,EAAE,CAAC,EAAC;QAChE;QACA,IAAI4C,cAAa,CAAC7D,MAAM,IAAI,CAAC,EAAE;UAC7B,IAAI4D,gBAAe,CAAC5D,MAAM,GAAG,CAAC,EAAE;YAC9B6D,cAAa,CAACxC,IAAI,CAACuC,gBAAe,CAAC4B,GAAG,EAAE,CAAC;UAC3C;QACF;QACA,OAAO,IAAI,CAACD,sBAAsB,CAAC3B,gBAAe,EAAEC,cAAa,CAAC;MACpE;MACA,IAAIb,MAAM,IAAI,IAAI,EAAE;QAClB,IAAIa,eAAa,GAAG,IAAI,CAACa,8BAA8B,CAAC1B,MAAM,CAACzC,MAAM,CAAC;QACtE,IAAIqD,iBAAe,GAAG,EAAE;QACxB,KAAK,IAAI3C,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG+B,MAAM,CAACzC,MAAM,EAAEU,EAAE,EAAE,EAAE;UACzC2C,iBAAe,CAACvC,IAAI,OAApBuC,iBAAe,qBAAS,IAAI,CAACc,8BAA8B,CAACzD,EAAE,CAAC,EAAC;QAClE;QACA,OAAO,IAAI,CAACsE,sBAAsB,CAAC3B,iBAAe,EAAEC,eAAa,CAAC;MACpE;MACA,IAAI4B,YAAY,GAAG,IAAI,CAACN,qBAAqB,EAAE;MAC/C,IAAIM,YAAY,CAACzF,MAAM,IAAI,CAAC,EAAE,OAAO,KAAK;MAC1C,IAAI8D,aAAa,GAAG,IAAI,CAACC,wBAAwB,CAAC,IAAI,EAAE0B,YAAY,CAAC;MACrE,IAAIA,YAAY,CAACzF,MAAM,IAAI,CAAC,EAAE;QAC5B,IAAIsE,SAAS,GAAGmB,YAAY,CAAC,CAAC,CAAC,CAAClF,MAAM;QACtC,IAAIgE,WAAW,GAAGkB,YAAY,CAAC,CAAC,CAAC,CAACjF,IAAI;QACtC,IAAI,CAACM,MAAM,CAACwD,SAAS,CAAC,CAACxE,QAAQ,CAACyE,WAAW,CAAC,GAAGT,aAAa,CAAC,CAAC,CAAC;QAC/D,IAAIE,WAAW,GAAG,IAAI,CAACD,wBAAwB,CAAC,KAAK,EAAE0B,YAAY,CAAC;QACpE,IAAI,CAAC3E,MAAM,CAACwD,SAAS,CAAC,CAACxE,QAAQ,CAACuB,IAAI,CAAC2C,WAAW,CAAC,CAAC,CAAC,CAAC;QACpD,OAAO,IAAI;MACb;MAEA,SAAS0B,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAE;QACrB,IAAID,CAAC,CAACvF,SAAS,GAAGwF,CAAC,CAACxF,SAAS,EAAE,OAAO,CAAC,CAAC;QACxC,IAAIuF,CAAC,CAACvF,SAAS,GAAGwF,CAAC,CAACxF,SAAS,EAAE,OAAO,CAAC;QACvC,IAAIuF,CAAC,CAACtF,QAAQ,GAAGuF,CAAC,CAACvF,QAAQ,EAAE,OAAO,CAAC,CAAC;QACtC,IAAIsF,CAAC,CAACtF,QAAQ,GAAGuF,CAAC,CAACvF,QAAQ,EAAE,OAAO,CAAC;QACrC,OAAO,CAAC;MACV;MACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+C,aAAa,CAAC9D,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC7C+C,aAAa,CAAC/C,CAAC,CAAC,CAAC8E,WAAW,GAAGJ,YAAY,CAAC1E,CAAC,CAAC;MAChD;MACA+C,aAAa,CAACgC,IAAI,CAACJ,OAAO,CAAC;MAC3B,IAAIK,QAAQ,GAAG,CAAC,CAAC;MACjB,IAAIC,OAAO,GAAG,CAAC;MACf,KAAK,IAAIjF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+C,aAAa,CAAC9D,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC7C,IAAIqD,KAAI,GAAG,IAAI,CAACC,uBAAuB,CACrCP,aAAa,CAAC/C,CAAC,CAAC,EAChB+C,aAAa,CAAC/C,CAAC,GAAG,CAAC,CAAC,CACrB;QACD,IAAIqD,KAAI,GAAG4B,OAAO,EAAE;UAClBA,OAAO,GAAG5B,KAAI;UACd2B,QAAQ,GAAGhF,CAAC,GAAG,CAAC;QAClB;MACF;MACA,IAAIgF,QAAQ,IAAI,CAAC,CAAC,EAAE,OAAO,KAAK;MAChC,IAAIE,KAAK,GAAGnC,aAAa,CAACiC,QAAQ,GAAG,CAAC,CAAC,CAACF,WAAW,CAACtF,MAAM;MAC1D,IAAI2F,KAAK,GAAGpC,aAAa,CAACiC,QAAQ,GAAG,CAAC,CAAC,CAACF,WAAW,CAACrF,IAAI;MACxD,IAAI2F,IAAI,GAAGrC,aAAa,CAACiC,QAAQ,CAAC,CAACF,WAAW,CAACtF,MAAM;MACrD,IAAI6F,IAAI,GAAGtC,aAAa,CAACiC,QAAQ,CAAC,CAACF,WAAW,CAACrF,IAAI;MACnD,IAAI,CAACM,MAAM,CAACmF,KAAK,CAAC,CAACnG,QAAQ,CAACoG,KAAK,CAAC,GAAG,IAAI,CAACvC,uBAAuB,CAC/D,IAAI,EACJ,IAAI,CAAC7C,MAAM,CAACmF,KAAK,CAAC,CAACnG,QAAQ,CAACoG,KAAK,CAAC,CACnC;MACD,IAAI,CAACpF,MAAM,CAACqF,IAAI,CAAC,CAACrG,QAAQ,CAACsG,IAAI,CAAC,GAAG,IAAI,CAACzC,uBAAuB,CAC7D,KAAK,EACL,IAAI,CAAC7C,MAAM,CAACqF,IAAI,CAAC,CAACrG,QAAQ,CAACsG,IAAI,CAAC,CACjC;MACD,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OACD,sBAAanF,EAAE,EAAE;MACf,IAAIoF,OAAO,GAAG,KAAK;MAEnB,KAAK,IAAItF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACE,MAAM,EAAEe,CAAC,EAAE,EAAE;QACxD,IAAI,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACO,QAAQ,EAAE;UAC9D,IAAIoC,CAAC,GAAG,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;YAC3C,IACE,IAAI,CAACc,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACW,MAAM,IAC5D,IAAI,CAAC+B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACe,MAAM,EAC5D;cACA,IAAI,CAAC2B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,GAAGpB,UAAU,CAACe,MAAM;cAC3D,IAAI,CAAC2B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACwG,MAAM,CAACvF,CAAC,EAAE,CAAC,CAAC;cACrCsF,OAAO,GAAG,IAAI;cACdtF,CAAC,EAAE;YACL;UACF;QACF,CAAC,MAAM,IAAI,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACI,SAAS,EAAE;UACtE,IAAIuC,CAAC,GAAG,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;YAC3C,IACE,IAAI,CAACc,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACW,MAAM,IAC5D,IAAI,CAAC+B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACY,OAAO,EAC7D;cACA,IAAI,CAAC8B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,GAAGpB,UAAU,CAACY,OAAO;cAC5D,IAAI,CAAC8B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACwG,MAAM,CAACvF,CAAC,EAAE,CAAC,CAAC;cACrCsF,OAAO,GAAG,IAAI;cACdtF,CAAC,EAAE;YACL;UACF;QACF,CAAC,MAAM,IAAI,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACM,QAAQ,EAAE;UACrE,IAAIqC,CAAC,GAAG,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;YAC3C,IACE,IAAI,CAACc,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACW,MAAM,IAC5D,IAAI,CAAC+B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACc,MAAM,EAC5D;cACA,IAAI,CAAC4B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,GAAGpB,UAAU,CAACc,MAAM;cAC3D,IAAI,CAAC4B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACwG,MAAM,CAACvF,CAAC,EAAE,CAAC,CAAC;cACrCsF,OAAO,GAAG,IAAI;cACdtF,CAAC,EAAE;YACL;UACF;QACF,CAAC,MAAM,IAAI,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACK,SAAS,EAAE;UACtE,IAAIsC,CAAC,GAAG,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;YAC3C,IACE,IAAI,CAACc,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACW,MAAM,IAC5D,IAAI,CAAC+B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACa,OAAO,EAC7D;cACA,IAAI,CAAC6B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,GAAGpB,UAAU,CAACa,OAAO;cAC5D,IAAI,CAAC6B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACwG,MAAM,CAACvF,CAAC,EAAE,CAAC,CAAC;cACrCsF,OAAO,GAAG,IAAI;cACdtF,CAAC,EAAE;YACL;UACF;QACF;MACF;MAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAEe,CAAC,EAAE,EAAE;QAC5D,IACE,IAAI,CAACD,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACY,OAAO,IACzD,IAAI,CAAC8B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,IAAIpB,UAAU,CAACW,MAAM,EAC5D;UAEA,IAAI,CAAC+B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACvB,OAAO,GAAGpB,UAAU,CAACgB,aAAa;UAClE,IAAI,CAAC0B,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACtB,MAAM,GAAG,IAAIU,QAAQ,CACnD,IAAI,CAACW,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,CAAC,CAACtB,MAAM,EAClC,IAAI,CAACqB,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACtB,MAAM,CACvC;UAED,IAAI,CAACqB,MAAM,CAACG,EAAE,CAAC,CAACnB,QAAQ,CAACwG,MAAM,CAACvF,CAAC,EAAE,CAAC,CAAC;UACrCsF,OAAO,GAAG,IAAI;QAChB;MACF;MACA,OAAOA,OAAO;IAChB;EAAC;IAAA;IAAA,OACD,wBAAe;MACb,IAAIA,OAAO,GAAG,KAAK;MAEnB,KAAK,IAAItF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACd,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC3C,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACa,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;UACvD,IAAI,IAAI,CAACa,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,IAAIpB,UAAU,CAACW,MAAM,EAAE;YAE3D,KAAK,IAAIwH,OAAO,GAAGxF,CAAC,EAAEwF,OAAO,IAAI,CAAC,EAAEA,OAAO,EAAE,EAAE;cAC7C,IAAIL,KAAK,GACPK,OAAO,IAAIxF,CAAC,GAAGd,CAAC,GAAG,CAAC,GAAG,IAAI,CAACa,MAAM,CAACyF,OAAO,CAAC,CAACzG,QAAQ,CAACE,MAAM,GAAG,CAAC;cACjE,KAAK,IAAIwG,OAAO,GAAGN,KAAK,EAAEM,OAAO,IAAI,CAAC,EAAEA,OAAO,EAAE,EAAE;gBACjD,IAAIC,UAAU,GAAG,IAAI,CAAC3F,MAAM,CAACyF,OAAO,CAAC,CAACzG,QAAQ,CAAC0G,OAAO,CAAC,CAAChH,OAAO;gBAC/D,IAAIiH,UAAU,IAAIrI,UAAU,CAACY,OAAO,EAAE;kBAEpC,IAAI,CAAC8B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,GAAGpB,UAAU,CAACgB,aAAa;kBAC7D,IAAI,CAAC0B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACR,MAAM,GAAG,IAAIU,QAAQ,CAC9C,IAAI,CAACW,MAAM,CAACyF,OAAO,CAAC,CAACzG,QAAQ,CAAC0G,OAAO,CAAC,CAAC/G,MAAM,EAC7C,IAAI,CAACqB,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACR,MAAM,CAClC;kBACD4G,OAAO,GAAG,IAAI;kBAEdE,OAAO,GAAG,CAAC,CAAC;kBACZ;gBACF;gBACA,IAAIE,UAAU,IAAIrI,UAAU,CAACgB,aAAa,EAAE;kBAE1C,IAAI,CAAC0B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,GAAGpB,UAAU,CAACgB,aAAa;kBAC7D,IAAI,CAAC0B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACR,MAAM,GAAG,IAAIU,QAAQ,CAC9C,IAAI,CAACW,MAAM,CAACyF,OAAO,CAAC,CAACzG,QAAQ,CAAC0G,OAAO,CAAC,CAAC/G,MAAM,CAACW,SAAS,EACvD,IAAI,CAACU,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACR,MAAM,CAClC;kBACD4G,OAAO,GAAG,IAAI;kBAEdE,OAAO,GAAG,CAAC,CAAC;kBACZ;gBACF;gBACA,IACEE,UAAU,IAAIrI,UAAU,CAACM,QAAQ,IACjC+H,UAAU,IAAIrI,UAAU,CAACc,MAAM,EAC/B;kBAEA,IAAI,CAAC4B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,GAAGpB,UAAU,CAACc,MAAM;kBACtDmH,OAAO,GAAG,IAAI;kBAEdE,OAAO,GAAG,CAAC,CAAC;kBACZ;gBACF;gBACA,IACEE,UAAU,IAAIrI,UAAU,CAACK,SAAS,IAClCgI,UAAU,IAAIrI,UAAU,CAACa,OAAO,EAChC;kBAEA,IAAI,CAAC6B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,GAAGpB,UAAU,CAACa,OAAO;kBACvDoH,OAAO,GAAG,IAAI;kBAEdE,OAAO,GAAG,CAAC,CAAC;kBACZ;gBACF;gBACA,IAAIE,UAAU,IAAIrI,UAAU,CAACI,SAAS,EAAE;kBAEtC,IAAI,CAACsC,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,GAAGpB,UAAU,CAACY,OAAO;kBACvDqH,OAAO,GAAG,IAAI;kBAEdE,OAAO,GAAG,CAAC,CAAC;kBACZ;gBACF;cACF;YACF;UACF;QACF;MACF;MAEA,KAAK,IAAIxF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACd,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC3C,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACa,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;UACvD,IAAI,IAAI,CAACa,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,IAAIpB,UAAU,CAACU,OAAO,EAAE;YAC5D,KAAK,IAAI4H,MAAM,GAAG3F,CAAC,EAAE2F,MAAM,GAAG,IAAI,CAAC5F,MAAM,CAACd,MAAM,EAAE0G,MAAM,EAAE,EAAE;cAC1D,IAAIR,MAAK,GAAGQ,MAAM,IAAI3F,CAAC,GAAGd,CAAC,GAAG,CAAC,GAAG,CAAC;gBACjCmG,IAAI,GAAG,IAAI,CAACtF,MAAM,CAAC4F,MAAM,CAAC,CAAC5G,QAAQ,CAACE,MAAM;cAC5C,KAAK,IAAI2G,MAAM,GAAGT,MAAK,EAAES,MAAM,GAAGP,IAAI,EAAEO,MAAM,EAAE,EAAE;gBAChD,IAAIC,UAAU,GAAG,IAAI,CAAC9F,MAAM,CAAC4F,MAAM,CAAC,CAAC5G,QAAQ,CAAC6G,MAAM,CAAC,CAACnH,OAAO;gBAC7D,IAAIoH,UAAU,IAAIxI,UAAU,CAACY,OAAO,EAAE;kBAEpC,IAAI,CAAC8B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,GAAGpB,UAAU,CAACgB,aAAa;kBAC7D,IAAI,CAAC0B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACR,MAAM,GAAG,IAAIU,QAAQ,CAC9C,IAAI,CAACW,MAAM,CAAC4F,MAAM,CAAC,CAAC5G,QAAQ,CAAC6G,MAAM,CAAC,CAAClH,MAAM,EAC3C,IAAI,CAACkB,SAAS,CAACwB,eAAe,CAC5B,IAAI,CAACrB,MAAM,CAAC4F,MAAM,CAAC,CAAC5G,QAAQ,CAAC6G,MAAM,CAAC,CAAClH,MAAM,CAC5C,CACF;kBAGDiH,MAAM,GAAG,IAAI,CAAC5F,MAAM,CAACd,MAAM,GAAG,CAAC;kBAC/B;gBACF;cACF;YACF;YACA,IAAI,IAAI,CAACc,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,IAAIpB,UAAU,CAACgB,aAAa,EAChE;YAEF,KAAK,IAAImH,OAAO,GAAGxF,CAAC,EAAEwF,OAAO,IAAI,CAAC,EAAEA,OAAO,EAAE,EAAE;cAC7C,IAAIL,OAAK,GACPK,OAAO,IAAIxF,CAAC,GAAGd,CAAC,GAAG,CAAC,GAAG,IAAI,CAACa,MAAM,CAACyF,OAAO,CAAC,CAACzG,QAAQ,CAACE,MAAM,GAAG,CAAC;cACjE,KAAK,IAAIwG,OAAO,GAAGN,OAAK,EAAEM,OAAO,IAAI,CAAC,EAAEA,OAAO,EAAE,EAAE;gBACjD,IAAIC,WAAU,GAAG,IAAI,CAAC3F,MAAM,CAACyF,OAAO,CAAC,CAACzG,QAAQ,CAAC0G,OAAO,CAAC,CAAChH,OAAO;gBAC/D,IAAIiH,WAAU,IAAIrI,UAAU,CAACgB,aAAa,EAAE;kBAE1C,IAAI,CAAC0B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,GAAGpB,UAAU,CAACgB,aAAa;kBAC7D,IAAI,CAAC0B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACR,MAAM,GAAG,IAAIU,QAAQ,CAC9C,IAAI,CAACW,MAAM,CAACyF,OAAO,CAAC,CAACzG,QAAQ,CAAC0G,OAAO,CAAC,CAAC/G,MAAM,CAACW,SAAS,EACvD,IAAI,CAACO,SAAS,CAACwB,eAAe,CAC5B,IAAI,CAACrB,MAAM,CAACyF,OAAO,CAAC,CAACzG,QAAQ,CAAC0G,OAAO,CAAC,CAAC/G,MAAM,CAACW,SAAS,CACxD,CACF;kBAEDmG,OAAO,GAAG,CAAC,CAAC;kBACZ;gBACF;gBACA,IAAIE,WAAU,IAAIrI,UAAU,CAACY,OAAO,EAAE;kBACpC,IAAI,CAAC8B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,GAAGpB,UAAU,CAACgB,aAAa;kBAC7D,IAAI,CAAC0B,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACR,MAAM,GAAG,IAAIU,QAAQ,CAC9C,IAAI,CAACW,MAAM,CAACyF,OAAO,CAAC,CAACzG,QAAQ,CAAC0G,OAAO,CAAC,CAAC/G,MAAM,EAC7C,IAAI,CAACkB,SAAS,CAACwB,eAAe,CAC5B,IAAI,CAACrB,MAAM,CAACyF,OAAO,CAAC,CAACzG,QAAQ,CAAC0G,OAAO,CAAC,CAAC/G,MAAM,CAC9C,CACF;kBAGD8G,OAAO,GAAG,CAAC,CAAC;kBACZ;gBACF;cACF;YACF;UACF;QACF;MACF;MACA,OAAOF,OAAO;IAChB;EAAC;IAAA;IAAA,OACD,8BAAqB;MACnB,IAAIQ,MAAM,GAAG,EAAE;MACf,KAAK,IAAI9F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACd,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC3C,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACa,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;UACvD,IAAI,IAAI,CAACa,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAACT,OAAO,IAAIpB,UAAU,CAACgB,aAAa,EAAE;YAClEyH,MAAM,CAACxF,IAAI,CAAC,IAAI,CAACP,MAAM,CAACC,CAAC,CAAC,CAACjB,QAAQ,CAACG,CAAC,CAAC,CAAC;UACzC;QACF;MACF;MAEA,IAAI4G,MAAM,CAAC7G,MAAM,GAAG,CAAC,EAAE,OAAO,IAAI;MAClC,IAAIW,SAAS,GAAG,IAAI,CAACA,SAAS;MAC9B,IAAIS,GAAG,GAAG;QACR0F,UAAU,EAAE,IAAI;QAChBC,SAAS,EAAEF,MAAM,CAAC,CAAC,CAAC,CAACpH,MAAM,CAACW,SAAS;QACrC4G,QAAQ,EAAEH,MAAM,CAAC,CAAC,CAAC,CAACpH,MAAM,CAACY,QAAQ;QACnC4G,QAAQ,EAAEJ,MAAM,CAACA,MAAM,CAAC7G,MAAM,GAAG,CAAC,CAAC,CAACP,MAAM,CAACW,SAAS;QACpD8G,OAAO,EAAEL,MAAM,CAACA,MAAM,CAAC7G,MAAM,GAAG,CAAC,CAAC,CAACP,MAAM,CAACY,QAAQ;QAClD8G,QAAQ,EAAE,oBAAY;UACpB,IAAMC,OAAO,GAAGzG,SAAS;UACzB,IAAIZ,MAAM,GAAG,WAAW;UACxBA,MAAM,IACJ,QAAQ,GACRqH,OAAO,CAACC,cAAc,CAAC,IAAI,CAACN,SAAS,CAAC,GACtC,QAAQ,GACR,IAAI,CAACC,QAAQ,GACb,IAAI;UACNjH,MAAM,IACJ,QAAQ,GACRqH,OAAO,CAACC,cAAc,CAAC,IAAI,CAACJ,QAAQ,CAAC,GACrC,QAAQ,GACR,IAAI,CAACC,OAAO,GACZ,IAAI;UACN,OAAOnH,MAAM;QACf;MACF,CAAC;MAED,OAAOqB,GAAG;IACZ;EAAC;IAAA;IAAA,OACD,4BAAmBkG,IAAI,EAAE;MAEvBA,IAAI,GAAGrJ,aAAa,CAACsJ,oBAAoB,CACvCtJ,aAAa,CAACuJ,eAAe,CAACF,IAAI,CAAC,CAACG,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAC/D;MAEDH,IAAI,GAAG,IAAI,CAAC3G,SAAS,CAAC+G,2BAA2B,CAACJ,IAAI,CAAC;MACvD,IAAIK,MAAM,GAAGL,IAAI;MAEjB,IAAIM,MAAM,GAAGD,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC;MAE9B,IAAIC,gBAAgB,GAAG,EAAE;MACzB,KAAK,IAAIC,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGH,MAAM,CAAC5H,MAAM,EAAE+H,IAAI,EAAE,EAAE;QAC/C,IAAIC,QAAQ,GAAG,IAAI,CAACC,aAAa,CAACL,MAAM,CAACG,IAAI,CAAC,CAAC;QAC/C,IACEC,QAAQ,CAACxI,OAAO,IAAIpB,UAAU,CAACiB,MAAM,IACrC2I,QAAQ,CAACxI,OAAO,IAAIpB,UAAU,CAACG,MAAM,EAErC;QACFuJ,gBAAgB,CAACzG,IAAI,CAAC2G,QAAQ,CAAC;MACjC;MACA,IAAI,CAAClH,MAAM,GAAG,EAAE;MAChB,IAAIoH,MAAM,GAAGJ,gBAAgB,CAACK,KAAK,CAAC,CAAC,CAAC;MACtC,IAAIJ,IAAI,GAAG,CAAC;MACZ,IAAIxH,MAAM,GAAG,CAAC;MACd,OAAO2H,MAAM,CAAClI,MAAM,GAAG,CAAC,IAAI+H,IAAI,GAAGG,MAAM,CAAClI,MAAM,GAAG,CAAC,EAAE;QACpD,IACEkI,MAAM,CAACH,IAAI,CAAC,CAACvI,OAAO,IAAIpB,UAAU,CAACS,MAAM,IACzCqJ,MAAM,CAACH,IAAI,CAAC,CAACvI,OAAO,IAAIpB,UAAU,CAACQ,QAAQ,IAC3CsJ,MAAM,CAACH,IAAI,CAAC,CAACvI,OAAO,IAAIpB,UAAU,CAACU,OAAO,EAC1C;UACA,IAAI,CAACgC,MAAM,CAACO,IAAI,CAAC,IAAI3B,KAAK,CAACa,MAAM,EAAE2H,MAAM,CAACC,KAAK,CAAC,CAAC,EAAEJ,IAAI,CAAC,CAAC,CAAC;UAC1DxH,MAAM,EAAE;UACR2H,MAAM,GAAGA,MAAM,CAACC,KAAK,CAACJ,IAAI,CAAC;UAC3BA,IAAI,GAAG,CAAC;UACR;QACF;QACAA,IAAI,EAAE;MACR;MACA,IAAIG,MAAM,CAAClI,MAAM,GAAG,CAAC,EAAE;QACrB,IAAI,CAACc,MAAM,CAACO,IAAI,CAAC,IAAI3B,KAAK,CAACa,MAAM,EAAE2H,MAAM,CAAC,CAAC;QAC3C3H,MAAM,EAAE;MACV;MAEA,IAAI6H,MAAM,GAAG,IAAI;MACjB,OAAOA,MAAM,EAAE;QACbA,MAAM,GAAG,KAAK;QACd,IAAI/B,OAAO,GAAG,IAAI;QAClB,OAAOA,OAAO,EAAE;UACdA,OAAO,GAAG,KAAK;UACf,KAAK,IAAItF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,CAACd,MAAM,EAAEe,CAAC,EAAE,EAAE;YAC3CsF,OAAO,GAAG,IAAI,CAACgC,YAAY,CAACtH,CAAC,CAAC,IAAIsF,OAAO;UAC3C;UACA,IAAIA,OAAO,EAAE;YACX,IAAIiC,SAAQ,GAAG,IAAI,CAACC,kBAAkB,EAAE;YACxC,IAAID,SAAQ,IAAI,IAAI,EAAE,OAAOA,SAAQ;UACvC;UACAjC,OAAO,GAAG,IAAI,CAACmC,YAAY,EAAE,IAAInC,OAAO;UACxC,IAAIA,OAAO,EAAE;YACX,IAAIiC,UAAQ,GAAG,IAAI,CAACC,kBAAkB,EAAE;YACxC,IAAID,UAAQ,IAAI,IAAI,EAAE,OAAOA,UAAQ;UACvC;UACAF,MAAM,GAAGA,MAAM,IAAI/B,OAAO;QAC5B;QACAA,OAAO,GAAG,IAAI;QACd,OAAOA,OAAO,EAAE;UACdA,OAAO,GAAG,IAAI,CAACoC,gBAAgB,EAAE;UACjCL,MAAM,GAAGA,MAAM,IAAI/B,OAAO;UAC1B,IAAIA,OAAO,EAAE;YACX,IAAIiC,UAAQ,GAAG,IAAI,CAACC,kBAAkB,EAAE;YACxC,IAAID,UAAQ,IAAI,IAAI,EAAE,OAAOA,UAAQ;UACvC;QACF;MACF;MAEA,IAAIA,QAAQ,GAAG,IAAI,CAACC,kBAAkB,EAAE;MACxC,IAAID,QAAQ,IAAI,IAAI,EAAE,OAAOA,QAAQ;MAGrC,OAAO;QACLxB,UAAU,EAAE,KAAK;QACjB4B,GAAG,EAAE,2BAA2B;QAChCC,IAAI,EAAE,IAAI,CAACC,iBAAiB,EAAE;QAC9BzB,QAAQ,EAAE,oBAAY;UACpB,IAAIpH,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC4I,IAAI;UACrC,OAAO5I,MAAM;QACf;MACF,CAAC;IACH;EAAC;EAAA;AAAA;AAEH,eAAeW,gBAAgB"},"metadata":{},"sourceType":"module"}