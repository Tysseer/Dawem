{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nimport Animated, { add, clockRunning, cond, debug, divide, eq, floor, not, set, useCode } from 'react-native-reanimated';\nimport { snapPoint, timing, useClock, usePanGestureHandler, useValue } from 'react-native-redash';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nexport var assets = [require(\"../assets/temp/1.jpg\"), require(\"../assets/temp/3.jpg\"), require(\"../assets/temp/5.jpg\"), require(\"../assets/temp/4.jpg\"), require(\"../assets/temp/2.jpg\")];\nvar snapPoints = assets.map(function (_, i) {\n  return i * -width;\n});\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'red'\n  }),\n  pictures: {\n    width: width * assets.length,\n    height: height,\n    flexDirection: 'row'\n  },\n  picture: {\n    width: width,\n    height: height,\n    overflow: 'hidden'\n  },\n  image: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    width: undefined,\n    height: undefined\n  })\n});\nvar Swiper = function Swiper() {\n  var clock = useClock();\n  var index = useValue(0);\n  var offsetX = useValue(0);\n  var translateX = useValue(0);\n  var _usePanGestureHandler = usePanGestureHandler(),\n    gestureHandler = _usePanGestureHandler.gestureHandler,\n    state = _usePanGestureHandler.state,\n    velocity = _usePanGestureHandler.velocity,\n    translation = _usePanGestureHandler.translation;\n  var to = snapPoint(translateX, velocity.x, snapPoints);\n  useCode(function () {\n    return [cond(eq(state, State.ACTIVE), [set(translateX, add(offsetX, translation.x))]), cond(eq(state, State.END), [set(translateX, timing({\n      clock: clock,\n      from: translateX,\n      to: to\n    })), set(offsetX, translateX), cond(not(clockRunning(clock)), [set(index, floor(divide(translateX, -width))), debug('index', index)])])];\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(PanGestureHandler, _objectSpread(_objectSpread({}, gestureHandler), {}, {\n      children: _jsx(Animated.View, {\n        style: StyleSheet.absoluteFill,\n        children: _jsx(Animated.View, {\n          style: [styles.pictures, {\n            transform: [{\n              translateX: translateX\n            }]\n          }],\n          children: assets.map(function (source) {\n            return _jsx(View, {\n              style: styles.picture,\n              children: _jsx(Image, {\n                style: styles.image,\n                source: source\n              })\n            }, source);\n          })\n        })\n      })\n    }))\n  });\n};\nexport default Swiper;","map":{"version":3,"names":["React","PanGestureHandler","State","Animated","add","clockRunning","cond","debug","divide","eq","floor","not","set","useCode","snapPoint","timing","useClock","usePanGestureHandler","useValue","Dimensions","get","width","height","assets","require","snapPoints","map","_","i","styles","StyleSheet","create","container","absoluteFillObject","backgroundColor","pictures","length","flexDirection","picture","overflow","image","undefined","Swiper","clock","index","offsetX","translateX","gestureHandler","state","velocity","translation","to","x","ACTIVE","END","from","absoluteFill","transform","source"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/components/Swiper.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Dimensions, Image, StyleSheet, View } from 'react-native';\r\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\r\nimport Animated, {\r\n  add,\r\n  clockRunning,\r\n  cond,\r\n  debug,\r\n  divide,\r\n  eq,\r\n  floor,\r\n  not,\r\n  set,\r\n  useCode,\r\n} from 'react-native-reanimated';\r\nimport {\r\n  snapPoint,\r\n  timing,\r\n  useClock,\r\n  usePanGestureHandler,\r\n  useValue,\r\n} from 'react-native-redash';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nexport const assets = [\r\n  require('assets/temp/1.jpg'),\r\n  require('assets/temp/3.jpg'),\r\n  require('assets/temp/5.jpg'),\r\n  require('assets/temp/4.jpg'),\r\n  require('assets/temp/2.jpg'),\r\n];\r\n\r\nconst snapPoints = assets.map((_, i) => i * -width);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: 'red',\r\n  },\r\n  pictures: {\r\n    width: width * assets.length,\r\n    height,\r\n    flexDirection: 'row',\r\n  },\r\n  picture: {\r\n    width,\r\n    height,\r\n    overflow: 'hidden',\r\n  },\r\n  image: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    width: undefined,\r\n    height: undefined,\r\n  },\r\n});\r\n\r\nconst Swiper = () => {\r\n  const clock = useClock();\r\n  const index = useValue(0);\r\n  const offsetX = useValue(0);\r\n  const translateX = useValue(0);\r\n\r\n  const { gestureHandler, state, velocity, translation } =\r\n    usePanGestureHandler();\r\n\r\n  const to = snapPoint(translateX, velocity.x, snapPoints);\r\n\r\n  useCode(\r\n    () => [\r\n      cond(eq(state, State.ACTIVE), [\r\n        set(translateX, add(offsetX, translation.x)),\r\n      ]),\r\n      cond(eq(state, State.END), [\r\n        set(translateX, timing({ clock, from: translateX, to })),\r\n        set(offsetX, translateX),\r\n        cond(not(clockRunning(clock)), [\r\n          set(index, floor(divide(translateX, -width))),\r\n          debug('index', index),\r\n        ]),\r\n      ]),\r\n    ],\r\n    []\r\n  );\r\n  return (\r\n    <View style={styles.container}>\r\n      <PanGestureHandler {...gestureHandler}>\r\n        <Animated.View style={StyleSheet.absoluteFill}>\r\n          <Animated.View\r\n            style={[styles.pictures, { transform: [{ translateX }] }]}\r\n          >\r\n            {assets.map((source) => (\r\n              <View key={source} style={styles.picture}>\r\n                <Image style={styles.image} {...{ source }} />\r\n              </View>\r\n            ))}\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </PanGestureHandler>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Swiper;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}