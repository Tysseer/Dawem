{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tysseer Harak\\\\Desktop\\\\Data\\\\Code\\\\React Native\\\\Dawem\\\\app\\\\js\\\\screens\\\\ScreenSettings.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxActionSetLanguage, reduxActionSetWelcomeFlag } from \"../redux/reduxActions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\n\nvar ScreenSettings = function (_Component) {\n  _inherits(ScreenSettings, _Component);\n\n  var _super = _createSuper(ScreenSettings);\n\n  function ScreenSettings(props) {\n    _classCallCheck(this, ScreenSettings);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(ScreenSettings, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ImageBackground, {\n        style: styles.background,\n        source: require(\"../../assets/backgroundPNG/crescent_bk.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.controlsRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: this.getlangStyle(\"ar\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.arLangPressed.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/images/lang_ar.png\"),\n        style: styles.imgIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }))), React.createElement(View, {\n        style: this.getlangStyle(\"en\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.enLangPressed.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/images/lang_en.png\"),\n        style: styles.imgIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      })))), React.createElement(View, {\n        style: styles.controlsRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.iconView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.arLangPressed.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: this.getFontSizeIcon(),\n        style: styles.imgIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      })))), React.createElement(View, {\n        style: styles.okButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.okButtonPressed.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icons/ok_icon.png\"),\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }, {\n    key: \"getFontSizeIcon\",\n    value: function getFontSizeIcon() {\n      if (this.props.strLang == \"ar\") {\n        return require(\"../../assets/icons/fontSize_ar.png\");\n      }\n\n      if (this.props.strLang == \"en\") {\n        return require(\"../../assets/icons/fontSize_en.png\");\n      }\n\n      return require(\"../../assets/icons/fontSize_ar.png\");\n    }\n  }, {\n    key: \"getlangStyle\",\n    value: function getlangStyle(strLang) {\n      return [styles.iconView, this.props.strLang == strLang ? {\n        borderColor: \"#dddddd\"\n      } : {\n        borderColor: \"#dddddd00\"\n      }];\n    }\n  }, {\n    key: \"arLangPressed\",\n    value: function arLangPressed() {\n      this.props.reduxActionSetLanguage(\"ar\");\n    }\n  }, {\n    key: \"enLangPressed\",\n    value: function enLangPressed() {\n      this.props.reduxActionSetLanguage(\"en\");\n    }\n  }, {\n    key: \"okButtonPressed\",\n    value: function okButtonPressed() {\n      this.props.navigation.navigate(\"ScrList\");\n    }\n  }]);\n\n  return ScreenSettings;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSkipWelcome: state.bSkipWelcome,\n    strLang: state.strLang\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {\n    reduxActionSetLanguage: reduxActionSetLanguage,\n    reduxActionSetWelcomeFlag: reduxActionSetWelcomeFlag\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps())(ScreenSettings);\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  controlsRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\",\n    height: 120,\n    margin: 20\n  },\n  imgIcon: {\n    width: 100,\n    height: 100,\n    margin: 10\n  },\n  okButton: {\n    alignSelf: \"center\",\n    width: 90,\n    height: 90,\n    marginTop: 30\n  },\n  iconView: {\n    borderColor: \"#dddddd\",\n    borderWidth: 5,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/screens/ScreenSettings.js"],"names":["React","Component","connect","reduxActionSetLanguage","reduxActionSetWelcomeFlag","ScreenSettings","props","styles","background","require","controlsRow","getlangStyle","arLangPressed","bind","imgIcon","enLangPressed","iconView","getFontSizeIcon","okButton","okButtonPressed","width","height","strLang","borderColor","navigation","navigate","mapStateToProps","state","isSkipWelcome","bSkipWelcome","mapDispatchToProps","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","flexDirection","margin","alignSelf","marginTop","borderWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,sBADF,EAEEC,yBAFF;;;;;;;IAYMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BACQ;AACP,aACE,oBAAC,eAAD;AACE,QAAA,KAAK,EAAEC,MAAM,CAACC,UADhB;AAEE,QAAA,MAAM,EAAEC,OAAO,8CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKC,YAAL,CAAkB,IAAlB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAEJ,OAAO,mCADjB;AAEE,QAAA,KAAK,EAAEF,MAAM,CAACO,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKH,YAAL,CAAkB,IAAlB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKI,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAEJ,OAAO,mCADjB;AAEE,QAAA,KAAK,EAAEF,MAAM,CAACO,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CATF,CAJF,EAsBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACS,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKJ,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKI,eAAL,EAAf;AAAuC,QAAA,KAAK,EAAEV,MAAM,CAACO,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAtBF,EA6BE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACW,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKC,eAAL,CAAqBN,IAArB,CAA0B,IAA1B,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAEJ,OAAO,kCADjB;AAEE,QAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CA7BF,CADF;AAwCD;;;sCACiB;AAChB,UAAI,KAAKf,KAAL,CAAWgB,OAAX,IAAsB,IAA1B,EAAgC;AAC9B,eAAOb,OAAO,sCAAd;AACD;;AACD,UAAI,KAAKH,KAAL,CAAWgB,OAAX,IAAsB,IAA1B,EAAgC;AAC9B,eAAOb,OAAO,sCAAd;AACD;;AACD,aAAOA,OAAO,sCAAd;AACD;;;iCACYa,O,EAAS;AACpB,aAAO,CACLf,MAAM,CAACS,QADF,EAEL,KAAKV,KAAL,CAAWgB,OAAX,IAAsBA,OAAtB,GACI;AAAEC,QAAAA,WAAW,EAAE;AAAf,OADJ,GAEI;AAAEA,QAAAA,WAAW,EAAE;AAAf,OAJC,CAAP;AAMD;;;oCACe;AACd,WAAKjB,KAAL,CAAWH,sBAAX,CAAkC,IAAlC;AACD;;;oCACe;AACd,WAAKG,KAAL,CAAWH,sBAAX,CAAkC,IAAlC;AACD;;;sCACiB;AAChB,WAAKG,KAAL,CAAWkB,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B;AACD;;;;EAvE0BxB,S;;AAyE7B,IAAMyB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCC,IAAAA,aAAa,EAAED,KAAK,CAACE,YADa;AAElCP,IAAAA,OAAO,EAAEK,KAAK,CAACL;AAFmB,GAAZ;AAAA,CAAxB;;AAIA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,SAAO;AACL3B,IAAAA,sBAAsB,EAAtBA,sBADK;AAELC,IAAAA,yBAAyB,EAAzBA;AAFK,GAAP;AAID,CALD;;AAMA,eAAeF,OAAO,CAACwB,eAAD,EAAkBI,kBAAkB,EAApC,CAAP,CAA+CzB,cAA/C,CAAf;AACA,IAAME,MAAM,GAAGwB,UAAU,CAACC,MAAX,CAAkB;AAC/BxB,EAAAA,UAAU,EAAE;AACVyB,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,cAAc,EAAE,cAFN;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,eAAe,EAAE;AAJP,GADmB;AAO/B1B,EAAAA,WAAW,EAAE;AACX2B,IAAAA,aAAa,EAAE,KADJ;AAEXH,IAAAA,cAAc,EAAE,cAFL;AAGXd,IAAAA,KAAK,EAAE,MAHI;AAIXC,IAAAA,MAAM,EAAE,GAJG;AAKXiB,IAAAA,MAAM,EAAE;AALG,GAPkB;AAc/BxB,EAAAA,OAAO,EAAE;AACPM,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,GAFD;AAGPiB,IAAAA,MAAM,EAAE;AAHD,GAdsB;AAoB/BpB,EAAAA,QAAQ,EAAE;AACRqB,IAAAA,SAAS,EAAE,QADH;AAGRnB,IAAAA,KAAK,EAAE,EAHC;AAIRC,IAAAA,MAAM,EAAE,EAJA;AAKRmB,IAAAA,SAAS,EAAE;AALH,GApBqB;AA4B/BxB,EAAAA,QAAQ,EAAE;AACRO,IAAAA,WAAW,EAAE,SADL;AAERkB,IAAAA,WAAW,EAAE,CAFL;AAGRC,IAAAA,mBAAmB,EAAE,EAHb;AAIRC,IAAAA,oBAAoB,EAAE,EAJd;AAKRC,IAAAA,sBAAsB,EAAE,EALhB;AAMRC,IAAAA,uBAAuB,EAAE,EANjB;AAORV,IAAAA,UAAU,EAAE,QAPJ;AAQRD,IAAAA,cAAc,EAAE;AARR;AA5BqB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  reduxActionSetLanguage,\r\n  reduxActionSetWelcomeFlag,\r\n} from \"../redux/reduxActions\";\r\nimport {\r\n  ImageBackground,\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\n\r\nclass ScreenSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <ImageBackground\r\n        style={styles.background}\r\n        source={require(\"../../assets/backgroundPNG/crescent_bk.png\")}\r\n      >\r\n        <View style={styles.controlsRow}>\r\n          <View style={this.getlangStyle(\"ar\")}>\r\n            <TouchableWithoutFeedback onPress={this.arLangPressed.bind(this)}>\r\n              <Image\r\n                source={require(\"../../assets/images/lang_ar.png\")}\r\n                style={styles.imgIcon}\r\n              />\r\n            </TouchableWithoutFeedback>\r\n          </View>\r\n          <View style={this.getlangStyle(\"en\")}>\r\n            <TouchableWithoutFeedback onPress={this.enLangPressed.bind(this)}>\r\n              <Image\r\n                source={require(\"../../assets/images/lang_en.png\")}\r\n                style={styles.imgIcon}\r\n              />\r\n            </TouchableWithoutFeedback>\r\n          </View>\r\n        </View>\r\n        <View style={styles.controlsRow}>\r\n          <View style={styles.iconView}>\r\n            <TouchableWithoutFeedback onPress={this.arLangPressed.bind(this)}>\r\n              <Image source={this.getFontSizeIcon()} style={styles.imgIcon} />\r\n            </TouchableWithoutFeedback>\r\n          </View>\r\n        </View>\r\n        <View style={styles.okButton}>\r\n          <TouchableWithoutFeedback onPress={this.okButtonPressed.bind(this)}>\r\n            <Image\r\n              source={require(\"../../assets/icons/ok_icon.png\")}\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n            />\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n  getFontSizeIcon() {\r\n    if (this.props.strLang == \"ar\") {\r\n      return require(\"../../assets/icons/fontSize_ar.png\");\r\n    }\r\n    if (this.props.strLang == \"en\") {\r\n      return require(\"../../assets/icons/fontSize_en.png\");\r\n    }\r\n    return require(\"../../assets/icons/fontSize_ar.png\");\r\n  }\r\n  getlangStyle(strLang) {\r\n    return [\r\n      styles.iconView,\r\n      this.props.strLang == strLang\r\n        ? { borderColor: \"#dddddd\" }\r\n        : { borderColor: \"#dddddd00\" },\r\n    ];\r\n  }\r\n  arLangPressed() {\r\n    this.props.reduxActionSetLanguage(\"ar\");\r\n  }\r\n  enLangPressed() {\r\n    this.props.reduxActionSetLanguage(\"en\");\r\n  }\r\n  okButtonPressed() {\r\n    this.props.navigation.navigate(\"ScrList\");\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isSkipWelcome: state.bSkipWelcome,\r\n  strLang: state.strLang,\r\n});\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    reduxActionSetLanguage,\r\n    reduxActionSetWelcomeFlag,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps())(ScreenSettings);\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  controlsRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    width: \"100%\",\r\n    height: 120,\r\n    margin: 20,\r\n  },\r\n  imgIcon: {\r\n    width: 100,\r\n    height: 100,\r\n    margin: 10,\r\n  },\r\n\r\n  okButton: {\r\n    alignSelf: \"center\",\r\n\r\n    width: 90,\r\n    height: 90,\r\n    marginTop: 30,\r\n  },\r\n\r\n  iconView: {\r\n    borderColor: \"#dddddd\",\r\n    borderWidth: 5,\r\n    borderTopLeftRadius: 10,\r\n    borderTopRightRadius: 10,\r\n    borderBottomLeftRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}