{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tysseer Harak\\\\Desktop\\\\Data\\\\Code\\\\React Native\\\\Dawem\\\\app\\\\js\\\\screens\\\\ScreenLanguage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxActionSetLanguage, reduxActionSetFirstRunFlag } from \"../redux/reduxActions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\n\nvar ScreenLanguage = function (_Component) {\n  _inherits(ScreenLanguage, _Component);\n\n  var _super = _createSuper(ScreenLanguage);\n\n  function ScreenLanguage(props) {\n    _classCallCheck(this, ScreenLanguage);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(ScreenLanguage, [{\n    key: \"getlangStyle\",\n    value: function getlangStyle(strLang) {\n      return [styles.langView, this.props.strLang == strLang ? {\n        borderColor: \"#dddddd\"\n      } : {\n        borderColor: \"#dddddd00\"\n      }];\n    }\n  }, {\n    key: \"arLangPressed\",\n    value: function arLangPressed() {\n      this.props.reduxActionSetLanguage(\"ar\");\n    }\n  }, {\n    key: \"enLangPressed\",\n    value: function enLangPressed() {\n      this.props.reduxActionSetLanguage(\"en\");\n    }\n  }, {\n    key: \"okButtonPressed\",\n    value: function okButtonPressed() {\n      this.props.reduxActionSetFirstRunFlag(false);\n      if (this.props.isSkipWelcome == false) this.props.navigation.navigate(\"ScrWelcome\");else this.props.navigation.navigate(\"ScrList\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ImageBackground, {\n        style: styles.background,\n        source: require(\"../../assets/backgroundPNG/crescent_bk.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: this.getlangStyle(\"ar\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.arLangPressed.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/images/lang_ar.png\"),\n        style: styles.langLogo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: this.getlangStyle(\"en\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.enLangPressed.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/images/lang_en.png\"),\n        style: styles.langLogo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: styles.okButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.okButtonPressed.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icons/ok_icon.png\"),\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return ScreenLanguage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSkipWelcome: state.bSkipWelcome,\n    strLang: state.strLang\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {\n    reduxActionSetFirstRunFlag: reduxActionSetFirstRunFlag,\n    reduxActionSetLanguage: reduxActionSetLanguage\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps())(ScreenLanguage);\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  langLogo: {\n    width: 180,\n    height: 180,\n    margin: 10\n  },\n  okButton: {\n    alignSelf: \"center\",\n    width: 90,\n    height: 90,\n    marginTop: 30\n  },\n  langView: {\n    borderColor: \"#dddddd\",\n    borderWidth: 5,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/screens/ScreenLanguage.js"],"names":["React","Component","connect","reduxActionSetLanguage","reduxActionSetFirstRunFlag","ScreenLanguage","props","strLang","styles","langView","borderColor","isSkipWelcome","navigation","navigate","background","require","getlangStyle","arLangPressed","bind","langLogo","enLangPressed","okButton","okButtonPressed","width","height","mapStateToProps","state","bSkipWelcome","mapDispatchToProps","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","margin","alignSelf","marginTop","borderWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  reduxActionSetLanguage,\r\n  reduxActionSetFirstRunFlag,\r\n} from \"../redux/reduxActions\";\r\nimport {\r\n  ImageBackground,\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\n\r\nclass ScreenLanguage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  getlangStyle(strLang) {\r\n    return [\r\n      styles.langView,\r\n      this.props.strLang == strLang\r\n        ? { borderColor: \"#dddddd\" }\r\n        : { borderColor: \"#dddddd00\" },\r\n    ];\r\n  }\r\n  arLangPressed() {\r\n    this.props.reduxActionSetLanguage(\"ar\");\r\n  }\r\n  enLangPressed() {\r\n    this.props.reduxActionSetLanguage(\"en\");\r\n  }\r\n  okButtonPressed() {\r\n    this.props.reduxActionSetFirstRunFlag(false);\r\n    if (this.props.isSkipWelcome == false)\r\n      this.props.navigation.navigate(\"ScrWelcome\");\r\n    else this.props.navigation.navigate(\"ScrList\");\r\n  }\r\n  render() {\r\n    return (\r\n      <ImageBackground\r\n        style={styles.background}\r\n        source={require(\"../../assets/backgroundPNG/crescent_bk.png\")}\r\n      >\r\n        <View style={this.getlangStyle(\"ar\")}>\r\n          <TouchableWithoutFeedback onPress={this.arLangPressed.bind(this)}>\r\n            <Image\r\n              source={require(\"../../assets/images/lang_ar.png\")}\r\n              style={styles.langLogo}\r\n            />\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n        <View style={this.getlangStyle(\"en\")}>\r\n          <TouchableWithoutFeedback onPress={this.enLangPressed.bind(this)}>\r\n            <Image\r\n              source={require(\"../../assets/images/lang_en.png\")}\r\n              style={styles.langLogo}\r\n            />\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n\r\n        <View style={styles.okButton}>\r\n          <TouchableWithoutFeedback onPress={this.okButtonPressed.bind(this)}>\r\n            <Image\r\n              source={require(\"../../assets/icons/ok_icon.png\")}\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n            />\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isSkipWelcome: state.bSkipWelcome,\r\n  strLang: state.strLang,\r\n});\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    reduxActionSetFirstRunFlag,\r\n    reduxActionSetLanguage,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps())(ScreenLanguage);\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  langLogo: {\r\n    width: 180,\r\n    height: 180,\r\n    margin: 10,\r\n  },\r\n\r\n  okButton: {\r\n    alignSelf: \"center\",\r\n\r\n    width: 90,\r\n    height: 90,\r\n    marginTop: 30,\r\n  },\r\n\r\n  langView: {\r\n    borderColor: \"#dddddd\",\r\n    borderWidth: 5,\r\n    borderTopLeftRadius: 10,\r\n    borderTopRightRadius: 10,\r\n    borderBottomLeftRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}