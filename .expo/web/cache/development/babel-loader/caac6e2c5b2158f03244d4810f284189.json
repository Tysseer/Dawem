{"ast":null,"code":"import Animated, { tan } from \"react-native-reanimated\";\nvar add = Animated.add,\n  multiply = Animated.multiply,\n  cos = Animated.cos,\n  sin = Animated.sin,\n  divide = Animated.divide;\nvar exhaustiveCheck = function exhaustiveCheck(a) {\n  throw new Error(\"Unexhaustive handling for \" + a);\n};\nexport var identityMatrix4 = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\nvar translateXMatrix = function translateXMatrix(x) {\n  return [[1, 0, 0, x], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n};\nvar translateYMatrix = function translateYMatrix(y) {\n  return [[1, 0, 0, 0], [0, 1, 0, y], [0, 0, 1, 0], [0, 0, 0, 1]];\n};\nvar translateZMatrix = function translateZMatrix(z) {\n  return [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, z], [0, 0, 0, 1]];\n};\nvar scaleMatrix = function scaleMatrix(s) {\n  return [[s, 0, 0, 0], [0, s, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n};\nvar scaleXMatrix = function scaleXMatrix(s) {\n  return [[s, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n};\nvar skewXMatrix = function skewXMatrix(s) {\n  return [[1, tan(s), 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n};\nvar skewYMatrix = function skewYMatrix(s) {\n  return [[1, 0, 0, 0], [tan(s), 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n};\nvar scaleYMatrix = function scaleYMatrix(s) {\n  return [[1, 0, 0, 0], [0, s, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n};\nvar perspectiveMatrix = function perspectiveMatrix(p) {\n  return [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, divide(-1, p), 1]];\n};\nvar rotateXMatrix = function rotateXMatrix(r) {\n  return [[1, 0, 0, 0], [0, cos(r), multiply(-1, sin(r)), 0], [0, sin(r), cos(r), 0], [0, 0, 0, 1]];\n};\nvar rotateYMatrix = function rotateYMatrix(r) {\n  return [[cos(r), 0, sin(r), 0], [0, 1, 0, 0], [multiply(-1, sin(r)), 0, cos(r), 0], [0, 0, 0, 1]];\n};\nvar rotateZMatrix = function rotateZMatrix(r) {\n  return [[cos(r), multiply(-1, sin(r)), 0, 0], [sin(r), cos(r), 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n};\nexport var dot4 = function dot4(row, col) {\n  return add(multiply(row[0], col[0]), multiply(row[1], col[1]), multiply(row[2], col[2]), multiply(row[3], col[3]));\n};\nexport var matrixVecMul4 = function matrixVecMul4(m, v) {\n  return [dot4(m[0], v), dot4(m[1], v), dot4(m[2], v), dot4(m[3], v)];\n};\nexport var multiply4 = function multiply4(m1, m2) {\n  var col0 = [m2[0][0], m2[1][0], m2[2][0], m2[3][0]];\n  var col1 = [m2[0][1], m2[1][1], m2[2][1], m2[3][1]];\n  var col2 = [m2[0][2], m2[1][2], m2[2][2], m2[3][2]];\n  var col3 = [m2[0][3], m2[1][3], m2[2][3], m2[3][3]];\n  return [[dot4(m1[0], col0), dot4(m1[0], col1), dot4(m1[0], col2), dot4(m1[0], col3)], [dot4(m1[1], col0), dot4(m1[1], col1), dot4(m1[1], col2), dot4(m1[1], col3)], [dot4(m1[2], col0), dot4(m1[2], col1), dot4(m1[2], col2), dot4(m1[2], col3)], [dot4(m1[3], col0), dot4(m1[3], col1), dot4(m1[3], col2), dot4(m1[3], col3)]];\n};\nexport var processTransform3d = function processTransform3d(transforms) {\n  return transforms.reduce(function (acc, transform) {\n    var key = Object.keys(transform)[0];\n    if (key === \"translateX\") {\n      var value = transform[key];\n      return multiply4(acc, translateXMatrix(value));\n    }\n    if (key === \"translateY\") {\n      var _value = transform[key];\n      return multiply4(acc, translateYMatrix(_value));\n    }\n    if (key === \"translateZ\") {\n      var _value2 = transform[key];\n      return multiply4(acc, translateZMatrix(_value2));\n    }\n    if (key === \"scale\") {\n      var _value3 = transform[key];\n      return multiply4(acc, scaleMatrix(_value3));\n    }\n    if (key === \"scaleX\") {\n      var _value4 = transform[key];\n      return multiply4(acc, scaleXMatrix(_value4));\n    }\n    if (key === \"scaleY\") {\n      var _value5 = transform[key];\n      return multiply4(acc, scaleYMatrix(_value5));\n    }\n    if (key === \"skewX\") {\n      var _value6 = transform[key];\n      return multiply4(acc, skewXMatrix(_value6));\n    }\n    if (key === \"skewY\") {\n      var _value7 = transform[key];\n      return multiply4(acc, skewYMatrix(_value7));\n    }\n    if (key === \"rotateX\") {\n      var _value8 = transform[key];\n      return multiply4(acc, rotateXMatrix(_value8));\n    }\n    if (key === \"rotateY\") {\n      var _value9 = transform[key];\n      return multiply4(acc, rotateYMatrix(_value9));\n    }\n    if (key === \"perspective\") {\n      var _value10 = transform[key];\n      return multiply4(acc, perspectiveMatrix(_value10));\n    }\n    if (key === \"rotate\" || key === \"rotateZ\") {\n      var _value11 = transform[key];\n      return multiply4(acc, rotateZMatrix(_value11));\n    }\n    if (key === \"matrix\") {\n      var matrix = transform[key];\n      return multiply4(acc, matrix);\n    }\n    return exhaustiveCheck(key);\n  }, identityMatrix4);\n};","map":{"version":3,"mappings":"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","names":["Animated","tan","add","multiply","cos","sin","divide","exhaustiveCheck","a","Error","identityMatrix4","translateXMatrix","x","translateYMatrix","y","translateZMatrix","z","scaleMatrix","s","scaleXMatrix","skewXMatrix","skewYMatrix","scaleYMatrix","perspectiveMatrix","p","rotateXMatrix","r","rotateYMatrix","rotateZMatrix","dot4","row","col","matrixVecMul4","m","v","multiply4","m1","m2","col0","col1","col2","col3","processTransform3d","transforms","reduce","acc","transform","key","Object","keys","value","matrix"],"sources":["Matrix4.ts"],"sourcesContent":["import Animated, { tan } from \"react-native-reanimated\";\n\nconst { add, multiply, cos, sin, divide } = Animated;\n\nexport type Vec4 = readonly [\n  Animated.Adaptable<number>,\n  Animated.Adaptable<number>,\n  Animated.Adaptable<number>,\n  Animated.Adaptable<number>\n];\n\nexport type Matrix4 = readonly [Vec4, Vec4, Vec4, Vec4];\n\ntype Transform3dName =\n  | \"translateX\"\n  | \"translateY\"\n  | \"translateZ\"\n  | \"scale\"\n  | \"scaleX\"\n  | \"scaleY\"\n  | \"skewX\"\n  | \"skewY\"\n  | \"rotateZ\"\n  | \"rotate\"\n  | \"perspective\"\n  | \"rotateX\"\n  | \"rotateY\"\n  | \"rotateZ\"\n  | \"matrix\";\ntype Transformations = {\n  [Name in Transform3dName]: Name extends \"matrix\"\n    ? Matrix4\n    : Animated.Adaptable<number>;\n};\nexport type Transforms3d = (\n  | Pick<Transformations, \"translateX\">\n  | Pick<Transformations, \"translateY\">\n  | Pick<Transformations, \"translateZ\">\n  | Pick<Transformations, \"scale\">\n  | Pick<Transformations, \"scaleX\">\n  | Pick<Transformations, \"scaleY\">\n  | Pick<Transformations, \"skewX\">\n  | Pick<Transformations, \"skewY\">\n  | Pick<Transformations, \"perspective\">\n  | Pick<Transformations, \"rotateX\">\n  | Pick<Transformations, \"rotateY\">\n  | Pick<Transformations, \"rotateZ\">\n  | Pick<Transformations, \"rotate\">\n  | Pick<Transformations, \"matrix\">\n)[];\n\nconst exhaustiveCheck = (a: never): never => {\n  throw new Error(`Unexhaustive handling for ${a}`);\n};\n\nexport const identityMatrix4: Matrix4 = [\n  [1, 0, 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst translateXMatrix = (x: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, x],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst translateYMatrix = (y: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [0, 1, 0, y],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst translateZMatrix = (z: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, z],\n  [0, 0, 0, 1],\n];\n\nconst scaleMatrix = (s: Animated.Adaptable<number>): Matrix4 => [\n  [s, 0, 0, 0],\n  [0, s, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst scaleXMatrix = (s: Animated.Adaptable<number>): Matrix4 => [\n  [s, 0, 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst skewXMatrix = (s: Animated.Adaptable<number>): Matrix4 => [\n  [1, tan(s), 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst skewYMatrix = (s: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [tan(s), 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst scaleYMatrix = (s: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [0, s, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst perspectiveMatrix = (p: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, divide(-1, p), 1],\n];\n\nconst rotateXMatrix = (r: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [0, cos(r), multiply(-1, sin(r)), 0],\n  [0, sin(r), cos(r), 0],\n  [0, 0, 0, 1],\n];\n\nconst rotateYMatrix = (r: Animated.Adaptable<number>): Matrix4 => [\n  [cos(r), 0, sin(r), 0],\n  [0, 1, 0, 0],\n  [multiply(-1, sin(r)), 0, cos(r), 0],\n  [0, 0, 0, 1],\n];\n\nconst rotateZMatrix = (r: Animated.Adaptable<number>): Matrix4 => [\n  [cos(r), multiply(-1, sin(r)), 0, 0],\n  [sin(r), cos(r), 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nexport const dot4 = (row: Vec4, col: Vec4) => {\n  return add(\n    multiply(row[0], col[0]),\n    multiply(row[1], col[1]),\n    multiply(row[2], col[2]),\n    multiply(row[3], col[3])\n  );\n};\n\nexport const matrixVecMul4 = (m: Matrix4, v: Vec4) =>\n  [dot4(m[0], v), dot4(m[1], v), dot4(m[2], v), dot4(m[3], v)] as const;\n\nexport const multiply4 = (m1: Matrix4, m2: Matrix4) => {\n  const col0 = [m2[0][0], m2[1][0], m2[2][0], m2[3][0]] as const;\n  const col1 = [m2[0][1], m2[1][1], m2[2][1], m2[3][1]] as const;\n  const col2 = [m2[0][2], m2[1][2], m2[2][2], m2[3][2]] as const;\n  const col3 = [m2[0][3], m2[1][3], m2[2][3], m2[3][3]] as const;\n  return [\n    [\n      dot4(m1[0], col0),\n      dot4(m1[0], col1),\n      dot4(m1[0], col2),\n      dot4(m1[0], col3),\n    ],\n    [\n      dot4(m1[1], col0),\n      dot4(m1[1], col1),\n      dot4(m1[1], col2),\n      dot4(m1[1], col3),\n    ],\n    [\n      dot4(m1[2], col0),\n      dot4(m1[2], col1),\n      dot4(m1[2], col2),\n      dot4(m1[2], col3),\n    ],\n    [\n      dot4(m1[3], col0),\n      dot4(m1[3], col1),\n      dot4(m1[3], col2),\n      dot4(m1[3], col3),\n    ],\n  ] as const;\n};\n\nexport const processTransform3d = (transforms: Transforms3d) =>\n  transforms.reduce((acc, transform) => {\n    const key = Object.keys(transform)[0] as Transform3dName;\n    if (key === \"translateX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, translateXMatrix(value));\n    }\n    if (key === \"translateY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, translateYMatrix(value));\n    }\n    if (key === \"translateZ\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, translateZMatrix(value));\n    }\n    if (key === \"scale\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, scaleMatrix(value));\n    }\n    if (key === \"scaleX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, scaleXMatrix(value));\n    }\n    if (key === \"scaleY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, scaleYMatrix(value));\n    }\n    if (key === \"skewX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, skewXMatrix(value));\n    }\n    if (key === \"skewY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, skewYMatrix(value));\n    }\n    if (key === \"rotateX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, rotateXMatrix(value));\n    }\n    if (key === \"rotateY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, rotateYMatrix(value));\n    }\n    if (key === \"perspective\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, perspectiveMatrix(value));\n    }\n    if (key === \"rotate\" || key === \"rotateZ\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, rotateZMatrix(value));\n    }\n    if (key === \"matrix\") {\n      const matrix = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, matrix);\n    }\n    return exhaustiveCheck(key);\n  }, identityMatrix4);\n"]},"metadata":{},"sourceType":"module"}