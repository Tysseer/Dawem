{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { SafeAreaProvider, SafeAreaView } from \"react-native-safe-area-context\";\nimport \"react-native-gesture-handler\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport reduxStore from \"./app/js/redux/reduxStore\";\nimport reduxPersistor from \"./app/js/redux/reduxPersistor\";\nimport Revision from \"./app/js/helpers/Revision\";\nimport Navigation from \"./app/navigation\";\nimport { RootSiblingParent } from \"react-native-root-siblings\";\nimport * as Device from \"expo-device\";\nimport * as Notifications from \"expo-notifications\";\nimport { Audio } from \"expo-av\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: false,\n              shouldSetBadge: false\n            });\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\nfunction registerForPushNotificationsAsync() {\n  var token, _await$Notifications$, existingStatus, finalStatus, _await$Notifications$2, status;\n  return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!Device.isDevice) {\n            _context2.next = 21;\n            break;\n          }\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n        case 3:\n          _await$Notifications$ = _context2.sent;\n          existingStatus = _await$Notifications$.status;\n          finalStatus = existingStatus;\n          if (!(existingStatus !== \"granted\")) {\n            _context2.next = 12;\n            break;\n          }\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(Notifications.requestPermissionsAsync());\n        case 9:\n          _await$Notifications$2 = _context2.sent;\n          status = _await$Notifications$2.status;\n          finalStatus = status;\n        case 12:\n          if (!(finalStatus !== \"granted\")) {\n            _context2.next = 15;\n            break;\n          }\n          alert(\"Failed to get push token for push notification!\");\n          return _context2.abrupt(\"return\");\n        case 15:\n          _context2.next = 17;\n          return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n        case 17:\n          token = _context2.sent.data;\n          console.log(token);\n          _context2.next = 22;\n          break;\n        case 21:\n          alert(\"Must use physical device for Push Notifications\");\n        case 22:\n          if (Platform.OS === \"android\") {\n            Notifications.setNotificationChannelAsync(\"default\", {\n              name: \"default\",\n              importance: Notifications.AndroidImportance.MAX,\n              vibrationPattern: [0, 250, 250, 250],\n              lightColor: \"#FF231F7C\"\n            });\n          }\n          return _context2.abrupt(\"return\", token);\n        case 24:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nfunction setAudioSettingsAsync() {\n  var promise;\n  return _regeneratorRuntime.async(function setAudioSettingsAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n            allowsRecordingIOS: false,\n            playsInSilentModeIOS: true,\n            staysActiveInBackground: true,\n            interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS,\n            shouldDuckAndroid: true,\n            interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n            playThroughEarpieceAndroid: true\n          }));\n        case 2:\n          promise = _context3.sent;\n          return _context3.abrupt(\"return\", promise);\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nvar App = function (_Component) {\n  _inherits(App, _Component);\n  var _super = _createSuper(App);\n  function App(props) {\n    var _this;\n    _classCallCheck(this, App);\n    _this = _super.call(this, props);\n    _this.state = {\n      bIsLoaded: false,\n      fontLoaded: false,\n      fontLoadedFinished: false\n    };\n    _this.m_pushNotificationToken = null;\n    return _this;\n  }\n  _createClass(App, [{\n    key: \"fetchFonts\",\n    value: function fetchFonts() {\n      var y;\n      return _regeneratorRuntime.async(function fetchFonts$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"sans-serif\": require(\"./app/assets/fonts/ArabicKufi.ttf\"),\n                \"Segoe UI\": require(\"./app/assets/fonts/SegoeUI.ttf\"),\n                \"Segoe UI_MSFontService\": require(\"./app/assets/fonts/SegoeUIBold.ttf\"),\n                Amiri: require(\"./app/assets/fonts/Amiri-Regular.ttf\"),\n                Amiri_Bold: require(\"./app/assets/fonts/Amiri-Bold.ttf\"),\n                Poppins: require(\"./app/assets/fonts/Poppins-Regular.ttf\"),\n                \"Poppins-Bold\": require(\"./app/assets/fonts/Poppins-Bold.ttf\"),\n                Poppins_xBold: require(\"./app/assets/fonts/Poppins-ExtraBold.ttf\"),\n                QuranSurah2: require(\"./app/assets/fonts/QuranSurah2.ttf\"),\n                Quraan: require(\"./app/assets/fonts/Quraan.ttf\"),\n                noorehidayat: require(\"./app/assets/fonts/noorehidayat.ttf\"),\n                UthmanicHafs: require(\"./app/assets/fonts/UthmanicHafs.ttf\")\n              }));\n            case 2:\n              y = _context4.sent;\n              this.setState({\n                fontLoadedFinished: true\n              });\n              return _context4.abrupt(\"return\", y);\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      return _regeneratorRuntime.async(function componentDidMount$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (this.state.fontLoadedFinished) {\n                _context5.next = 2;\n                break;\n              }\n              return _context5.abrupt(\"return\", _jsx(AppLoading, {\n                startAsync: this.fetchFonts(),\n                onFinish: function onFinish() {\n                  _this2.setState({\n                    fontLoaded: true\n                  });\n                },\n                onError: function onError(err) {\n                  return console.log(err);\n                }\n              }));\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"onBeforeLift\",\n    value: function onBeforeLift() {\n      var _this3 = this;\n      for (var i = 0; i < reduxStore.getState().revisions.length; i++) {\n        var rev = new Revision();\n        rev.fillFromSerializedObj(reduxStore.getState().revisions[i]);\n        reduxStore.getState().revisions[i] = rev;\n      }\n      registerForPushNotificationsAsync().then(function (token) {\n        return _this3.m_pushNotificationToken = token;\n      });\n      setAudioSettingsAsync().catch(function (error) {\n        alert(\"Audio setings error:\" + error);\n      });\n      this.setState({\n        bIsLoaded: true\n      });\n    }\n  }, {\n    key: \"getLoadingRender\",\n    value: function getLoadingRender() {\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsx(Text, {\n          style: {\n            fontSize: 40,\n            color: \"red\"\n          },\n          children: \"Loading\"\n        })\n      });\n    }\n  }, {\n    key: \"getFonts\",\n    value: function getFonts() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.fontLoadedFinished) {\n        return null;\n      } else {\n        return _jsx(RootSiblingParent, {\n          children: _jsxs(Provider, {\n            store: reduxStore,\n            children: [_jsx(PersistGate, {\n              loading: null,\n              persistor: reduxPersistor,\n              onBeforeLift: this.onBeforeLift.bind(this),\n              children: _jsx(SafeAreaProvider, {\n                children: _jsx(SafeAreaView, {\n                  style: {\n                    flex: 1\n                  },\n                  children: this.state.bIsLoaded ? _jsx(Navigation, {}) : this.getLoadingRender()\n                })\n              })\n            }), _jsx(StatusBar, {\n              style: Platform.OS === \"ios\" ? \"light\" : \"auto\"\n            })]\n          })\n        });\n      }\n    }\n  }]);\n  return App;\n}(Component);\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#666\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","Component","SafeAreaProvider","SafeAreaView","Provider","PersistGate","AppLoading","Font","reduxStore","reduxPersistor","Revision","Navigation","RootSiblingParent","Device","Notifications","Audio","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","registerForPushNotificationsAsync","isDevice","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","alert","getExpoPushTokenAsync","token","data","console","log","Platform","OS","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","setAudioSettingsAsync","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","staysActiveInBackground","interruptionModeIOS","INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS","shouldDuckAndroid","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DUCK_OTHERS","playThroughEarpieceAndroid","promise","App","props","state","bIsLoaded","fontLoaded","fontLoadedFinished","m_pushNotificationToken","loadAsync","require","Amiri","Amiri_Bold","Poppins","Poppins_xBold","QuranSurah2","Quraan","noorehidayat","UthmanicHafs","y","setState","fetchFonts","err","i","getState","revisions","length","rev","fillFromSerializedObj","then","catch","error","styles","container","fontSize","color","onBeforeLift","bind","flex","getLoadingRender","StyleSheet","create","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/App.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { StyleSheet, Text, View, Platform, StatusBar } from \"react-native\";\r\nimport { SafeAreaProvider, SafeAreaView } from \"react-native-safe-area-context\";\r\nimport \"react-native-gesture-handler\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\n\r\nimport reduxStore from \"./app/js/redux/reduxStore\";\r\nimport reduxPersistor from \"./app/js/redux/reduxPersistor\";\r\n\r\nimport Revision from \"./app/js/helpers/Revision\";\r\nimport Navigation from \"./app/navigation\";\r\nimport { RootSiblingParent } from \"react-native-root-siblings\";\r\nimport * as Device from \"expo-device\";\r\nimport * as Notifications from \"expo-notifications\";\r\nimport { Audio } from \"expo-av\";\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: false,\r\n    shouldSetBadge: false,\r\n  }),\r\n});\r\n\r\nasync function registerForPushNotificationsAsync() {\r\n  let token;\r\n  if (Device.isDevice) {\r\n    const { status: existingStatus } =\r\n      await Notifications.getPermissionsAsync();\r\n    let finalStatus = existingStatus;\r\n    if (existingStatus !== \"granted\") {\r\n      const { status } = await Notifications.requestPermissionsAsync();\r\n      finalStatus = status;\r\n    }\r\n    if (finalStatus !== \"granted\") {\r\n      alert(\"Failed to get push token for push notification!\");\r\n      return;\r\n    }\r\n    token = (await Notifications.getExpoPushTokenAsync()).data;\r\n    console.log(token);\r\n  } else {\r\n    alert(\"Must use physical device for Push Notifications\");\r\n  }\r\n\r\n  if (Platform.OS === \"android\") {\r\n    Notifications.setNotificationChannelAsync(\"default\", {\r\n      name: \"default\",\r\n      importance: Notifications.AndroidImportance.MAX,\r\n      vibrationPattern: [0, 250, 250, 250],\r\n      lightColor: \"#FF231F7C\",\r\n    });\r\n  }\r\n\r\n  return token;\r\n}\r\n\r\nasync function setAudioSettingsAsync() {\r\n  let promise = await Audio.setAudioModeAsync({\r\n    allowsRecordingIOS: false,\r\n    playsInSilentModeIOS: true,\r\n    staysActiveInBackground: true,\r\n    interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_MIX_WITH_OTHERS,\r\n    shouldDuckAndroid: true,\r\n    interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\r\n    playThroughEarpieceAndroid: true,\r\n  });\r\n  return promise;\r\n}\r\nexport default class App extends Component {\r\n  async fetchFonts() {\r\n    const y = await Font.loadAsync({\r\n      \"sans-serif\": require(\"./app/assets/fonts/ArabicKufi.ttf\"),\r\n      \"Segoe UI\": require(\"./app/assets/fonts/SegoeUI.ttf\"),\r\n      \"Segoe UI_MSFontService\": require(\"./app/assets/fonts/SegoeUIBold.ttf\"),\r\n      Amiri: require(\"./app/assets/fonts/Amiri-Regular.ttf\"),\r\n      Amiri_Bold: require(\"./app/assets/fonts/Amiri-Bold.ttf\"),\r\n      Poppins: require(\"./app/assets/fonts/Poppins-Regular.ttf\"),\r\n      \"Poppins-Bold\": require(\"./app/assets/fonts/Poppins-Bold.ttf\"),\r\n      Poppins_xBold: require(\"./app/assets/fonts/Poppins-ExtraBold.ttf\"),\r\n      QuranSurah2: require(\"./app/assets/fonts/QuranSurah2.ttf\"),\r\n      Quraan: require(\"./app/assets/fonts/Quraan.ttf\"),\r\n      noorehidayat: require(\"./app/assets/fonts/noorehidayat.ttf\"),\r\n      UthmanicHafs: require(\"./app/assets/fonts/UthmanicHafs.ttf\"),\r\n    });\r\n    this.setState({ fontLoadedFinished: true });\r\n    return y;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bIsLoaded: false,\r\n      fontLoaded: false,\r\n      fontLoadedFinished: false,\r\n    };\r\n    this.m_pushNotificationToken = null;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (!this.state.fontLoadedFinished) {\r\n      return (\r\n        <AppLoading\r\n          startAsync={this.fetchFonts()}\r\n          onFinish={() => {\r\n            this.setState({ fontLoaded: true });\r\n          }}\r\n          onError={(err) => console.log(err)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  onBeforeLift() {\r\n    // take some action before the gate lifts\r\n    for (var i = 0; i < reduxStore.getState().revisions.length; i++) {\r\n      var rev = new Revision();\r\n      rev.fillFromSerializedObj(reduxStore.getState().revisions[i]);\r\n      reduxStore.getState().revisions[i] = rev;\r\n    }\r\n    registerForPushNotificationsAsync().then(\r\n      (token) => (this.m_pushNotificationToken = token)\r\n    );\r\n    setAudioSettingsAsync().catch((error) => {\r\n      alert(\"Audio setings error:\" + error);\r\n    });\r\n\r\n    this.setState({ bIsLoaded: true });\r\n  }\r\n\r\n  getLoadingRender() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={{ fontSize: 40, color: \"red\" }}>Loading</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  getFonts() {}\r\n\r\n  render() {\r\n    if (!this.state.fontLoadedFinished) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <RootSiblingParent>\r\n          <Provider store={reduxStore}>\r\n            <PersistGate\r\n              loading={null}\r\n              persistor={reduxPersistor}\r\n              onBeforeLift={this.onBeforeLift.bind(this)}\r\n            >\r\n              <SafeAreaProvider>\r\n                <SafeAreaView style={{ flex: 1 }}>\r\n                  {this.state.bIsLoaded ? (\r\n                    <Navigation />\r\n                  ) : (\r\n                    this.getLoadingRender()\r\n                  )}\r\n                </SafeAreaView>\r\n              </SafeAreaProvider>\r\n            </PersistGate>\r\n            <StatusBar style={Platform.OS === \"ios\" ? \"light\" : \"auto\"} />\r\n          </Provider>\r\n        </RootSiblingParent>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#666\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAGzC,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,gCAAgC;AAC/E,OAAO,8BAA8B;AACrC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,KAAKC,IAAI,MAAM,WAAW;AAEjC,OAAOC,UAAU;AACjB,OAAOC,cAAc;AAErB,OAAOC,QAAQ;AACf,OAAOC,UAAU;AACjB,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAO,KAAKC,MAAM,MAAM,aAAa;AACrC,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AACnD,SAASC,KAAK,QAAQ,SAAS;AAAC;AAAA;AAChCD,aAAa,CAACE,sBAAsB,CAAC;EACnCC,kBAAkB,EAAE;IAAA;MAAA;QAAA;UAAA;YAAA,iCAAa;cAC/BC,eAAe,EAAE,IAAI;cACrBC,eAAe,EAAE,KAAK;cACtBC,cAAc,EAAE;YAClB,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;AACH,CAAC,CAAC;AAEF,SAAeC,iCAAiC;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA,KAE1CR,MAAM,CAACS,QAAQ;YAAA;YAAA;UAAA;UAAA;UAAA,iCAETR,aAAa,CAACS,mBAAmB,EAAE;QAAA;UAAA;UAD3BC,cAAc,yBAAtBC,MAAM;UAEVC,WAAW,GAAGF,cAAc;UAAA,MAC5BA,cAAc,KAAK,SAAS;YAAA;YAAA;UAAA;UAAA;UAAA,iCACLV,aAAa,CAACa,uBAAuB,EAAE;QAAA;UAAA;UAAxDF,MAAM,0BAANA,MAAM;UACdC,WAAW,GAAGD,MAAM;QAAC;UAAA,MAEnBC,WAAW,KAAK,SAAS;YAAA;YAAA;UAAA;UAC3BE,KAAK,CAAC,iDAAiD,CAAC;UAAC;QAAA;UAAA;UAAA,iCAG5Cd,aAAa,CAACe,qBAAqB,EAAE;QAAA;UAApDC,KAAK,kBAAiDC,IAAI;UAC1DC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;UAAC;UAAA;QAAA;UAEnBF,KAAK,CAAC,iDAAiD,CAAC;QAAC;UAG3D,IAAIM,QAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;YAC7BrB,aAAa,CAACsB,2BAA2B,CAAC,SAAS,EAAE;cACnDC,IAAI,EAAE,SAAS;cACfC,UAAU,EAAExB,aAAa,CAACyB,iBAAiB,CAACC,GAAG;cAC/CC,gBAAgB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;cACpCC,UAAU,EAAE;YACd,CAAC,CAAC;UACJ;UAAC,kCAEMZ,KAAK;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAGd,SAAea,qBAAqB;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACd5B,KAAK,CAAC6B,iBAAiB,CAAC;YAC1CC,kBAAkB,EAAE,KAAK;YACzBC,oBAAoB,EAAE,IAAI;YAC1BC,uBAAuB,EAAE,IAAI;YAC7BC,mBAAmB,EAAEjC,KAAK,CAACkC,qCAAqC;YAChEC,iBAAiB,EAAE,IAAI;YACvBC,uBAAuB,EAAEpC,KAAK,CAACqC,qCAAqC;YACpEC,0BAA0B,EAAE;UAC9B,CAAC,CAAC;QAAA;UAREC,OAAO;UAAA,kCASJA,OAAO;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AACf,IACoBC,GAAG;EAAA;EAAA;EAoBtB,aAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IACX,MAAKC,KAAK,GAAG;MACXC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,KAAK;MACjBC,kBAAkB,EAAE;IACtB,CAAC;IACD,MAAKC,uBAAuB,GAAG,IAAI;IAAC;EACtC;EAAC;IAAA;IAAA,OA3BD;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACkBtD,IAAI,CAACuD,SAAS,CAAC;gBAC7B,YAAY,EAAEC,OAAO,qCAAqC;gBAC1D,UAAU,EAAEA,OAAO,kCAAkC;gBACrD,wBAAwB,EAAEA,OAAO,sCAAsC;gBACvEC,KAAK,EAAED,OAAO,wCAAwC;gBACtDE,UAAU,EAAEF,OAAO,qCAAqC;gBACxDG,OAAO,EAAEH,OAAO,0CAA0C;gBAC1D,cAAc,EAAEA,OAAO,uCAAuC;gBAC9DI,aAAa,EAAEJ,OAAO,4CAA4C;gBAClEK,WAAW,EAAEL,OAAO,sCAAsC;gBAC1DM,MAAM,EAAEN,OAAO,iCAAiC;gBAChDO,YAAY,EAAEP,OAAO,uCAAuC;gBAC5DQ,YAAY,EAAER,OAAO;cACvB,CAAC,CAAC;YAAA;cAbIS,CAAC;cAcP,IAAI,CAACC,QAAQ,CAAC;gBAAEb,kBAAkB,EAAE;cAAK,CAAC,CAAC;cAAC,kCACrCY,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACT;IAAA;IAAA,OAYD;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,IACO,IAAI,CAACf,KAAK,CAACG,kBAAkB;gBAAA;gBAAA;cAAA;cAAA,kCAE9B,KAAC,UAAU;gBACT,UAAU,EAAE,IAAI,CAACc,UAAU,EAAG;gBAC9B,QAAQ,EAAE,oBAAM;kBACd,MAAI,CAACD,QAAQ,CAAC;oBAAEd,UAAU,EAAE;kBAAK,CAAC,CAAC;gBACrC,CAAE;gBACF,OAAO,EAAE,iBAACgB,GAAG;kBAAA,OAAK3C,OAAO,CAACC,GAAG,CAAC0C,GAAG,CAAC;gBAAA;cAAC,EACnC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAGP;IAAA;IAAA,OAED,wBAAe;MAAA;MAEb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpE,UAAU,CAACqE,QAAQ,EAAE,CAACC,SAAS,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;QAC/D,IAAII,GAAG,GAAG,IAAItE,QAAQ,EAAE;QACxBsE,GAAG,CAACC,qBAAqB,CAACzE,UAAU,CAACqE,QAAQ,EAAE,CAACC,SAAS,CAACF,CAAC,CAAC,CAAC;QAC7DpE,UAAU,CAACqE,QAAQ,EAAE,CAACC,SAAS,CAACF,CAAC,CAAC,GAAGI,GAAG;MAC1C;MACA3D,iCAAiC,EAAE,CAAC6D,IAAI,CACtC,UAACpD,KAAK;QAAA,OAAM,MAAI,CAAC+B,uBAAuB,GAAG/B,KAAK;MAAA,CAAC,CAClD;MACDa,qBAAqB,EAAE,CAACwC,KAAK,CAAC,UAACC,KAAK,EAAK;QACvCxD,KAAK,CAAC,sBAAsB,GAAGwD,KAAK,CAAC;MACvC,CAAC,CAAC;MAEF,IAAI,CAACX,QAAQ,CAAC;QAAEf,SAAS,EAAE;MAAK,CAAC,CAAC;IACpC;EAAC;IAAA;IAAA,OAED,4BAAmB;MACjB,OACE,KAAC,IAAI;QAAC,KAAK,EAAE2B,MAAM,CAACC,SAAU;QAAA,UAC5B,KAAC,IAAI;UAAC,KAAK,EAAE;YAAEC,QAAQ,EAAE,EAAE;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAA;QAAA;MAAe,EACtD;IAEX;EAAC;IAAA;IAAA,OAED,oBAAW,CAAC;EAAC;IAAA;IAAA,OAEb,kBAAS;MACP,IAAI,CAAC,IAAI,CAAC/B,KAAK,CAACG,kBAAkB,EAAE;QAClC,OAAO,IAAI;MACb,CAAC,MAAM;QACL,OACE,KAAC,iBAAiB;UAAA,UAChB,MAAC,QAAQ;YAAC,KAAK,EAAEpD,UAAW;YAAA,WAC1B,KAAC,WAAW;cACV,OAAO,EAAE,IAAK;cACd,SAAS,EAAEC,cAAe;cAC1B,YAAY,EAAE,IAAI,CAACgF,YAAY,CAACC,IAAI,CAAC,IAAI,CAAE;cAAA,UAE3C,KAAC,gBAAgB;gBAAA,UACf,KAAC,YAAY;kBAAC,KAAK,EAAE;oBAAEC,IAAI,EAAE;kBAAE,CAAE;kBAAA,UAC9B,IAAI,CAAClC,KAAK,CAACC,SAAS,GACnB,KAAC,UAAU,KAAG,GAEd,IAAI,CAACkC,gBAAgB;gBACtB;cACY;YACE,EACP,EACd,KAAC,SAAS;cAAC,KAAK,EAAE1D,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,OAAO,GAAG;YAAO,EAAG;UAAA;QACrD,EACO;MAExB;IACF;EAAC;EAAA;AAAA,EAlG8BlC,SAAS;AAAA,SAArBsD,GAAG;AAoGxB,IAAM8B,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPI,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}