{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as FileSystem from \"expo-file-system\";\nimport * as Sharing from \"expo-sharing\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CreateFile = function CreateFile() {\n  var Create = function Create() {\n    var fileUri, asset;\n    return _regeneratorRuntime.async(function Create$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(FileSystem);\n            fileUri = FileSystem.documentDirectory + \"test.txt\";\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(FileSystem.writeAsStringAsync(fileUri, \"Dawem World\", {\n              encoding: FileSystem.EncodingType.UTF8\n            }));\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(FileSystem.readAsStringAsync(FileSystem.documentDirectory + \"test.txt\", {\n              encoding: FileSystem.EncodingType.UTF8\n            }));\n          case 6:\n            asset = _context.sent;\n            console.log(\"asset\", asset);\n            Sharing.shareAsync(fileUri, {});\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  useEffect(function () {\n    console.log(\"llllllllllkk\");\n    Create();\n  }, []);\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \" ffffffff \"\n    })\n  });\n};\nexport default CreateFile;","map":{"version":3,"names":["React","useEffect","FileSystem","Sharing","CreateFile","Create","console","log","fileUri","documentDirectory","writeAsStringAsync","encoding","EncodingType","UTF8","readAsStringAsync","asset","shareAsync"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/screens/CreateFile.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport * as FileSystem from \"expo-file-system\";\r\nimport * as Sharing from \"expo-sharing\";\r\n\r\nconst CreateFile = () => {\r\n  const Create = async () => {\r\n    console.log(FileSystem);\r\n    let fileUri = FileSystem.documentDirectory + \"test.txt\";\r\n    await FileSystem.writeAsStringAsync(fileUri, \"Dawem World\", {\r\n      encoding: FileSystem.EncodingType.UTF8,\r\n    });\r\n    // const asset = await MediaLibrary.createAssetAsync(fileUri);\r\n    const asset = await FileSystem.readAsStringAsync(\r\n      FileSystem.documentDirectory + \"test.txt\",\r\n      {\r\n        encoding: FileSystem.EncodingType.UTF8,\r\n      }\r\n    );\r\n    console.log(\"asset\", asset);\r\n    Sharing.shareAsync(fileUri, {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"llllllllllkk\");\r\n    Create();\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <Text> ffffffff </Text>\r\n    </View>\r\n  );\r\n};\r\nexport default CreateFile;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAEzC,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,OAAO,KAAKC,OAAO,MAAM,cAAc;AAAC;AAExC,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;EACvB,IAAMC,MAAM,GAAG,SAATA,MAAM;IAAA;IAAA;MAAA;QAAA;UAAA;YACVC,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;YACnBM,OAAO,GAAGN,UAAU,CAACO,iBAAiB,GAAG,UAAU;YAAA;YAAA,iCACjDP,UAAU,CAACQ,kBAAkB,CAACF,OAAO,EAAE,aAAa,EAAE;cAC1DG,QAAQ,EAAET,UAAU,CAACU,YAAY,CAACC;YACpC,CAAC,CAAC;UAAA;YAAA;YAAA,iCAEkBX,UAAU,CAACY,iBAAiB,CAC9CZ,UAAU,CAACO,iBAAiB,GAAG,UAAU,EACzC;cACEE,QAAQ,EAAET,UAAU,CAACU,YAAY,CAACC;YACpC,CAAC,CACF;UAAA;YALKE,KAAK;YAMXT,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEQ,KAAK,CAAC;YAC3BZ,OAAO,CAACa,UAAU,CAACR,OAAO,EAAE,CAAC,CAAC,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACjC;EAEDP,SAAS,CAAC,YAAM;IACdK,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BF,MAAM,EAAE;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,KAAC,IAAI;IAAA,UACH,KAAC,IAAI;MAAA;IAAA;EAAkB,EAClB;AAEX,CAAC;AACD,eAAeD,UAAU"},"metadata":{},"sourceType":"module"}