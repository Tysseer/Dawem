{"ast":null,"code":"import { Ionicons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScreenSettings from \"../../js/screens/ScreenSettings\";\nimport { colors } from \"../../constants\";\nimport Doaa from \"../../assets/svg/Doaa.js\";\nimport Mushaf from \"../../assets/svg/Mushaf\";\nimport MainStack from \"../Stack/MainStack\";\nimport ScreenRevisionsTools from \"../../js/screens/ScreenRevisionsTools\";\nimport Header from \"../../components/Header\";\nimport StringsManager from \"../../js/helpers/StringsManager\";\nimport * as strings from \"../../js/helpers/StringsManager\";\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BottomTab = createBottomTabNavigator();\nexport default function BottomNav() {\n  var stringsManager = new StringsManager();\n  var strLang = useSelector(function (state) {\n    return state.strLang;\n  });\n  stringsManager.setLanguage(strLang);\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"Main\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarActiveTintColor: colors.primary,\n        headerShown: true,\n        tabBarShowLabel: false,\n        tabBarVisible: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          if (route.name === \"Main\") {\n            return _jsx(Ionicons, {\n              color: focused ? colors.primary : \"#8789A3\",\n              name: \"home\",\n              size: 24\n            });\n          } else if (route.name === \"Settings\") {\n            return _jsx(Ionicons, {\n              name: \"md-settings-sharp\",\n              size: 24,\n              color: focused ? colors.primary : \"#8789A3\"\n            });\n          } else if (route.name === \"Tools\") {\n            return _jsx(Mushaf, {\n              color: focused ? colors.primary : \"#8789A3\"\n            });\n          }\n        }\n      };\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Tools\",\n      component: ScreenRevisionsTools,\n      options: {\n        header: function header() {\n          return _jsx(Header, {\n            lang: {\n              strLang: strLang\n            },\n            showIcon: false,\n            title: stringsManager.getStr(strings.STR_REV_TOOLS)\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Main\",\n      component: MainStack,\n      options: {\n        header: function header() {\n          return null;\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Settings\",\n      component: ScreenSettings,\n      options: {\n        header: function header() {\n          return null;\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"names":["Ionicons","createBottomTabNavigator","ScreenSettings","colors","Doaa","Mushaf","MainStack","ScreenRevisionsTools","Header","StringsManager","strings","useSelector","BottomTab","BottomNav","stringsManager","strLang","state","setLanguage","route","tabBarActiveTintColor","primary","headerShown","tabBarShowLabel","tabBarVisible","tabBarIcon","focused","name","header","getStr","STR_REV_TOOLS"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/navigation/BottomTabs/index.js"],"sourcesContent":["import { Ionicons } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n\r\nimport { Text, View } from \"react-native\";\r\n\r\nimport ScreenSettings from \"app/js/screens/ScreenSettings\";\r\nimport { colors } from \"app/constants\";\r\nimport Doaa from \"assets/svg/Doaa.js\";\r\nimport Mushaf from \"assets/svg/Mushaf\";\r\nimport MainStack from \"../Stack/MainStack\";\r\nimport ScreenRevisionsTools from \"../../js/screens/ScreenRevisionsTools\";\r\nimport Header from \"app/components/Header\";\r\nimport StringsManager from \"../../js/helpers/StringsManager\";\r\nimport * as strings from \"js/helpers/StringsManager\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst BottomTab = createBottomTabNavigator();\r\n\r\nexport default function BottomNav() {\r\n  let stringsManager = new StringsManager();\r\n  const strLang = useSelector((state) => state.strLang);\r\n  stringsManager.setLanguage(strLang);\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"Main\"\r\n      screenOptions={({ route }) => ({\r\n        tabBarActiveTintColor: colors.primary,\r\n        headerShown: true,\r\n        tabBarShowLabel: false,\r\n        tabBarVisible: false,\r\n        tabBarIcon: ({ focused }) => {\r\n          if (route.name === \"Main\") {\r\n            return (\r\n              <Ionicons\r\n                color={focused ? colors.primary : \"#8789A3\"}\r\n                name=\"home\"\r\n                size={24}\r\n              />\r\n            );\r\n          } else if (route.name === \"Settings\") {\r\n            return (\r\n              <Ionicons\r\n                name=\"md-settings-sharp\"\r\n                size={24}\r\n                color={focused ? colors.primary : \"#8789A3\"}\r\n              />\r\n            );\r\n          } else if (route.name === \"Tools\") {\r\n            return <Mushaf color={focused ? colors.primary : \"#8789A3\"} />;\r\n          }\r\n        },\r\n      })}\r\n    >\r\n      <BottomTab.Screen\r\n        name=\"Tools\"\r\n        component={ScreenRevisionsTools}\r\n        options={{\r\n          header: () => (\r\n            <Header\r\n              lang={{ strLang }}\r\n              showIcon={false}\r\n              title={stringsManager.getStr(strings.STR_REV_TOOLS)}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Main\"\r\n        component={MainStack}\r\n        options={{\r\n          header: () => null,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Settings\"\r\n        component={ScreenSettings}\r\n        options={{\r\n          header: () => null,\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,wBAAwB,QAAQ,+BAA+B;AAAC;AAAA;AAIzE,OAAOC,cAAc;AACrB,SAASC,MAAM;AACf,OAAOC,IAAI;AACX,OAAOC,MAAM;AACb,OAAOC,SAAS;AAChB,OAAOC,oBAAoB;AAC3B,OAAOC,MAAM;AACb,OAAOC,cAAc;AACrB,OAAO,KAAKC,OAAO;AACnB,SAASC,WAAW,QAAQ,aAAa;AAAC;AAAA;AAE1C,IAAMC,SAAS,GAAGX,wBAAwB,EAAE;AAE5C,eAAe,SAASY,SAAS,GAAG;EAClC,IAAIC,cAAc,GAAG,IAAIL,cAAc,EAAE;EACzC,IAAMM,OAAO,GAAGJ,WAAW,CAAC,UAACK,KAAK;IAAA,OAAKA,KAAK,CAACD,OAAO;EAAA,EAAC;EACrDD,cAAc,CAACG,WAAW,CAACF,OAAO,CAAC;EACnC,OACE,MAAC,SAAS,CAAC,SAAS;IAClB,gBAAgB,EAAC,MAAM;IACvB,aAAa,EAAE;MAAA,IAAGG,KAAK,QAALA,KAAK;MAAA,OAAQ;QAC7BC,qBAAqB,EAAEhB,MAAM,CAACiB,OAAO;QACrCC,WAAW,EAAE,IAAI;QACjBC,eAAe,EAAE,KAAK;QACtBC,aAAa,EAAE,KAAK;QACpBC,UAAU,EAAE,2BAAiB;UAAA,IAAdC,OAAO,SAAPA,OAAO;UACpB,IAAIP,KAAK,CAACQ,IAAI,KAAK,MAAM,EAAE;YACzB,OACE,KAAC,QAAQ;cACP,KAAK,EAAED,OAAO,GAAGtB,MAAM,CAACiB,OAAO,GAAG,SAAU;cAC5C,IAAI,EAAC,MAAM;cACX,IAAI,EAAE;YAAG,EACT;UAEN,CAAC,MAAM,IAAIF,KAAK,CAACQ,IAAI,KAAK,UAAU,EAAE;YACpC,OACE,KAAC,QAAQ;cACP,IAAI,EAAC,mBAAmB;cACxB,IAAI,EAAE,EAAG;cACT,KAAK,EAAED,OAAO,GAAGtB,MAAM,CAACiB,OAAO,GAAG;YAAU,EAC5C;UAEN,CAAC,MAAM,IAAIF,KAAK,CAACQ,IAAI,KAAK,OAAO,EAAE;YACjC,OAAO,KAAC,MAAM;cAAC,KAAK,EAAED,OAAO,GAAGtB,MAAM,CAACiB,OAAO,GAAG;YAAU,EAAG;UAChE;QACF;MACF,CAAC;IAAA,CAAE;IAAA,WAEH,KAAC,SAAS,CAAC,MAAM;MACf,IAAI,EAAC,OAAO;MACZ,SAAS,EAAEb,oBAAqB;MAChC,OAAO,EAAE;QACPoB,MAAM,EAAE;UAAA,OACN,KAAC,MAAM;YACL,IAAI,EAAE;cAAEZ,OAAO,EAAPA;YAAQ,CAAE;YAClB,QAAQ,EAAE,KAAM;YAChB,KAAK,EAAED,cAAc,CAACc,MAAM,CAAClB,OAAO,CAACmB,aAAa;UAAE,EACpD;QAAA;MAEN;IAAE,EACF,EACF,KAAC,SAAS,CAAC,MAAM;MACf,IAAI,EAAC,MAAM;MACX,SAAS,EAAEvB,SAAU;MACrB,OAAO,EAAE;QACPqB,MAAM,EAAE;UAAA,OAAM,IAAI;QAAA;MACpB;IAAE,EACF,EACF,KAAC,SAAS,CAAC,MAAM;MACf,IAAI,EAAC,UAAU;MACf,SAAS,EAAEzB,cAAe;MAC1B,OAAO,EAAE;QACPyB,MAAM,EAAE;UAAA,OAAM,IAAI;QAAA;MACpB;IAAE,EACF;EAAA,EACkB;AAE1B"},"metadata":{},"sourceType":"module"}