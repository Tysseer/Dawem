{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tysseer Harak\\\\Desktop\\\\Data\\\\Code\\\\React Native\\\\Dawem\\\\app\\\\js\\\\subComponents\\\\BadgesBar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SVGLoader from \"../helpers/SVGLoader\";\n\nvar BadgesBar = function (_Component) {\n  _inherits(BadgesBar, _Component);\n\n  var _super = _createSuper(BadgesBar);\n\n  function BadgesBar(props) {\n    _classCallCheck(this, BadgesBar);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(BadgesBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var svgLoader = this.props.svgLoader;\n      var dayBadge = svgLoader.getDayBadge(!this.props.isBadgeDay);\n      var monthBadge = svgLoader.getMonthBadge(!this.props.isBadgeMonth);\n      var weekBadge = svgLoader.getWeekBadge(!this.props.isBadgeWeek);\n      return React.createElement(View, {\n        style: styles.badgesContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _this.props.onPresses.get(\"day\")();\n        },\n        onLongPress: function onLongPress() {\n          return _this.props.onLongPresses.get(\"day\")();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.badge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, dayBadge)), React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _this.props.onPresses.get(\"month\")();\n        },\n        onLongPress: function onLongPress() {\n          return _this.props.onLongPresses.get(\"month\")();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.badge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, monthBadge)), React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _this.props.onPresses.get(\"week\")();\n        },\n        onLongPress: function onLongPress() {\n          return _this.props.onLongPresses.get(\"week\")();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.badge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, weekBadge)));\n    }\n  }]);\n\n  return BadgesBar;\n}(Component);\n\nBadgesBar.propTypes = {\n  svgLoader: PropTypes.instanceOf(SVGLoader).isRequired,\n  isBadgeDay: PropTypes.bool,\n  isBadgeMonth: PropTypes.bool,\n  isBadgeWeek: PropTypes.bool,\n  onPresses: PropTypes.instanceOf(Map).isRequired,\n  onLongPresses: PropTypes.instanceOf(Map).isRequired\n};\nexport { BadgesBar as default };\nvar styles = StyleSheet.create({\n  badgesContainer: {\n    marginTop: StatusBar.currentHeight + 2,\n    borderColor: \"#ffffffaa\",\n    borderWidth: 2,\n    width: \"100%\",\n    height: 100,\n    flexDirection: \"row\",\n    backgroundColor: \"#666666\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  badge: {\n    width: 80,\n    height: 80,\n    margin: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/subComponents/BadgesBar.js"],"names":["React","Component","PropTypes","SVGLoader","BadgesBar","props","svgLoader","dayBadge","getDayBadge","isBadgeDay","monthBadge","getMonthBadge","isBadgeMonth","weekBadge","getWeekBadge","isBadgeWeek","styles","badgesContainer","onPresses","get","onLongPresses","badge","propTypes","instanceOf","isRequired","bool","Map","StyleSheet","create","marginTop","StatusBar","currentHeight","borderColor","borderWidth","width","height","flexDirection","backgroundColor","justifyContent","alignItems","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  TouchableWithoutFeedback,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport SVGLoader from \"../helpers/SVGLoader\";\r\nexport default class BadgesBar extends Component {\r\n  static propTypes = {\r\n    svgLoader: PropTypes.instanceOf(SVGLoader).isRequired,\r\n    isBadgeDay: PropTypes.bool,\r\n    isBadgeMonth: PropTypes.bool,\r\n    isBadgeWeek: PropTypes.bool,\r\n    onPresses: PropTypes.instanceOf(Map).isRequired,\r\n    onLongPresses: PropTypes.instanceOf(Map).isRequired,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    var svgLoader = this.props.svgLoader;\r\n    var dayBadge = svgLoader.getDayBadge(!this.props.isBadgeDay);\r\n    var monthBadge = svgLoader.getMonthBadge(!this.props.isBadgeMonth);\r\n    var weekBadge = svgLoader.getWeekBadge(!this.props.isBadgeWeek);\r\n    return (\r\n      <View style={styles.badgesContainer}>\r\n        <TouchableWithoutFeedback\r\n          onPress={() => this.props.onPresses.get(\"day\")()}\r\n          onLongPress={() => this.props.onLongPresses.get(\"day\")()}\r\n        >\r\n          <View style={styles.badge}>{dayBadge}</View>\r\n        </TouchableWithoutFeedback>\r\n        <TouchableWithoutFeedback\r\n          onPress={() => this.props.onPresses.get(\"month\")()}\r\n          onLongPress={() => this.props.onLongPresses.get(\"month\")()}\r\n        >\r\n          <View style={styles.badge}>{monthBadge}</View>\r\n        </TouchableWithoutFeedback>\r\n\r\n        <TouchableWithoutFeedback\r\n          onPress={() => this.props.onPresses.get(\"week\")()}\r\n          onLongPress={() => this.props.onLongPresses.get(\"week\")()}\r\n        >\r\n          <View style={styles.badge}>{weekBadge}</View>\r\n        </TouchableWithoutFeedback>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  badgesContainer: {\r\n    marginTop: StatusBar.currentHeight + 2,\r\n    borderColor: \"#ffffffaa\",\r\n    borderWidth: 2,\r\n    width: \"100%\",\r\n    height: 100,\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#666666\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n  },\r\n  badge: {\r\n    width: 80,\r\n    height: 80,\r\n    margin: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}