{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport { useEffect } from \"react\";\nimport Animated, { Easing } from \"react-native-reanimated\";\nimport { State } from \"react-native-gesture-handler\";\nimport { useConst } from \"./Hooks\";\nvar Value = Animated.Value,\n  cond = Animated.cond,\n  eq = Animated.eq,\n  block = Animated.block,\n  set = Animated.set,\n  Clock = Animated.Clock,\n  spring = Animated.spring,\n  startClock = Animated.startClock,\n  stopClock = Animated.stopClock,\n  timing = Animated.timing,\n  neq = Animated.neq,\n  SpringUtils = Animated.SpringUtils;\nvar defaultSpringConfig = SpringUtils.makeDefaultConfig();\nexport var withTransition = function withTransition(value) {\n  var timingConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var gestureState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Value(State.UNDETERMINED);\n  var clock = new Clock();\n  var state = {\n    finished: new Value(0),\n    frameTime: new Value(0),\n    position: new Value(0),\n    time: new Value(0)\n  };\n  var config = _objectSpread({\n    toValue: new Value(0),\n    duration: 250,\n    easing: Easing.linear\n  }, timingConfig);\n  return block([startClock(clock), cond(neq(config.toValue, value), [set(state.frameTime, 0), set(state.time, 0), set(state.finished, 0), set(config.toValue, value), startClock(clock)]), cond(eq(gestureState, State.ACTIVE), [set(state.position, value)], timing(clock, state, config)), cond(state.finished, stopClock(clock)), state.position]);\n};\nexport var withSpringTransition = function withSpringTransition(value) {\n  var springConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultSpringConfig;\n  var velocity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var gestureState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Value(State.UNDETERMINED);\n  var clock = new Clock();\n  var state = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    time: new Value(0)\n  };\n  var config = _objectSpread({\n    toValue: new Value(0),\n    damping: 15,\n    mass: 1,\n    stiffness: 150,\n    overshootClamping: false,\n    restSpeedThreshold: 1,\n    restDisplacementThreshold: 1\n  }, springConfig);\n  return block([startClock(clock), cond(neq(config.toValue, value), [set(state.finished, 0), startClock(clock)]), set(config.toValue, value), cond(eq(gestureState, State.ACTIVE), [set(state.velocity, velocity), set(state.position, value)], spring(clock, state, config)), cond(state.finished, stopClock(clock)), state.position]);\n};\nexport var withTimingTransition = withTransition;\nexport var useTransition = function useTransition(state) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var value = useConst(function () {\n    return new Value(0);\n  });\n  useEffect(function () {\n    value.setValue(typeof state === \"boolean\" ? state ? 1 : 0 : state);\n  }, [value, state]);\n  var transition = useConst(function () {\n    return withTransition(value, config);\n  });\n  return transition;\n};\nexport var useSpringTransition = function useSpringTransition(state) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultSpringConfig;\n  var value = useConst(function () {\n    return new Value(0);\n  });\n  useEffect(function () {\n    value.setValue(typeof state === \"boolean\" ? state ? 1 : 0 : state);\n  }, [value, state]);\n  var transition = useConst(function () {\n    return withSpringTransition(value, config);\n  });\n  return transition;\n};\nexport var useTimingTransition = useTransition;","map":{"version":3,"mappings":"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","names":["useEffect","Animated","Easing","State","useConst","Value","cond","eq","block","set","Clock","spring","startClock","stopClock","timing","neq","SpringUtils","defaultSpringConfig","makeDefaultConfig","withTransition","value","timingConfig","gestureState","UNDETERMINED","clock","state","finished","frameTime","position","time","config","toValue","duration","easing","linear","ACTIVE","withSpringTransition","springConfig","velocity","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","withTimingTransition","useTransition","setValue","transition","useSpringTransition","useTimingTransition"],"sources":["Transitions.ts"],"sourcesContent":["import { useEffect } from \"react\";\nimport Animated, { Easing } from \"react-native-reanimated\";\nimport { State } from \"react-native-gesture-handler\";\n\nimport { SpringConfig, TimingConfig } from \"./Animations\";\nimport { useConst } from \"./Hooks\";\n\nconst {\n  Value,\n  cond,\n  eq,\n  block,\n  set,\n  Clock,\n  spring,\n  startClock,\n  stopClock,\n  timing,\n  neq,\n  SpringUtils,\n} = Animated;\n\nconst defaultSpringConfig = SpringUtils.makeDefaultConfig();\n\nexport const withTransition = (\n  value: Animated.Node<number>,\n  timingConfig: TimingConfig = {},\n  gestureState: Animated.Value<State> = new Value(State.UNDETERMINED)\n) => {\n  const clock = new Clock();\n  const state = {\n    finished: new Value(0),\n    frameTime: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n  };\n  const config = {\n    toValue: new Value(0),\n    duration: 250,\n    easing: Easing.linear,\n    ...timingConfig,\n  };\n  return block([\n    startClock(clock),\n    cond(neq(config.toValue, value), [\n      set(state.frameTime, 0),\n      set(state.time, 0),\n      set(state.finished, 0),\n      set(config.toValue, value),\n      startClock(clock),\n    ]),\n    cond(\n      eq(gestureState, State.ACTIVE),\n      [set(state.position, value)],\n      timing(clock, state, config)\n    ),\n    cond(state.finished, stopClock(clock)),\n    state.position,\n  ]);\n};\n\nexport const withSpringTransition = (\n  value: Animated.Node<number>,\n  springConfig: SpringConfig = defaultSpringConfig,\n  velocity: Animated.Adaptable<number> = 0,\n  gestureState: Animated.Value<State> = new Value(State.UNDETERMINED)\n) => {\n  const clock = new Clock();\n  const state = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n  };\n  const config = {\n    toValue: new Value(0),\n    damping: 15,\n    mass: 1,\n    stiffness: 150,\n    overshootClamping: false,\n    restSpeedThreshold: 1,\n    restDisplacementThreshold: 1,\n    ...springConfig,\n  };\n  return block([\n    startClock(clock),\n    cond(neq(config.toValue, value), [\n      set(state.finished, 0),\n      startClock(clock),\n    ]),\n    set(config.toValue, value),\n    cond(\n      eq(gestureState, State.ACTIVE),\n      [set(state.velocity, velocity), set(state.position, value)],\n      spring(clock, state, config)\n    ),\n    cond(state.finished, stopClock(clock)),\n    state.position,\n  ]);\n};\n\nexport const withTimingTransition = withTransition;\n\nexport const useTransition = (\n  state: boolean | number,\n  config: TimingConfig = {}\n) => {\n  const value: Animated.Value<number> = useConst(() => new Value(0));\n  useEffect(() => {\n    value.setValue(typeof state === \"boolean\" ? (state ? 1 : 0) : state);\n  }, [value, state]);\n  const transition = useConst(() => withTransition(value, config));\n  return transition;\n};\n\nexport const useSpringTransition = (\n  state: boolean | number,\n  config: SpringConfig = defaultSpringConfig\n) => {\n  const value: Animated.Value<number> = useConst(() => new Value(0));\n\n  useEffect(() => {\n    value.setValue(typeof state === \"boolean\" ? (state ? 1 : 0) : state);\n  }, [value, state]);\n\n  const transition = useConst(() => withSpringTransition(value, config));\n  return transition;\n};\n\nexport const useTimingTransition = useTransition;\n"]},"metadata":{},"sourceType":"module"}