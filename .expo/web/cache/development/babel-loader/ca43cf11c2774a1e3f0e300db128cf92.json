{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tysseer Harak\\\\Desktop\\\\Data\\\\Code\\\\React Native\\\\Dawem\\\\app\\\\js\\\\modals\\\\ModalSurahSelector.js\";\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport QuranIndexer from \"../helpers/QuranIndexer\";\n\nvar ModalSurahSelector = function () {\n  function ModalSurahSelector(parent) {\n    _classCallCheck(this, ModalSurahSelector);\n\n    this.parent = parent;\n    this.surahInfo = new QuranIndexer();\n    this.surahInfo.fillArrSurahNamesAr();\n    this.indexes = Array(114).fill(0).map(function (e, i) {\n      return i + 1;\n    });\n    this.selSurah = 0;\n    this.onSelect = null;\n    this.onCancel = null;\n  }\n\n  _createClass(ModalSurahSelector, [{\n    key: \"handlePress\",\n    value: function handlePress() {\n      if (this.onSelect != null) this.onSelect(this.selSurah);\n      this.parent.bShowSurahSelector = false;\n      this.parent.refresh();\n    }\n  }, {\n    key: \"handleCancel\",\n    value: function handleCancel() {\n      if (this.onCancel != null) this.onCancel();\n      this.parent.bShowSurahSelector = false;\n      this.parent.refresh();\n    }\n  }, {\n    key: \"getModal\",\n    value: function getModal() {\n      var _this = this;\n\n      if (this.parent.bShowSurahSelector == false) return null;\n      return React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: this.parent.bShowSurahSelector,\n        onRequestClose: this.handlePress.bind(this),\n        onDismiss: this.handlePress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.contentContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.selectorsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, this.indexes.map(function (iS) {\n        return _this.getSurahBtn(iS);\n      }))), React.createElement(View, {\n        style: styles.toolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.okButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.handlePress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icons/ok_icon.png\"),\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }))), React.createElement(View, {\n        style: styles.okButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.handleCancel.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/icons/back.png\"),\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }))))));\n    }\n  }, {\n    key: \"getSurahBtn\",\n    value: function getSurahBtn(iSurah) {\n      var _this2 = this;\n\n      var bordercol = iSurah == this.selSurah ? {\n        borderColor: \"#540000\"\n      } : {\n        borderColor: \"#545454\"\n      };\n      return React.createElement(View, {\n        style: {\n          margin: 10\n        },\n        key: iSurah + 123,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this2.selectSurah.bind(_this2)(iSurah);\n        },\n        underlayColor: \"#FFFFFF11\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.buttonText, bordercol],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, this.surahInfo.getSurahNameAr(iSurah))));\n    }\n  }, {\n    key: \"selectSurah\",\n    value: function selectSurah(iSurah) {\n      this.selSurah = iSurah;\n      this.parent.refresh();\n    }\n  }, {\n    key: \"getSelSurahName\",\n    value: function getSelSurahName() {\n      if (this.selSurah == 0) return \"Select Surah\";else return this.surahInfo.getSurahNameAr(this.selSurah);\n    }\n  }]);\n\n  return ModalSurahSelector;\n}();\n\nexport { ModalSurahSelector as default };\nvar styles = StyleSheet.create({\n  contentContainer: {\n    width: \"80%\",\n    height: \"80%\",\n    alignSelf: \"center\",\n    marginTop: 110,\n    marginBottom: 20,\n    marginHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    backgroundColor: \"#FFFFFFd5\",\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    borderBottomLeftRadius: 30,\n    borderBottomRightRadius: 30\n  },\n  selectorsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    flexWrap: \"wrap\",\n    direction: \"rtl\",\n    margin: 5,\n    padding: 5\n  },\n  buttonText: {\n    width: Dimensions.get(\"window\").width / 5,\n    borderWidth: 2,\n    backgroundColor: \"#EBEBA4\",\n    fontSize: Dimensions.get(\"window\").width * 20 / 411,\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    color: \"#121212\",\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10\n  },\n  okButton: {\n    alignSelf: \"center\",\n    width: 70,\n    height: 70,\n    marginTop: 30\n  },\n  toolbar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 5,\n    padding: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/modals/ModalSurahSelector.js"],"names":["React","Component","QuranIndexer","ModalSurahSelector","parent","surahInfo","fillArrSurahNamesAr","indexes","Array","fill","map","e","i","selSurah","onSelect","onCancel","bShowSurahSelector","refresh","handlePress","bind","styles","contentContainer","selectorsContainer","iS","getSurahBtn","toolbar","okButton","require","width","height","handleCancel","iSurah","bordercol","borderColor","margin","selectSurah","buttonText","getSurahNameAr","StyleSheet","create","alignSelf","marginTop","marginBottom","marginHorizontal","alignItems","justifyContent","backgroundColor","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","flex","flexDirection","alignContent","flexWrap","direction","padding","Dimensions","get","borderWidth","fontSize","fontFamily","textAlign","fontWeight","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;AAYA,OAAOC,YAAP;;IACqBC,kB;AACnB,8BAAYC,MAAZ,EAAwE;AAAA;;AACtE,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiB,IAAIH,YAAJ,EAAjB;AACA,SAAKG,SAAL,CAAeC,mBAAf;AACA,SAAKC,OAAL,GAAeC,KAAK,CAAC,GAAD,CAAL,CACZC,IADY,CACP,CADO,EAEZC,GAFY,CAER,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAC,GAAG,CAAd;AAAA,KAFQ,CAAf;AAIA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACD;;;;kCACa;AAEZ,UAAI,KAAKD,QAAL,IAAiB,IAArB,EAA2B,KAAKA,QAAL,CAAc,KAAKD,QAAnB;AAC3B,WAAKT,MAAL,CAAYY,kBAAZ,GAAiC,KAAjC;AACA,WAAKZ,MAAL,CAAYa,OAAZ;AACD;;;mCACc;AAEb,UAAI,KAAKF,QAAL,IAAiB,IAArB,EAA2B,KAAKA,QAAL;AAC3B,WAAKX,MAAL,CAAYY,kBAAZ,GAAiC,KAAjC;AACA,WAAKZ,MAAL,CAAYa,OAAZ;AACD;;;+BACU;AAAA;;AACT,UAAI,KAAKb,MAAL,CAAYY,kBAAZ,IAAkC,KAAtC,EAA6C,OAAO,IAAP;AAC7C,aACE,oBAAC,KAAD;AACE,QAAA,aAAa,EAAC,MADhB;AAEE,QAAA,WAAW,EAAE,IAFf;AAGE,QAAA,OAAO,EAAE,KAAKZ,MAAL,CAAYY,kBAHvB;AAIE,QAAA,cAAc,EAAE,KAAKE,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAJlB;AAKE,QAAA,SAAS,EAAE,KAAKD,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKf,OAAL,CAAaG,GAAb,CAAiB,UAACa,EAAD;AAAA,eAAQ,KAAI,CAACC,WAAL,CAAiBD,EAAjB,CAAR;AAAA,OAAjB,CADH,CADF,CADF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKR,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAEQ,OAAO,kCADjB;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACM,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKI,YAAL,CAAkBX,IAAlB,CAAuB,IAAvB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAEQ,OAAO,+BADjB;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CATF,CAPF,CAPF,CADF;AAoCD;;;gCACWE,M,EAAQ;AAAA;;AAClB,UAAIC,SAAS,GACXD,MAAM,IAAI,KAAKlB,QAAf,GACI;AAAEoB,QAAAA,WAAW,EAAE;AAAf,OADJ,GAEI;AAAEA,QAAAA,WAAW,EAAE;AAAf,OAHN;AAIA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAb;AAA6B,QAAA,GAAG,EAAEH,MAAM,GAAG,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,kBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACI,WAAL,CAAiBhB,IAAjB,CAAsB,MAAtB,EAA4BY,MAA5B,CAAN;AAAA,SADX;AAEE,QAAA,aAAa,EAAC,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACX,MAAM,CAACgB,UAAR,EAAoBJ,SAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK3B,SAAL,CAAegC,cAAf,CAA8BN,MAA9B,CADH,CAJF,CADF,CADF;AAYD;;;gCACWA,M,EAAQ;AAClB,WAAKlB,QAAL,GAAgBkB,MAAhB;AACA,WAAK3B,MAAL,CAAYa,OAAZ;AACD;;;sCACiB;AAChB,UAAI,KAAKJ,QAAL,IAAiB,CAArB,EAAwB,OAAO,cAAP,CAAxB,KACK,OAAO,KAAKR,SAAL,CAAegC,cAAf,CAA8B,KAAKxB,QAAnC,CAAP;AACN;;;;;;SAzFkBV,kB;AA2FrB,IAAMiB,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC/BlB,EAAAA,gBAAgB,EAAE;AAChBO,IAAAA,KAAK,EAAE,KADS;AAEhBC,IAAAA,MAAM,EAAE,KAFQ;AAGhBW,IAAAA,SAAS,EAAE,QAHK;AAIhBC,IAAAA,SAAS,EAAE,GAJK;AAKhBC,IAAAA,YAAY,EAAE,EALE;AAMhBC,IAAAA,gBAAgB,EAAE,EANF;AAOhBC,IAAAA,UAAU,EAAE,QAPI;AAQhBC,IAAAA,cAAc,EAAE,cARA;AAShBC,IAAAA,eAAe,EAAE,WATD;AAUhBC,IAAAA,mBAAmB,EAAE,EAVL;AAWhBC,IAAAA,oBAAoB,EAAE,EAXN;AAYhBC,IAAAA,sBAAsB,EAAE,EAZR;AAahBC,IAAAA,uBAAuB,EAAE;AAbT,GADa;AAgB/B5B,EAAAA,kBAAkB,EAAE;AAClB6B,IAAAA,IAAI,EAAE,CADY;AAElBC,IAAAA,aAAa,EAAE,KAFG;AAGlBR,IAAAA,UAAU,EAAE,QAHM;AAIlBC,IAAAA,cAAc,EAAE,QAJE;AAKlBQ,IAAAA,YAAY,EAAE,QALI;AAMlBC,IAAAA,QAAQ,EAAE,MANQ;AAOlBC,IAAAA,SAAS,EAAE,KAPO;AAQlBrB,IAAAA,MAAM,EAAE,CARU;AASlBsB,IAAAA,OAAO,EAAE;AATS,GAhBW;AA4B/BpB,EAAAA,UAAU,EAAE;AACVR,IAAAA,KAAK,EAAE6B,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyB9B,KAAzB,GAAiC,CAD9B;AAEV+B,IAAAA,WAAW,EAAE,CAFH;AAGVb,IAAAA,eAAe,EAAE,SAHP;AAIVc,IAAAA,QAAQ,EAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyB9B,KAAzB,GAAiC,EAAlC,GAAwC,GAJxC;AAKViC,IAAAA,UAAU,EAAE,YALF;AAMVC,IAAAA,SAAS,EAAE,QAND;AAOVC,IAAAA,UAAU,EAAE,MAPF;AAQVC,IAAAA,KAAK,EAAE,SARG;AASVjB,IAAAA,mBAAmB,EAAE,EATX;AAUVC,IAAAA,oBAAoB,EAAE,EAVZ;AAWVC,IAAAA,sBAAsB,EAAE,EAXd;AAYVC,IAAAA,uBAAuB,EAAE;AAZf,GA5BmB;AA0C/BxB,EAAAA,QAAQ,EAAE;AACRc,IAAAA,SAAS,EAAE,QADH;AAERZ,IAAAA,KAAK,EAAE,EAFC;AAGRC,IAAAA,MAAM,EAAE,EAHA;AAIRY,IAAAA,SAAS,EAAE;AAJH,GA1CqB;AAgD/BhB,EAAAA,OAAO,EAAE;AACP2B,IAAAA,aAAa,EAAE,KADR;AAEPR,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPX,IAAAA,MAAM,EAAE,CAJD;AAKPsB,IAAAA,OAAO,EAAE;AALF;AAhDsB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Modal,\r\n  Text,\r\n  TouchableHighlight,\r\n  ScrollView,\r\n  Dimensions,\r\n  TouchableWithoutFeedback,\r\n  Image,\r\n} from \"react-native\";\r\nimport QuranIndexer from \"../helpers/QuranIndexer\";\r\nexport default class ModalSurahSelector {\r\n  constructor(parent /* should have .bShowSurahSelector and .refresh()*/) {\r\n    this.parent = parent;\r\n    this.surahInfo = new QuranIndexer();\r\n    this.surahInfo.fillArrSurahNamesAr();\r\n    this.indexes = Array(114)\r\n      .fill(0)\r\n      .map((e, i) => i + 1);\r\n\r\n    this.selSurah = 0;\r\n    this.onSelect = null;\r\n    this.onCancel = null;\r\n  }\r\n  handlePress() {\r\n    //this.parent.setState({ bShowSurahSelector: false });\r\n    if (this.onSelect != null) this.onSelect(this.selSurah);\r\n    this.parent.bShowSurahSelector = false;\r\n    this.parent.refresh();\r\n  }\r\n  handleCancel() {\r\n    //this.parent.setState({ bShowSurahSelector: false });\r\n    if (this.onCancel != null) this.onCancel();\r\n    this.parent.bShowSurahSelector = false;\r\n    this.parent.refresh();\r\n  }\r\n  getModal() {\r\n    if (this.parent.bShowSurahSelector == false) return null;\r\n    return (\r\n      <Modal\r\n        animationType=\"fade\"\r\n        transparent={true}\r\n        visible={this.parent.bShowSurahSelector}\r\n        onRequestClose={this.handlePress.bind(this)}\r\n        onDismiss={this.handlePress.bind(this)}\r\n      >\r\n        <View style={styles.contentContainer}>\r\n          <ScrollView>\r\n            <View style={styles.selectorsContainer}>\r\n              {this.indexes.map((iS) => this.getSurahBtn(iS))}\r\n            </View>\r\n          </ScrollView>\r\n\r\n          <View style={styles.toolbar}>\r\n            <View style={styles.okButton}>\r\n              <TouchableWithoutFeedback onPress={this.handlePress.bind(this)}>\r\n                <Image\r\n                  source={require(\"../../assets/icons/ok_icon.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableWithoutFeedback>\r\n            </View>\r\n            <View style={styles.okButton}>\r\n              <TouchableWithoutFeedback onPress={this.handleCancel.bind(this)}>\r\n                <Image\r\n                  source={require(\"../../assets/icons/back.png\")}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                />\r\n              </TouchableWithoutFeedback>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    );\r\n  }\r\n  getSurahBtn(iSurah) {\r\n    var bordercol =\r\n      iSurah == this.selSurah\r\n        ? { borderColor: \"#540000\" }\r\n        : { borderColor: \"#545454\" };\r\n    return (\r\n      <View style={{ margin: 10 }} key={iSurah + 123}>\r\n        <TouchableHighlight\r\n          onPress={() => this.selectSurah.bind(this)(iSurah)}\r\n          underlayColor=\"#FFFFFF11\"\r\n        >\r\n          <Text style={[styles.buttonText, bordercol]}>\r\n            {this.surahInfo.getSurahNameAr(iSurah)}\r\n          </Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    );\r\n  }\r\n  selectSurah(iSurah) {\r\n    this.selSurah = iSurah;\r\n    this.parent.refresh(); //this.parent.setState({ bShowSurahSelector: true }); // just to render\r\n  }\r\n  getSelSurahName() {\r\n    if (this.selSurah == 0) return \"Select Surah\";\r\n    else return this.surahInfo.getSurahNameAr(this.selSurah);\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  contentContainer: {\r\n    width: \"80%\",\r\n    height: \"80%\",\r\n    alignSelf: \"center\",\r\n    marginTop: 110,\r\n    marginBottom: 20,\r\n    marginHorizontal: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    backgroundColor: \"#FFFFFFd5\",\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    borderBottomLeftRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n  },\r\n  selectorsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    direction: \"rtl\",\r\n    margin: 5,\r\n    padding: 5,\r\n  },\r\n\r\n  buttonText: {\r\n    width: Dimensions.get(\"window\").width / 5,\r\n    borderWidth: 2,\r\n    backgroundColor: \"#EBEBA4\",\r\n    fontSize: (Dimensions.get(\"window\").width * 20) / 411,\r\n    fontFamily: \"sans-serif\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    color: \"#121212\",\r\n    borderTopLeftRadius: 10,\r\n    borderTopRightRadius: 10,\r\n    borderBottomLeftRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n  },\r\n  okButton: {\r\n    alignSelf: \"center\",\r\n    width: 70,\r\n    height: 70,\r\n    marginTop: 30,\r\n  },\r\n  toolbar: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 5,\r\n    padding: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}