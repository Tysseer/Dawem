{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { Fragment, memo, useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UPDATE_REVISION } from \"../../../redux/reduxActions\";\nimport Center from \"../../../../components/Center\";\nimport SVGLoader from \"../../../helpers/SVGLoader\";\nimport { convertToArabicNumbers } from \"../../../helpers/scripts\";\nimport QuranIndexer from \"../../../helpers/QuranIndexer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar coloredList = ['ٱللَّهَ', 'لِلَّهِ', 'ٱللَّهِ', 'ٱللَّهُ', 'ٱللَّهَ'];\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar quranFont = (width - 30) * 0.045;\nvar quranLineHeight = quranFont * 1.82;\nvar ayaNumSize = quranFont * 1.3;\nvar RenderAyat = function RenderAyat(_ref) {\n  var ayat = _ref.ayat,\n    shortTxt = _ref.shortTxt,\n    localSurahIndx = _ref.localSurahIndx,\n    localAyahIndx = _ref.localAyahIndx;\n  var svgLoader = new SVGLoader();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    markedAyah = _useState2[0],\n    setMarkedAyah = _useState2[1];\n  var quranIndexer = new QuranIndexer();\n  var reduxState = useSelector(function (state) {\n    return state;\n  });\n  var dispatch = useDispatch();\n  var getNumBg = function getNumBg(num, idx) {\n    if (convertToArabicNumbers(num, 'ltr') == markedAyah && idx == localSurahIndx) return '#ff0';\n  };\n  var onAyahLongPress = function onAyahLongPress(iAyah, iSurah) {\n    if (iSurah == localSurahIndx) {\n      var engNum = convertToArabicNumbers(iAyah, 'ltr');\n      setMarkedAyah(engNum);\n      var globalAyah = quranIndexer.getAyahGlobalIndx(iSurah, +engNum);\n      handleRevProgress(globalAyah);\n    }\n  };\n  var handleRevProgress = function handleRevProgress(iAyah) {\n    if (reduxState.curRevision == null) return;\n    reduxState.curRevision.updateProgress(iAyah);\n    if (reduxState.curRevision.progress >= 100) {\n      reduxState.curRevision.makeRevisionDateNow();\n    }\n    var updateRev = function updateRev(state) {\n      return dispatch({\n        type: UPDATE_REVISION,\n        payload: state.curRevision\n      });\n    };\n    updateRev(reduxState);\n  };\n  var renderContent = function renderContent() {\n    return ayat.map(function (ayah) {\n      return _jsxs(Fragment, {\n        children: [ayah.words.length > 0 && ayah.words.map(function (word) {\n          return _jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.ayah), {}, {\n              color: coloredList.includes(word) && 'red',\n              flexGrow: !shortTxt ? 1 : 0,\n              paddingHorizontal: shortTxt && 3\n            }),\n            children: word.trim()\n          }, Math.random().toString());\n        }), ayah.num && _jsx(Center, {\n          style: {\n            paddingHorizontal: 2\n          },\n          children: _jsx(TouchableOpacity, {\n            activeOpacity: 0.7,\n            onLongPress: function onLongPress() {\n              return onAyahLongPress(ayah.num, ayah.surahIndex);\n            },\n            disabled: ayah.surahIndex !== localSurahIndx,\n            style: {\n              backgroundColor: getNumBg(ayah.num, ayah.surahIndex)\n            },\n            children: svgLoader.getSurahNumBorder(ayah.num, ayaNumSize)\n          })\n        })]\n      }, Math.random().toString());\n    });\n  };\n  useEffect(function () {\n    setMarkedAyah(localAyahIndx);\n  }, [localAyahIndx]);\n  return renderContent();\n};\nexport default memo(RenderAyat);\nvar styles = StyleSheet.create({\n  ayah: {\n    fontSize: quranFont,\n    lineHeight: quranLineHeight,\n    flexGrow: 1,\n    textAlign: 'center',\n    fontFamily: 'UthmanicHafs'\n  }\n});","map":{"version":3,"names":["React","Fragment","memo","useEffect","useState","useSelector","useDispatch","UPDATE_REVISION","Center","SVGLoader","convertToArabicNumbers","QuranIndexer","coloredList","Dimensions","get","width","height","quranFont","quranLineHeight","ayaNumSize","RenderAyat","ayat","shortTxt","localSurahIndx","localAyahIndx","svgLoader","markedAyah","setMarkedAyah","quranIndexer","reduxState","state","dispatch","getNumBg","num","idx","onAyahLongPress","iAyah","iSurah","engNum","globalAyah","getAyahGlobalIndx","handleRevProgress","curRevision","updateProgress","progress","makeRevisionDateNow","updateRev","type","payload","renderContent","map","ayah","words","length","word","styles","color","includes","flexGrow","paddingHorizontal","trim","Math","random","toString","surahIndex","backgroundColor","getSurahNumBorder","StyleSheet","create","fontSize","lineHeight","textAlign","fontFamily"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/screens/MushafScreen/comp/RenderAyat.jsx"],"sourcesContent":["import React, { Fragment, memo, useEffect, useState } from 'react';\r\nimport {\r\n  Dimensions,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from 'react-native';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {UPDATE_REVISION} from \"app/js/redux/reduxActions\";\r\n\r\nimport Center from 'app/components/Center';\r\nimport SVGLoader from 'app/js/helpers/SVGLoader';\r\nimport { convertToArabicNumbers } from 'app/js/helpers/scripts';\r\nimport QuranIndexer from 'app/js/helpers/QuranIndexer';\r\n\r\nconst coloredList = [\r\n  // 'رَبَّكُمُ',\r\n  'ٱللَّهَ',\r\n  'لِلَّهِ',\r\n  'ٱللَّهِ',\r\n  'ٱللَّهُ',\r\n  // 'بِٱللَّهِ',\r\n  // 'رَبُّكَ',\r\n  'ٱللَّهَ',\r\n];\r\n\r\nconst { width,height } = Dimensions.get('window');\r\nconst quranFont = (width-30)*0.045;//Math.max(10,width*0.054);\r\nconst quranLineHeight = quranFont*1.82;\r\nconst ayaNumSize = quranFont*1.3;//Math.max(22,height/26);\r\nconst RenderAyat = ({ ayat, shortTxt, localSurahIndx, localAyahIndx }) => {\r\n  const svgLoader = new SVGLoader();\r\n  const [markedAyah, setMarkedAyah] = useState();\r\n\r\n  var quranIndexer = new QuranIndexer();\r\n  // quranIndexer.f;\r\n  const reduxState = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n \r\n  const getNumBg = (num, idx) => {\r\n    if (\r\n      convertToArabicNumbers(num, 'ltr') == markedAyah &&\r\n      idx == localSurahIndx\r\n    )\r\n      return '#ff0';\r\n  };\r\n\r\n  const onAyahLongPress = (iAyah /*local */, iSurah) => {\r\n    if (iSurah == localSurahIndx) {\r\n      var engNum = convertToArabicNumbers(iAyah, 'ltr');\r\n      setMarkedAyah(engNum);\r\n      var globalAyah = quranIndexer.getAyahGlobalIndx(iSurah, +engNum);\r\n      handleRevProgress(globalAyah);\r\n    }\r\n  };\r\n\r\n  const handleRevProgress = (iAyah) => {\r\n    if(reduxState.curRevision==null) return;\r\n    reduxState.curRevision.updateProgress(iAyah);\r\n    if (reduxState.curRevision.progress >= 100) {\r\n      reduxState.curRevision.makeRevisionDateNow();\r\n     // reduxState.revisionsManager.sortRevisions();\r\n    }\r\n\r\n    const updateRev = state => dispatch({ type: UPDATE_REVISION, payload:   state.curRevision});\r\n    updateRev(reduxState);\r\n  };\r\n\r\n  const renderContent = () =>\r\n    ayat.map((ayah) => {\r\n      return (\r\n        <Fragment key={Math.random().toString()}>\r\n          {ayah.words.length > 0 &&\r\n            ayah.words.map((word) => {\r\n              return (\r\n                <Text\r\n                  key={Math.random().toString()}\r\n                  style={{\r\n                    ...styles.ayah,\r\n                    color: coloredList.includes(word) && 'red',\r\n                    flexGrow: !shortTxt ? 1 : 0,\r\n                    paddingHorizontal: shortTxt && 3,\r\n                  }}\r\n                >\r\n                  {word.trim()}\r\n                </Text>\r\n              );\r\n            })}\r\n          {ayah.num && (\r\n            <Center\r\n              style={{\r\n                paddingHorizontal: 2,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                activeOpacity={0.7}\r\n                onLongPress={() => onAyahLongPress(ayah.num, ayah.surahIndex)}\r\n                disabled={ayah.surahIndex !== localSurahIndx}\r\n                style={{\r\n                  backgroundColor: getNumBg(ayah.num, ayah.surahIndex),\r\n                }}\r\n              >\r\n                \r\n                {svgLoader.getSurahNumBorder(ayah.num, ayaNumSize)}\r\n               \r\n              </TouchableOpacity>\r\n            </Center>\r\n          )}\r\n        </Fragment>\r\n      );\r\n    });\r\n\r\n  useEffect(() => {\r\n    setMarkedAyah(localAyahIndx);\r\n  }, [localAyahIndx]);\r\n\r\n  return renderContent();\r\n};\r\n\r\nexport default memo(RenderAyat);\r\n\r\nconst styles = StyleSheet.create({\r\n  ayah: {\r\n    fontSize: quranFont,\r\n    lineHeight:quranLineHeight,\r\n    flexGrow: 1,\r\n    textAlign: 'center',\r\n    fontFamily: 'UthmanicHafs',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}