{"ast":null,"code":"import RevisionsManager from \"../helpers/RevisionsManager\";\nimport * as allActions from \"./reduxActions\";\nimport INITIAL_STATE from \"./reduxState\";\nimport { REHYDRATE } from \"redux-persist\";\nvar actionsReducer = function actionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var bIsFirstRun = state.bIsFirstRun,\n    bSkipWelcome = state.bSkipWelcome,\n    strLang = state.strLang,\n    revisions = state.revisions,\n    curRevision = state.curRevision,\n    bDailyNotification = state.bDailyNotification;\n  switch (action.type) {\n    case REHYDRATE:\n      {\n        var newState = {\n          bIsFirstRun: bIsFirstRun,\n          bSkipWelcome: bSkipWelcome,\n          strLang: strLang,\n          revisions: revisions,\n          curRevision: curRevision,\n          bDailyNotification: bDailyNotification\n        };\n        return newState;\n      }\n    case allActions.APP_FIRST_RUN_FLAG:\n      {\n        var newflag = action.payload;\n        var _newState = {\n          bIsFirstRun: bIsFirstRun,\n          bIsFirstRun: newflag,\n          bSkipWelcome: bSkipWelcome,\n          strLang: strLang,\n          revisions: revisions,\n          curRevision: curRevision,\n          bDailyNotification: newflag\n        };\n        return _newState;\n      }\n    case allActions.DAILY_NOTIFICATION_FLAG:\n      {\n        var _newflag = action.payload;\n        var _newState2 = {\n          bIsFirstRun: _newflag,\n          bSkipWelcome: bSkipWelcome,\n          strLang: strLang,\n          revisions: revisions,\n          curRevision: curRevision,\n          bDailyNotification: bDailyNotification\n        };\n        return _newState2;\n      }\n    case allActions.SKIP_WELCOME_FLAG:\n      {\n        var _newflag2 = action.payload;\n        var _newState3 = {\n          bIsFirstRun: bIsFirstRun,\n          bSkipWelcome: _newflag2,\n          strLang: strLang,\n          revisions: revisions,\n          curRevision: curRevision,\n          bDailyNotification: bDailyNotification\n        };\n        return _newState3;\n      }\n    case allActions.LANGUAGE:\n      {\n        var newlang = action.payload;\n        var _newState4 = {\n          bIsFirstRun: bIsFirstRun,\n          bSkipWelcome: bSkipWelcome,\n          strLang: newlang,\n          revisions: revisions,\n          curRevision: curRevision,\n          bDailyNotification: bDailyNotification\n        };\n        return _newState4;\n      }\n    case allActions.SET_CUR_REVISION:\n      {\n        var rev = action.payload;\n        var _newState5 = {\n          bIsFirstRun: bIsFirstRun,\n          bSkipWelcome: bSkipWelcome,\n          strLang: strLang,\n          revisions: revisions,\n          curRevision: rev,\n          bDailyNotification: bDailyNotification\n        };\n        return _newState5;\n      }\n    case allActions.ADD_REVISION:\n      {\n        var _rev = action.payload;\n        var newRevArr = revisions.concat([_rev]);\n        var revisionsManager = new RevisionsManager();\n        revisionsManager.m_loadedRevisions = newRevArr;\n        newRevArr = revisionsManager.m_loadedRevisions;\n        var _newState6 = {\n          bIsFirstRun: bIsFirstRun,\n          bSkipWelcome: bSkipWelcome,\n          strLang: strLang,\n          revisions: newRevArr,\n          curRevision: null,\n          bDailyNotification: bDailyNotification\n        };\n        return _newState6;\n      }\n    case allActions.ADD_MULTIPLE_REVISIONS:\n      {\n        var revs = action.payload;\n        var newRevArr = revisions.concat(revs);\n        var revisionsManager = new RevisionsManager();\n        revisionsManager.m_loadedRevisions = newRevArr;\n        revisionsManager.sortRevisions();\n        newRevArr = revisionsManager.m_loadedRevisions;\n        var _newState7 = {\n          bIsFirstRun: bIsFirstRun,\n          bSkipWelcome: bSkipWelcome,\n          strLang: strLang,\n          revisions: newRevArr,\n          curRevision: null,\n          bDailyNotification: bDailyNotification\n        };\n        return _newState7;\n      }\n    case allActions.UPDATE_REVISION:\n    case allActions.DEL_REVISION:\n      {\n        var _rev2 = action.payload;\n        var newRevArr = [];\n        for (var i = 0; i < revisions.length; i++) {\n          if (revisions[i].id != _rev2.id) {\n            newRevArr.push(revisions[i]);\n            continue;\n          } else {\n            if (action.type == allActions.UPDATE_REVISION) newRevArr.push(_rev2);\n          }\n        }\n        var revisionsManager = new RevisionsManager();\n        revisionsManager.m_loadedRevisions = newRevArr;\n        newRevArr = revisionsManager.m_loadedRevisions;\n        var _newState8 = {\n          bIsFirstRun: bIsFirstRun,\n          bSkipWelcome: bSkipWelcome,\n          strLang: strLang,\n          revisions: newRevArr,\n          curRevision: null,\n          bDailyNotification: bDailyNotification\n        };\n        return _newState8;\n      }\n    case allActions.DEL_ِِALL_REVISIONS:\n      {\n        var newRevArr = [];\n        var _newState9 = {\n          bIsFirstRun: bIsFirstRun,\n          bSkipWelcome: bSkipWelcome,\n          strLang: strLang,\n          revisions: newRevArr,\n          curRevision: null,\n          bDailyNotification: bDailyNotification\n        };\n        return _newState9;\n      }\n    case allActions.RESET_ِِALL_REVISIONS:\n      {\n        var newRevArr = [];\n        for (var i = 0; i < revisions.length; i++) {\n          newRevArr.push(revisions[i]);\n          newRevArr[i].makeRevisionDateNow();\n        }\n        var _newState10 = {\n          bIsFirstRun: bIsFirstRun,\n          bSkipWelcome: bSkipWelcome,\n          strLang: strLang,\n          revisions: newRevArr,\n          curRevision: null,\n          bDailyNotification: bDailyNotification\n        };\n        return _newState10;\n      }\n    default:\n      return state;\n  }\n};\nexport default actionsReducer;","map":{"version":3,"names":["RevisionsManager","allActions","INITIAL_STATE","REHYDRATE","actionsReducer","state","action","bIsFirstRun","bSkipWelcome","strLang","revisions","curRevision","bDailyNotification","type","newState","APP_FIRST_RUN_FLAG","newflag","payload","DAILY_NOTIFICATION_FLAG","SKIP_WELCOME_FLAG","LANGUAGE","newlang","SET_CUR_REVISION","rev","ADD_REVISION","newRevArr","concat","revisionsManager","m_loadedRevisions","ADD_MULTIPLE_REVISIONS","revs","sortRevisions","UPDATE_REVISION","DEL_REVISION","i","length","id","push","DEL_ِِALL_REVISIONS","RESET_ِِALL_REVISIONS","makeRevisionDateNow"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/redux/reducer.js"],"sourcesContent":["import RevisionsManager from \"../helpers/RevisionsManager\";\r\nimport * as allActions from \"./reduxActions\";\r\nimport INITIAL_STATE from \"./reduxState\";\r\nimport { REHYDRATE } from \"redux-persist\";\r\nconst actionsReducer = (state = INITIAL_STATE, action) => {\r\n  const {\r\n    bIsFirstRun,\r\n    bSkipWelcome,\r\n    strLang,\r\n    revisions,\r\n    curRevision,\r\n    bDailyNotification,\r\n  } = state;\r\n  switch (action.type) {\r\n    case REHYDRATE: {\r\n      const newState = {\r\n        bIsFirstRun: bIsFirstRun,\r\n        bSkipWelcome: bSkipWelcome,\r\n        strLang: strLang,\r\n        revisions: revisions,\r\n        curRevision: curRevision,\r\n        bDailyNotification: bDailyNotification,\r\n      };\r\n\r\n      return newState;\r\n    }\r\n    case allActions.APP_FIRST_RUN_FLAG: {\r\n      const newflag = action.payload;\r\n      const newState = {\r\n        bIsFirstRun: bIsFirstRun,\r\n        bIsFirstRun: newflag,\r\n        bSkipWelcome: bSkipWelcome,\r\n        strLang: strLang,\r\n        revisions: revisions,\r\n        curRevision: curRevision,\r\n        bDailyNotification: newflag,\r\n      };\r\n      return newState;\r\n    }\r\n    case allActions.DAILY_NOTIFICATION_FLAG: {\r\n      const newflag = action.payload;\r\n      const newState = {\r\n        bIsFirstRun: newflag,\r\n        bSkipWelcome: bSkipWelcome,\r\n        strLang: strLang,\r\n        revisions: revisions,\r\n        curRevision: curRevision,\r\n        bDailyNotification: bDailyNotification,\r\n      };\r\n      return newState;\r\n    }\r\n    case allActions.SKIP_WELCOME_FLAG: {\r\n      const newflag = action.payload;\r\n      const newState = {\r\n        bIsFirstRun: bIsFirstRun,\r\n        bSkipWelcome: newflag,\r\n        strLang: strLang,\r\n        revisions: revisions,\r\n        curRevision: curRevision,\r\n        bDailyNotification: bDailyNotification,\r\n      };\r\n      return newState;\r\n    }\r\n    case allActions.LANGUAGE: {\r\n      const newlang = action.payload;\r\n      const newState = {\r\n        bIsFirstRun: bIsFirstRun,\r\n        bSkipWelcome: bSkipWelcome,\r\n        strLang: newlang,\r\n        revisions: revisions,\r\n        curRevision: curRevision,\r\n        bDailyNotification: bDailyNotification,\r\n      };\r\n      return newState;\r\n    }\r\n    case allActions.SET_CUR_REVISION: {\r\n      const rev = action.payload;\r\n      const newState = {\r\n        bIsFirstRun: bIsFirstRun,\r\n        bSkipWelcome: bSkipWelcome,\r\n        strLang: strLang,\r\n        revisions: revisions,\r\n        curRevision: rev,\r\n        bDailyNotification: bDailyNotification,\r\n      };\r\n      return newState;\r\n    }\r\n    case allActions.ADD_REVISION: {\r\n      const rev = action.payload;\r\n      var newRevArr = revisions.concat([rev]);\r\n      var revisionsManager = new RevisionsManager();\r\n      revisionsManager.m_loadedRevisions = newRevArr;\r\n      // revisionsManager.sortRevisions();\r\n      newRevArr = revisionsManager.m_loadedRevisions;\r\n      const newState = {\r\n        bIsFirstRun: bIsFirstRun,\r\n        bSkipWelcome: bSkipWelcome,\r\n        strLang: strLang,\r\n        revisions: newRevArr,\r\n        curRevision: null,\r\n        bDailyNotification: bDailyNotification,\r\n      };\r\n\r\n      return newState;\r\n    }\r\n    case allActions.ADD_MULTIPLE_REVISIONS: {\r\n      const revs = action.payload;\r\n      var newRevArr = revisions.concat(revs);\r\n\r\n      var revisionsManager = new RevisionsManager();\r\n      revisionsManager.m_loadedRevisions = newRevArr;\r\n      revisionsManager.sortRevisions();\r\n      newRevArr = revisionsManager.m_loadedRevisions;\r\n      const newState = {\r\n        bIsFirstRun: bIsFirstRun,\r\n        bSkipWelcome: bSkipWelcome,\r\n        strLang: strLang,\r\n        revisions: newRevArr,\r\n        curRevision: null,\r\n        bDailyNotification: bDailyNotification,\r\n      };\r\n\r\n      return newState;\r\n    }\r\n    case allActions.UPDATE_REVISION:\r\n    case allActions.DEL_REVISION: {\r\n      // todo: replace push with splice or more efficient way\r\n      const rev = action.payload;\r\n\r\n      var newRevArr = [];\r\n      for (var i = 0; i < revisions.length; i++) {\r\n        if (revisions[i].id != rev.id) {\r\n          newRevArr.push(revisions[i]); //currev[i].clone()\r\n          continue;\r\n        } else {\r\n          if (action.type == allActions.UPDATE_REVISION) newRevArr.push(rev); //rev.clone()\r\n        }\r\n      }\r\n\r\n      var revisionsManager = new RevisionsManager();\r\n      revisionsManager.m_loadedRevisions = newRevArr;\r\n      //revisionsManager.sortRevisions();\r\n      newRevArr = revisionsManager.m_loadedRevisions;\r\n      const newState = {\r\n        bIsFirstRun: bIsFirstRun,\r\n        bSkipWelcome: bSkipWelcome,\r\n        strLang: strLang,\r\n        revisions: newRevArr,\r\n        curRevision: null,\r\n        bDailyNotification: bDailyNotification,\r\n      };\r\n      return newState;\r\n    }\r\n    case allActions.DEL_ِِALL_REVISIONS: {\r\n      var newRevArr = [];\r\n      const newState = {\r\n        bIsFirstRun: bIsFirstRun,\r\n        bSkipWelcome: bSkipWelcome,\r\n        strLang: strLang,\r\n        revisions: newRevArr,\r\n        curRevision: null,\r\n        bDailyNotification: bDailyNotification,\r\n      };\r\n      return newState;\r\n    }\r\n    case allActions.RESET_ِِALL_REVISIONS: {\r\n      var newRevArr = [];\r\n      for (var i = 0; i < revisions.length; i++) {\r\n        newRevArr.push(revisions[i]); //currev[i].clone()\r\n        newRevArr[i].makeRevisionDateNow();\r\n      }\r\n      const newState = {\r\n        bIsFirstRun: bIsFirstRun,\r\n        bSkipWelcome: bSkipWelcome,\r\n        strLang: strLang,\r\n        revisions: newRevArr,\r\n        curRevision: null,\r\n        bDailyNotification: bDailyNotification,\r\n      };\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default actionsReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}