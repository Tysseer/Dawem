{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { getTitleFontBasicStyle, getLargeContentFontBasicStyle, getContentFontBasicStyle } from \"../helpers/scripts\";\nimport { colors } from \"../../constants\";\nimport * as qstrings from \"../helpers/QuranicAssistantStrings\";\nimport QuranicAssistant from \"../helpers/QuranicAssistant\";\nimport * as msgs from \"../helpers/Messages\";\nimport Screen from \"../../components/Screen\";\nimport { reduxActionAddRevision } from \"../redux/reduxActions\";\nimport Revision from \"../helpers/Revision\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  height = _Dimensions$get.height,\n  width = _Dimensions$get.width;\nvar height18 = height / 18;\nvar height50 = height / 50;\nvar ActionMessage = function () {\n  function ActionMessage(scr, strAction) {\n    _classCallCheck(this, ActionMessage);\n    this.screen = scr;\n    this.strAction = strAction;\n  }\n  _createClass(ActionMessage, [{\n    key: \"applyAction\",\n    value: function applyAction() {\n      if (this.strAction == \"EnableChat\") this.screen.userChatEnabled = true;\n      if (this.strAction == \"DisableChat\") this.screen.userChatEnabled = false;\n    }\n  }]);\n  return ActionMessage;\n}();\nvar ScreenQuranicAssistant = function (_Component) {\n  _inherits(ScreenQuranicAssistant, _Component);\n  var _super = _createSuper(ScreenQuranicAssistant);\n  function ScreenQuranicAssistant(props) {\n    var _this;\n    _classCallCheck(this, ScreenQuranicAssistant);\n    _this = _super.call(this, props);\n    _this.getContentFontBasicStyle = getContentFontBasicStyle(_this.props.strLang);\n    _this.getLargeContentFontBasicStyle = getLargeContentFontBasicStyle(_this.props.strLang);\n    _this.userTxt = \"\";\n    _this.assistant = new QuranicAssistant();\n    _this.assistant.stringsManager.setLanguage(_this.props.strLang);\n    _this.assistantUser = new msgs.User(1, _this.assistant.stringsManager.getStr(qstrings.STR_ASSISTANT_NAME), require(\"../../assets/images/assistant_avatar.png\"));\n    _this.humanUser = new msgs.User(2, _this.assistant.stringsManager.getStr(qstrings.STR_USER_NAME), _this.props.strLang == \"ar\" ? require(\"../../assets/images/user_avatar_ar.png\") : require(\"../../assets/images/user_avatar_en.png\"));\n    _this.state = {\n      numMessages: 0\n    };\n    _this.messages = [];\n    _this.delayedMessages = [];\n    _this.delay = -1;\n    _this.assistant.intializeConversation(_assertThisInitialized(_this));\n    _this.userChatEnabled = false;\n    setTimeout(function () {\n      _this.showDelayedMessages();\n    }, 700);\n    _this.delay = 1400;\n    _this.scrollView = React.createRef();\n    return _this;\n  }\n  _createClass(ScreenQuranicAssistant, [{\n    key: \"messageReady\",\n    value: function messageReady(msg) {\n      this.addDelayedMsg(msg);\n    }\n  }, {\n    key: \"addDelayedMsg\",\n    value: function addDelayedMsg(msg) {\n      var _this2 = this;\n      this.delayedMessages.push(msg);\n      if (this.delayedMessages.length == 1) {\n        if (this.delay > 0) {\n          setTimeout(function () {\n            _this2.showDelayedMessages();\n          }, this.computeMsgDelay(msg));\n        }\n      }\n    }\n  }, {\n    key: \"computeMsgDelay\",\n    value: function computeMsgDelay(msg) {\n      var len = msg.hasOwnProperty(\"text\") ? msg.text.length : 0;\n      return Math.max(this.delay, 20 * len);\n    }\n  }, {\n    key: \"showDelayedMessages\",\n    value: function showDelayedMessages() {\n      var _this3 = this;\n      if (this.delayedMessages.length == 0) return;\n      var msg = this.delayedMessages.shift();\n      this.onSend(msg);\n      if (this.delayedMessages.length == 0) return;\n      setTimeout(function () {\n        _this3.showDelayedMessages();\n      }, this.computeMsgDelay(msg));\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.setState({\n        numMessages: this.state.numMessages + 1\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend(message) {\n      if (message instanceof ActionMessage) {\n        message.applyAction();\n      } else {\n        this.messages.push(message);\n      }\n      this.refresh();\n    }\n  }, {\n    key: \"onUserTextChange\",\n    value: function onUserTextChange(text) {\n      var str = \"\";\n      str = text;\n      this.userTxt = str;\n      this.refresh();\n    }\n  }, {\n    key: \"onUserMsg\",\n    value: function onUserMsg() {\n      this.userChatEnabled = false;\n      this.assistant.getResponse(-1, this.userTxt);\n      this.refresh();\n    }\n  }, {\n    key: \"enableUserChat\",\n    value: function enableUserChat(bEnable) {\n      if (bEnable) {\n        this.userTxt = \"\";\n        this.messageReady(new ActionMessage(this, \"EnableChat\"));\n      } else {\n        this.messageReady(new ActionMessage(this, \"DisableChat\"));\n      }\n    }\n  }, {\n    key: \"flushAllMessages\",\n    value: function flushAllMessages() {\n      var n = this.delayedMessages.length;\n      while (this.delayedMessages.length > 0) {\n        var msg = this.delayedMessages.shift();\n        this.onSend(msg);\n      }\n      if (n == 0) this.refresh();\n    }\n  }, {\n    key: \"endConversation\",\n    value: function endConversation() {\n      var _this4 = this;\n      this.flushAllMessages();\n      setTimeout(function () {\n        _this4.props.navigation.navigate(\"ScrList\");\n      }, 1800);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n      return _jsx(Screen, {\n        children: _jsx(View, {\n          style: styles.mainContainer,\n          children: _jsxs(View, {\n            style: styles.listContainer,\n            children: [_jsx(ScrollView, {\n              showsVerticalScrollIndicator: false,\n              ref: function ref(_ref) {\n                return _this5.scrollView = _ref;\n              },\n              onContentSizeChange: function onContentSizeChange() {\n                _this5.scrollView.scrollToEnd({\n                  animated: false\n                });\n              },\n              children: this.messages.map(function (msg) {\n                return msg.getRender(_this5);\n              })\n            }), this.getUserChatBox()]\n          })\n        })\n      });\n    }\n  }, {\n    key: \"getMessageStyle\",\n    value: function getMessageStyle() {\n      return [{\n        textAlign: \"center\",\n        color: \"#000000\",\n        paddingHorizontal: 10\n      }, this.getLargeContentFontBasicStyle];\n    }\n  }, {\n    key: \"addNewRev\",\n    value: function addNewRev(parseRes) {\n      var revision = new Revision();\n      revision.bIsNewRev = true;\n      revision.title = parseRes.title;\n      revision.strt = parseRes.strtAyah;\n      revision.end = parseRes.endAyah;\n      var realStrt = Math.min(revision.strt, revision.end);\n      var realEnd = Math.max(revision.strt, revision.end);\n      revision.strt = realStrt;\n      revision.end = realEnd;\n      this.props.reduxActionAddRevision(revision);\n    }\n  }, {\n    key: \"getUserChatBox\",\n    value: function getUserChatBox() {\n      if (this.userChatEnabled == false) return _jsx(_Fragment, {});\n      return _jsxs(View, {\n        style: styles.sendMsgBar,\n        children: [_jsx(TextInput, {\n          style: _objectSpread(_objectSpread({}, styles.sendMsgInput), this.getContentFontBasicStyle),\n          onChangeText: this.onUserTextChange.bind(this),\n          value: this.userTxt,\n          placeholder: this.assistant.stringsManager.getStr(qstrings.STR_ADD_YOUR_TXT),\n          onSubmitEditing: this.onUserMsg.bind(this)\n        }), _jsx(TouchableOpacity, {\n          activeOpacity: 0.7,\n          onPress: this.onUserMsg.bind(this),\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"message-text-outline\",\n            size: height18 - 8,\n            margin: 4,\n            color: colors.primary\n          })\n        })]\n      });\n    }\n  }]);\n  return ScreenQuranicAssistant;\n}(Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    strLang: state.strLang\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {\n    reduxActionAddRevision: reduxActionAddRevision\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps())(ScreenQuranicAssistant);\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#eeeeee\",\n    justifyContent: \"space-between\",\n    borderRadius: 10\n  },\n  listContainer: {\n    width: \"100%\",\n    flex: 1,\n    marginBottom: 20,\n    justifyContent: \"center\"\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    borderRadius: 30,\n    borderColor: \"#EEFFEE\",\n    borderWidth: 3\n  },\n  msgContents: {\n    flex: 1,\n    borderRadius: 3,\n    margin: 10\n  },\n  sendMsgBar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    alignSelf: \"flex-end\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  },\n  sendMsgInput: {\n    marginHorizontal: 5,\n    paddingHorizontal: 10,\n    height: height18,\n    flex: 1,\n    borderWidth: 1,\n    borderColor: colors.primary,\n    borderRadius: 10,\n    fontSize: height50,\n    color: colors.primary,\n    backgroundColor: colors.light_bg\n  }\n});","map":{"version":3,"names":["React","Component","connect","MaterialCommunityIcons","getTitleFontBasicStyle","getLargeContentFontBasicStyle","getContentFontBasicStyle","colors","qstrings","QuranicAssistant","msgs","Screen","reduxActionAddRevision","Revision","Dimensions","get","height","width","height18","height50","ActionMessage","scr","strAction","screen","userChatEnabled","ScreenQuranicAssistant","props","strLang","userTxt","assistant","stringsManager","setLanguage","assistantUser","User","getStr","STR_ASSISTANT_NAME","require","humanUser","STR_USER_NAME","state","numMessages","messages","delayedMessages","delay","intializeConversation","setTimeout","showDelayedMessages","scrollView","createRef","msg","addDelayedMsg","push","length","computeMsgDelay","len","hasOwnProperty","text","Math","max","shift","onSend","setState","message","applyAction","refresh","str","getResponse","bEnable","messageReady","n","flushAllMessages","navigation","navigate","styles","mainContainer","listContainer","ref","scrollToEnd","animated","map","getRender","getUserChatBox","textAlign","color","paddingHorizontal","parseRes","revision","bIsNewRev","title","strt","strtAyah","end","endAyah","realStrt","min","realEnd","sendMsgBar","sendMsgInput","onUserTextChange","bind","STR_ADD_YOUR_TXT","onUserMsg","primary","mapStateToProps","mapDispatchToProps","StyleSheet","create","flex","alignItems","backgroundColor","justifyContent","borderRadius","marginBottom","avatar","borderColor","borderWidth","msgContents","margin","flexDirection","alignSelf","marginHorizontal","fontSize","light_bg"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/screens/ScreenQuranicAssistant.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Text,\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport {\r\n  getTitleFontBasicStyle,\r\n  getLargeContentFontBasicStyle,\r\n  getContentFontBasicStyle,\r\n} from \"../helpers/scripts\";\r\nimport { colors } from \"app/constants\";\r\nimport * as qstrings from \"../helpers/QuranicAssistantStrings\";\r\nimport QuranicAssistant from \"../helpers/QuranicAssistant\";\r\nimport * as msgs from \"../helpers/Messages\";\r\nimport Screen from \"app/components/Screen\";\r\nimport { reduxActionAddRevision } from \"../redux/reduxActions\";\r\nimport Revision from \"../helpers/Revision\";\r\nconst { height, width } = Dimensions.get(\"window\");\r\nconst height18 = height / 18;\r\nconst height50 = height / 50;\r\nclass ActionMessage {\r\n  constructor(scr, strAction) {\r\n    this.screen = scr;\r\n    this.strAction = strAction;\r\n  }\r\n  applyAction() {\r\n    if (this.strAction == \"EnableChat\") this.screen.userChatEnabled = true;\r\n    if (this.strAction == \"DisableChat\") this.screen.userChatEnabled = false;\r\n  }\r\n}\r\nclass ScreenQuranicAssistant extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getContentFontBasicStyle = getContentFontBasicStyle(\r\n      this.props.strLang\r\n    );\r\n    this.getLargeContentFontBasicStyle = getLargeContentFontBasicStyle(\r\n      this.props.strLang\r\n    );\r\n    this.userTxt = \"\";\r\n    this.assistant = new QuranicAssistant();\r\n    this.assistant.stringsManager.setLanguage(this.props.strLang);\r\n    this.assistantUser = new msgs.User(\r\n      1,\r\n      this.assistant.stringsManager.getStr(qstrings.STR_ASSISTANT_NAME),\r\n      require(\"../../assets/images/assistant_avatar.png\")\r\n    );\r\n    this.humanUser = new msgs.User(\r\n      2,\r\n      this.assistant.stringsManager.getStr(qstrings.STR_USER_NAME),\r\n      this.props.strLang == \"ar\"\r\n        ? require(\"../../assets/images/user_avatar_ar.png\")\r\n        : require(\"../../assets/images/user_avatar_en.png\")\r\n    );\r\n    this.state = {\r\n      numMessages: 0,\r\n    };\r\n    this.messages = [];\r\n    this.delayedMessages = [];\r\n    this.delay = -1;\r\n    this.assistant.intializeConversation(this);\r\n    this.userChatEnabled = false;\r\n    setTimeout(() => {\r\n      this.showDelayedMessages();\r\n    }, 700);\r\n    this.delay = 1400;\r\n    this.scrollView = React.createRef();\r\n  }\r\n  messageReady(msg) {\r\n    this.addDelayedMsg(msg);\r\n  }\r\n  addDelayedMsg(msg) {\r\n    this.delayedMessages.push(msg);\r\n    if (this.delayedMessages.length == 1) {\r\n      if (this.delay > 0) {\r\n        setTimeout(() => {\r\n          this.showDelayedMessages();\r\n        }, this.computeMsgDelay(msg));\r\n      }\r\n    }\r\n  }\r\n\r\n  computeMsgDelay(msg) {\r\n    let len = msg.hasOwnProperty(\"text\") ? msg.text.length : 0;\r\n    return Math.max(this.delay, 20 * len);\r\n  }\r\n  showDelayedMessages() {\r\n    if (this.delayedMessages.length == 0) return;\r\n    let msg = this.delayedMessages.shift();\r\n    this.onSend(msg);\r\n    if (this.delayedMessages.length == 0) return;\r\n    setTimeout(() => {\r\n      this.showDelayedMessages();\r\n    }, this.computeMsgDelay(msg));\r\n  }\r\n  refresh() {\r\n    this.setState({\r\n      numMessages: this.state.numMessages + 1, //bShow,\r\n    });\r\n  }\r\n  onSend(message) {\r\n    if (message instanceof ActionMessage) {\r\n      message.applyAction();\r\n    } else {\r\n      this.messages.push(message);\r\n    }\r\n    this.refresh();\r\n  }\r\n  onUserTextChange(text) {\r\n    var str = \"\";\r\n    str = text;\r\n    this.userTxt = str;\r\n\r\n    this.refresh();\r\n  }\r\n  onUserMsg() {\r\n    this.userChatEnabled = false;\r\n    this.assistant.getResponse(-1, this.userTxt);\r\n    this.refresh();\r\n  }\r\n  enableUserChat(bEnable) {\r\n    if (bEnable) {\r\n      this.userTxt = \"\";\r\n      //this.flushAllMessages();\r\n      this.messageReady(new ActionMessage(this, \"EnableChat\"));\r\n    } else {\r\n      this.messageReady(new ActionMessage(this, \"DisableChat\"));\r\n    }\r\n    //this.userChatEnabled = bEnable;\r\n  }\r\n  flushAllMessages() {\r\n    let n = this.delayedMessages.length;\r\n    while (this.delayedMessages.length > 0) {\r\n      let msg = this.delayedMessages.shift();\r\n      this.onSend(msg);\r\n    }\r\n    if (n == 0) this.refresh();\r\n  }\r\n  endConversation() {\r\n    this.flushAllMessages();\r\n    setTimeout(() => {\r\n      this.props.navigation.navigate(\"ScrList\");\r\n    }, 1800);\r\n  }\r\n  render() {\r\n    return (\r\n      <Screen>\r\n        <View style={styles.mainContainer}>\r\n          <View style={styles.listContainer}>\r\n            <ScrollView\r\n              showsVerticalScrollIndicator={false}\r\n              ref={(ref) => (this.scrollView = ref)}\r\n              onContentSizeChange={() => {\r\n                this.scrollView.scrollToEnd({ animated: false });\r\n              }}\r\n            >\r\n              {this.messages.map((msg) => msg.getRender(this))}\r\n            </ScrollView>\r\n\r\n            {this.getUserChatBox()}\r\n          </View>\r\n        </View>\r\n      </Screen>\r\n    );\r\n  }\r\n\r\n  getMessageStyle() {\r\n    return [\r\n      {\r\n        textAlign: \"center\",\r\n        color: \"#000000\",\r\n        paddingHorizontal: 10,\r\n      },\r\n      this.getLargeContentFontBasicStyle,\r\n    ];\r\n  }\r\n  addNewRev(parseRes /*assumes all indexes converted to global */) {\r\n    let revision = new Revision();\r\n    revision.bIsNewRev = true;\r\n    revision.title = parseRes.title;\r\n    revision.strt = parseRes.strtAyah;\r\n    revision.end = parseRes.endAyah;\r\n    let realStrt = Math.min(revision.strt, revision.end);\r\n    let realEnd = Math.max(revision.strt, revision.end);\r\n    revision.strt = realStrt;\r\n    revision.end = realEnd;\r\n    this.props.reduxActionAddRevision(revision);\r\n  }\r\n  getUserChatBox() {\r\n    if (this.userChatEnabled == false) return <></>;\r\n    return (\r\n      <View style={styles.sendMsgBar}>\r\n        <TextInput\r\n          style={{ ...styles.sendMsgInput, ...this.getContentFontBasicStyle }}\r\n          onChangeText={this.onUserTextChange.bind(this)}\r\n          value={this.userTxt}\r\n          placeholder={this.assistant.stringsManager.getStr(\r\n            qstrings.STR_ADD_YOUR_TXT\r\n          )}\r\n          onSubmitEditing={this.onUserMsg.bind(this)}\r\n        />\r\n        <TouchableOpacity\r\n          activeOpacity={0.7}\r\n          onPress={this.onUserMsg.bind(this)}\r\n        >\r\n          <MaterialCommunityIcons\r\n            name={\"message-text-outline\"}\r\n            size={height18 - 8}\r\n            margin={4}\r\n            color={colors.primary}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  strLang: state.strLang,\r\n});\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    reduxActionAddRevision,\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps()\r\n)(ScreenQuranicAssistant);\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#eeeeee\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: 10,\r\n  },\r\n  listContainer: {\r\n    width: \"100%\",\r\n    flex: 1,\r\n    marginBottom: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: 50,\r\n    height: 50,\r\n\r\n    borderRadius: 30,\r\n    borderColor: \"#EEFFEE\",\r\n    borderWidth: 3,\r\n  },\r\n  msgContents: {\r\n    flex: 1,\r\n    borderRadius: 3,\r\n    margin: 10,\r\n  },\r\n  sendMsgBar: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"flex-end\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n  },\r\n  sendMsgInput: {\r\n    marginHorizontal: 5,\r\n    paddingHorizontal: 10,\r\n    height: height18,\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: colors.primary,\r\n    borderRadius: 10,\r\n    fontSize: height50,\r\n    color: colors.primary,\r\n    backgroundColor: colors.light_bg,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}