{"ast":null,"code":"export var convertToArabicNumbers = function convertToArabicNumbers(num, dir) {\n  if (dir == 'rtl') {\n    var arabicNumbers = ['۰', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];\n    var chars = num.split('');\n    for (var i = 0; i < chars.length; i++) {\n      if (/\\d/.test(chars[i])) {\n        chars[i] = arabicNumbers[chars[i]];\n      }\n    }\n    return chars.join('');\n  } else {\n    return num;\n  }\n};","map":{"version":3,"names":["convertToArabicNumbers","num","dir","arabicNumbers","chars","split","i","length","test","join"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/helpers/convertToArabicNumbers.js"],"sourcesContent":["export const convertToArabicNumbers = (num, dir) => {\r\n  if (dir == 'rtl') {\r\n    let arabicNumbers = ['۰', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];\r\n    let chars = num.split('');\r\n    for (let i = 0; i < chars.length; i++) {\r\n      if (/\\d/.test(chars[i])) {\r\n        chars[i] = arabicNumbers[chars[i]];\r\n      }\r\n    }\r\n    return chars.join('');\r\n  } else {\r\n    return num;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,GAAG,EAAEC,GAAG,EAAK;EAClD,IAAIA,GAAG,IAAI,KAAK,EAAE;IAChB,IAAIC,aAAa,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtE,IAAIC,KAAK,GAAGH,GAAG,CAACI,KAAK,CAAC,EAAE,CAAC;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,IAAI,IAAI,CAACE,IAAI,CAACJ,KAAK,CAACE,CAAC,CAAC,CAAC,EAAE;QACvBF,KAAK,CAACE,CAAC,CAAC,GAAGH,aAAa,CAACC,KAAK,CAACE,CAAC,CAAC,CAAC;MACpC;IACF;IACA,OAAOF,KAAK,CAACK,IAAI,CAAC,EAAE,CAAC;EACvB,CAAC,MAAM;IACL,OAAOR,GAAG;EACZ;AACF,CAAC"},"metadata":{},"sourceType":"module"}