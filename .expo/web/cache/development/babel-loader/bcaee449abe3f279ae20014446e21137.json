{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Fragment } from \"react-native-web/dist/index\";\nimport { useKeepAwake } from 'expo-keep-awake';\nimport MyPager from \"../../../../components/MyPager\";\nimport Screen from \"../../../../components/Screen\";\nimport QuranReaderByLine from \"../../../helpers/QuranReaderByLine\";\nimport SVGLoader from \"../../../helpers/SVGLoader\";\nimport 'react';\nimport { useFocusEffect, useRoute } from '@react-navigation/native';\nimport QuranIndexer from \"../../../helpers/QuranIndexer\";\nimport { convertToArabicNumbers } from \"../../../helpers/scripts\";\nimport Center from \"../../../../components/Center\";\nimport Swiper from \"../../../../components/Swiper\";\nimport { useSelector } from 'react-redux';\nimport Sandbox from \"../../../../components/Sandbox\";\nimport SurahHeader from \"./SurahHeader\";\nimport RenderAyat from \"./RenderAyat\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar coloredList = ['ٱللَّهَ', 'لِلَّهِ', 'ٱللَّهِ', 'ٱللَّهُ', 'ٱللَّهَ'];\nvar PagerView = function PagerView() {\n  useKeepAwake();\n  var route = useRoute();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    localSurahIndx = _useState2[0],\n    setLocalSurahIdx = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    localAyahIndx = _useState4[0],\n    setLocalAyahIdx = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    pageNum = _useState6[0],\n    setPageNum = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    pageContent = _useState8[0],\n    setPageContent = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    multiPageContent = _useState10[0],\n    setMultiPageContent = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    markedAyah = _useState12[0],\n    setMarkedAyah = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    mushafPages = _useState14[0],\n    setMushafPages = _useState14[1];\n  var ayahIndex = route.params.ayahIndex;\n  var quranIndexer = new QuranIndexer();\n  var reduxState = useSelector(function (state) {\n    return state;\n  });\n  var onAyahLongPress = function onAyahLongPress(iAyah, iSurah) {\n    if (iSurah == localSurahIndx) {\n      var engNum = convertToArabicNumbers(iAyah, 'ltr');\n      setMarkedAyah(engNum);\n      var globalAyah = quranIndexer.getAyahGlobalIndx(iSurah, +engNum);\n      handleRevProgress(globalAyah);\n    }\n  };\n  var quranReader = new QuranReaderByLine(quranIndexer);\n  var svgLoader = new SVGLoader();\n  var getNumBg = function getNumBg(num, idx) {\n    if (convertToArabicNumbers(num, 'ltr') == markedAyah && idx == localSurahIndx) return '#ff0';\n  };\n  var Basmalah = function Basmalah() {\n    return _jsx(Text, {\n      style: styles.basmalah,\n      children: \"\\u0628\\u0633\\u0645 \\u0627\\u0644\\u0644\\u0647 \\u0627\\u0644\\u0631\\u062D\\u0645\\u0646 \\u0627\\u0644\\u0631\\u062D\\u064A\\u0645\"\n    }, Math.random().toString());\n  };\n  var renderSpecialSurah = function renderSpecialSurah(ayat, shortTxt) {\n    return _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'center'\n      },\n      children: _jsx(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        children: _jsx(RenderAyat, {\n          ayat: ayat,\n          shortTxt: shortTxt,\n          localSurahIndx: localSurahIndx\n        })\n      })\n    }, Math.random().toString());\n  };\n  var renderItem = function renderItem(_ref) {\n    var page = _ref.item;\n    switch (page.type) {\n      case 'Basmalah':\n        return Basmalah();\n      case 'Surah':\n        return _jsx(SurahHeader, {\n          name: page.lineTxt\n        });\n      case 'Ayah':\n        if ([1, 2].includes(pageNum)) {\n          return renderSpecialSurah(page.allAyat, page.shortTxt);\n        } else {\n          return _jsx(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: page.shortTxt && 'center'\n            },\n            children: _jsx(RenderAyat, {\n              ayat: page.allAyat,\n              shortTxt: page.shortTxt,\n              localSurahIndx: localSurahIndx\n            })\n          }, Math.random().toString());\n        }\n      default:\n        return _jsx(Text, {\n          children: \"error\"\n        });\n    }\n  };\n  var renderPageContent = function renderPageContent(pageContent, pageNum) {\n    return _jsx(FlatList, {\n      keyExtractor: function keyExtractor() {\n        return Math.random().toString();\n      },\n      data: pageContent,\n      renderItem: renderItem,\n      contentContainerStyle: {\n        height: '99%',\n        width: '100%',\n        justifyContent: ![1, 2].includes(pageNum) ? 'space-between' : 'center'\n      }\n    });\n  };\n  useFocusEffect(useCallback(function () {\n    var _quranIndexer$getAyah = quranIndexer.getAyahLocalIndx(ayahIndex),\n      localSurahIndx = _quranIndexer$getAyah.localSurahIndx,\n      localAyahIndx = _quranIndexer$getAyah.localAyahIndx;\n    setLocalSurahIdx(localSurahIndx);\n    setLocalAyahIdx(localAyahIndx);\n    setMarkedAyah(localAyahIndx);\n    var pageNum = quranIndexer.getPageFromAyah(ayahIndex);\n    setPageNum(pageNum);\n  }, [ayahIndex, route.params]));\n  useEffect(function () {\n    if (!(mushafPages != null && mushafPages.length)) {\n      var currPageNum = pageNum - 5;\n      var leftSide = [];\n      var rightSide = [];\n      var temp = [];\n      for (var page = currPageNum; page <= currPageNum + 10; page++) {\n        if (page <= 0) leftSide.push(page);else rightSide.push(page);\n        !mushafPages.includes(page) && temp.push(page);\n      }\n      console.log(temp);\n      setMushafPages(temp);\n    }\n  }, [pageNum]);\n  useEffect(function () {\n    if ((mushafPages == null ? void 0 : mushafPages.length) == 11) {\n      var contentArr = [];\n      for (var _iterator = _createForOfIteratorHelperLoose(mushafPages), _step; !(_step = _iterator()).done;) {\n        var page = _step.value;\n        var content = quranReader.getPage(page);\n        contentArr.push({\n          page: page,\n          content: content,\n          pageNum: page > 0 ? page : 604 + page\n        });\n      }\n      setMultiPageContent(contentArr);\n    }\n  }, [mushafPages]);\n  var handlePageChange = function handlePageChange(position) {\n    if (mushafPages.indexOf(pageNum) !== position) {\n      console.log('change');\n      setPageNum(mushafPages[position]);\n    }\n  };\n  return _jsx(Screen, {\n    style: {\n      padding: 10\n    },\n    children: (multiPageContent == null ? void 0 : multiPageContent.length) == 11 ? _jsx(MyPager, {\n      initialPage: mushafPages.indexOf(pageNum),\n      handlePageChange: handlePageChange,\n      children: multiPageContent.map(function (page) {\n        return _jsx(View, {\n          style: {\n            height: '100%'\n          },\n          children: renderPageContent(page.content, page.pageNum)\n        }, Math.random().toString());\n      })\n    }) : _jsx(Image, {\n      source: require(\"../../../../assets/splash.png\"),\n      style: {\n        width: '100%',\n        height: '100%',\n        resizeMode: 'cover'\n      }\n    })\n  });\n};\nexport default PagerView;\nvar styles = StyleSheet.create({\n  basmalah: {\n    fontSize: width * 0.04,\n    textAlign: 'center',\n    fontFamily: 'UthmanicHafs'\n  },\n  ayah: {\n    fontSize: width * 0.043,\n    flexGrow: 1,\n    textAlign: 'center',\n    fontFamily: 'UthmanicHafs'\n  }\n});","map":{"version":3,"names":["React","memo","useCallback","useEffect","useRef","useState","Fragment","useKeepAwake","MyPager","Screen","QuranReaderByLine","SVGLoader","useFocusEffect","useRoute","QuranIndexer","convertToArabicNumbers","Center","Swiper","useSelector","Sandbox","SurahHeader","RenderAyat","Dimensions","get","width","height","coloredList","PagerView","route","localSurahIndx","setLocalSurahIdx","localAyahIndx","setLocalAyahIdx","pageNum","setPageNum","pageContent","setPageContent","multiPageContent","setMultiPageContent","markedAyah","setMarkedAyah","mushafPages","setMushafPages","ayahIndex","params","quranIndexer","reduxState","state","onAyahLongPress","iAyah","iSurah","engNum","globalAyah","getAyahGlobalIndx","handleRevProgress","quranReader","svgLoader","getNumBg","num","idx","Basmalah","styles","basmalah","Math","random","toString","renderSpecialSurah","ayat","shortTxt","flexDirection","justifyContent","alignItems","renderItem","page","item","type","lineTxt","includes","allAyat","renderPageContent","getAyahLocalIndx","getPageFromAyah","length","currPageNum","leftSide","rightSide","temp","push","console","log","contentArr","content","getPage","handlePageChange","position","indexOf","padding","map","require","resizeMode","StyleSheet","create","fontSize","textAlign","fontFamily","ayah","flexGrow"],"sources":["C:/Users/Tysseer Harak/Desktop/Data/Code/React Native/Dawem/app/js/screens/MushafScreen/comp/PagerView.jsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  Dimensions,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n  Image,\r\n  Animated,\r\n  FlatList,\r\n  Fragment,\r\n} from 'react-native';\r\nimport { useKeepAwake } from 'expo-keep-awake';\r\nimport MyPager from 'app/components/MyPager';\r\n\r\nimport Screen from 'app/components/Screen';\r\nimport QuranReaderByLine from 'app/js/helpers/QuranReaderByLine';\r\nimport SVGLoader from 'app/js/helpers/SVGLoader';\r\nimport {} from 'react';\r\nimport { useFocusEffect, useRoute } from '@react-navigation/native';\r\n\r\nimport QuranIndexer from 'app/js/helpers/QuranIndexer';\r\nimport { convertToArabicNumbers } from 'app/js/helpers/scripts';\r\nimport Center from 'app/components/Center';\r\nimport Swiper from 'app/components/Swiper';\r\nimport { useSelector } from 'react-redux';\r\nimport Sandbox from 'app/components/Sandbox';\r\nimport SurahHeader from './SurahHeader';\r\nimport RenderAyat from './RenderAyat';\r\n// import SwipeableMushaf from './SwipeableMushaf';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst coloredList = [\r\n  // 'رَبَّكُمُ',\r\n  'ٱللَّهَ',\r\n  'لِلَّهِ',\r\n  'ٱللَّهِ',\r\n  'ٱللَّهُ',\r\n  // 'بِٱللَّهِ',\r\n  // 'رَبُّكَ',\r\n  'ٱللَّهَ',\r\n];\r\n\r\nconst PagerView = () => {\r\n  // prevent screen form sleeping\r\n  useKeepAwake();\r\n\r\n  const route = useRoute();\r\n\r\n  const [localSurahIndx, setLocalSurahIdx] = useState();\r\n  const [localAyahIndx, setLocalAyahIdx] = useState();\r\n  const [pageNum, setPageNum] = useState();\r\n  const [pageContent, setPageContent] = useState([]);\r\n  const [multiPageContent, setMultiPageContent] = useState([]);\r\n  const [markedAyah, setMarkedAyah] = useState();\r\n\r\n  // --------\r\n  const [mushafPages, setMushafPages] = useState([]);\r\n\r\n  const { ayahIndex } = route.params;\r\n\r\n  var quranIndexer = new QuranIndexer();\r\n  const reduxState = useSelector((state) => state);\r\n\r\n  const onAyahLongPress = (iAyah /*local */, iSurah) => {\r\n    if (iSurah == localSurahIndx) {\r\n      var engNum = convertToArabicNumbers(iAyah, 'ltr');\r\n      setMarkedAyah(engNum);\r\n      var globalAyah = quranIndexer.getAyahGlobalIndx(iSurah, +engNum);\r\n      handleRevProgress(globalAyah);\r\n    }\r\n  };\r\n\r\n  const quranReader = new QuranReaderByLine(quranIndexer);\r\n  const svgLoader = new SVGLoader();\r\n\r\n  // todo: highlight\r\n  //  var curSurah = quranIndexer.getSurahFromAyah(ayahIndex);\r\n\r\n  const getNumBg = (num, idx) => {\r\n    if (\r\n      convertToArabicNumbers(num, 'ltr') == markedAyah &&\r\n      // convertToArabicNumbers(num, 'ltr') == localAyahIndx &&\r\n      idx == localSurahIndx\r\n    )\r\n      return '#ff0';\r\n  };\r\n\r\n\r\n\r\n  const Basmalah = () => (\r\n    <Text key={Math.random().toString()} style={styles.basmalah}>\r\n      بسم الله الرحمن الرحيم\r\n    </Text>\r\n  );\r\n\r\n  const renderSpecialSurah = (ayat, shortTxt) => (\r\n    <View\r\n      key={Math.random().toString()}\r\n      style={{ flexDirection: 'row', justifyContent: 'center' }}\r\n    >\r\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n        <RenderAyat\r\n          ayat={ayat}\r\n          shortTxt={shortTxt}\r\n          localSurahIndx={localSurahIndx}\r\n        />\r\n        {/* {newRenderAyat(ayat)} */}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const renderItem = ({ item: page }) => {\r\n    switch (page.type) {\r\n      case 'Basmalah':\r\n        return Basmalah();\r\n\r\n      case 'Surah':\r\n        return <SurahHeader name={page.lineTxt} />;\r\n\r\n      case 'Ayah':\r\n        if ([1, 2].includes(pageNum)) {\r\n          return renderSpecialSurah(page.allAyat, page.shortTxt);\r\n        } else {\r\n          return (\r\n            <View\r\n              key={Math.random().toString()}\r\n              style={{\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                justifyContent: page.shortTxt && 'center',\r\n              }}\r\n            >\r\n              <RenderAyat\r\n                ayat={page.allAyat}\r\n                shortTxt={page.shortTxt}\r\n                localSurahIndx={localSurahIndx}\r\n              />\r\n              {/* {newRenderAyat(page.allAyat, page.shortTxt)} */}\r\n            </View>\r\n          );\r\n        }\r\n\r\n      default:\r\n        return <Text>error</Text>;\r\n    }\r\n  };\r\n\r\n  const renderPageContent = (pageContent, pageNum) => (\r\n    <FlatList\r\n      keyExtractor={() => Math.random().toString()}\r\n      data={pageContent}\r\n      renderItem={renderItem}\r\n      // ListFooterComponent={() => (\r\n      //   <Center style={{ marginTop: 20 }}>\r\n      //     <Text>{pageNum}</Text>\r\n      //   </Center>\r\n      // )}\r\n      contentContainerStyle={{\r\n        height: '99%',\r\n        width: '100%',\r\n        // backgroundColor: 'red',\r\n        // justifyContent: 'space-between',\r\n        justifyContent: ![1, 2].includes(pageNum) ? 'space-between' : 'center',\r\n      }}\r\n    />\r\n  );\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const { localSurahIndx, localAyahIndx } =\r\n        quranIndexer.getAyahLocalIndx(ayahIndex);\r\n\r\n      setLocalSurahIdx(localSurahIndx);\r\n      setLocalAyahIdx(localAyahIndx);\r\n      setMarkedAyah(localAyahIndx);\r\n\r\n      const pageNum = quranIndexer.getPageFromAyah(ayahIndex);\r\n      setPageNum(pageNum);\r\n\r\n      // get\r\n    }, [ayahIndex, route.params])\r\n  );\r\n\r\n  // const renderPagerContent = (page, idx) => {\r\n  //   const content = quranReader.getPage(page);\r\n  //   setPageContent(content);\r\n\r\n  //   return <View key={idx}>{renderPageContent()}</View>;\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // check if mushafPages => start filling\r\n    // check pages count after curr page\r\n    // console.log('got here 11');\r\n    if (!mushafPages?.length) {\r\n      // console.log('got here');\r\n      const currPageNum = pageNum - 5;\r\n      let leftSide = [];\r\n      let rightSide = [];\r\n      let temp = [];\r\n\r\n      for (let page = currPageNum; page <= currPageNum + 10; page++) {\r\n        if (page <= 0) leftSide.push(page);\r\n        else rightSide.push(page);\r\n        !mushafPages.includes(page) && temp.push(page);\r\n      }\r\n      console.log(temp);\r\n      setMushafPages(temp);\r\n    }\r\n    // else {\r\n    //   if (mushafPages.length - 1 - mushafPages.indexOf(pageNum) < 5) {\r\n    //     console.log('fill right');\r\n    //   } else if (mushafPages.indexOf(pageNum) < 5) {\r\n    //     console.log('fill left');\r\n    //   } else {\r\n    //     ('dont fill');\r\n    //   }\r\n    // }\r\n  }, [pageNum]);\r\n\r\n  useEffect(() => {\r\n    if (mushafPages?.length == 11) {\r\n      // console.log('mushafPages', mushafPages);\r\n      let contentArr = [];\r\n      for (const page of mushafPages) {\r\n        // console.log(page);\r\n        const content = quranReader.getPage(page);\r\n        contentArr.push({\r\n          page,\r\n          content,\r\n          pageNum: page > 0 ? page : 604 + page,\r\n        });\r\n        // setMultiPageContent((prev) => [\r\n        //   ...prev,\r\n        //   { page, content, pageNum: page > 0 ? page : 604 + page },\r\n        // ]);\r\n      }\r\n\r\n      setMultiPageContent(contentArr);\r\n    }\r\n  }, [mushafPages]);\r\n\r\n  const handlePageChange = (position) => {\r\n    if (mushafPages.indexOf(pageNum) !== position) {\r\n      console.log('change');\r\n      setPageNum(mushafPages[position]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Screen style={{ padding: 10 }}>\r\n      {multiPageContent?.length == 11 ? (\r\n        <MyPager\r\n          initialPage={mushafPages.indexOf(pageNum)}\r\n          handlePageChange={handlePageChange}\r\n        >\r\n          {multiPageContent.map((page) => (\r\n            <View key={Math.random().toString()} style={{ height: '100%' }}>\r\n              {renderPageContent(page.content, page.pageNum)}\r\n            </View>\r\n          ))}\r\n        </MyPager>\r\n      ) : (\r\n        <Image\r\n          source={require('assets/splash.png')}\r\n          style={{ width: '100%', height: '100%', resizeMode: 'cover' }}\r\n        />\r\n      )}\r\n    </Screen>\r\n  );\r\n};\r\n\r\nexport default PagerView;\r\n\r\nconst styles = StyleSheet.create({\r\n  basmalah: {\r\n    fontSize: width * 0.04,\r\n    textAlign: 'center',\r\n    fontFamily: 'UthmanicHafs',\r\n  },\r\n  ayah: {\r\n    fontSize: width * 0.043,\r\n    flexGrow: 1,\r\n    textAlign: 'center',\r\n    fontFamily: 'UthmanicHafs',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}